Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(runtime_limit=10, collection_size_cap=1000, growth_cap=500, numeric_magnitude_limit=1000000000000.0, step_limit=200))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fda0a279640>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fda10c9fc10>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fda0a2790a0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fda10bde640>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fda10bdef80>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fda08d90430>]
========================================
Start Run
========================================
2021-12-17 18:12:19.749495 | GENERATION: 1 | ERRORS: best=219, median=875.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=67.75 | VIRUSES: gene_rate=0.000
2021-12-17 18:12:23.254284 | GENERATION: 2 | ERRORS: best=106, median=224.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=84.755 | VIRUSES: gene_rate=0.004
2021-12-17 18:12:27.234685 | GENERATION: 3 | ERRORS: best=106, median=153.5, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=84.415 | VIRUSES: gene_rate=0.021
2021-12-17 18:12:31.411940 | GENERATION: 4 | ERRORS: best=82, median=149.5, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=83.075 | VIRUSES: gene_rate=0.028
2021-12-17 18:12:35.986451 | GENERATION: 5 | ERRORS: best=82, median=114.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=83.38 | VIRUSES: gene_rate=0.042
2021-12-17 18:12:40.303784 | GENERATION: 6 | ERRORS: best=82, median=141.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=83.76 | VIRUSES: gene_rate=0.052
2021-12-17 18:12:44.521356 | GENERATION: 7 | ERRORS: best=61, median=126.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=84.61 | VIRUSES: gene_rate=0.066
2021-12-17 18:12:48.757470 | GENERATION: 8 | ERRORS: best=58, median=115.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=84.69 | VIRUSES: gene_rate=0.076
2021-12-17 18:12:53.043700 | GENERATION: 9 | ERRORS: best=50, median=124.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=83.58 | VIRUSES: gene_rate=0.081
2021-12-17 18:12:57.005879 | GENERATION: 10 | ERRORS: best=50, median=109.5, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=82.875 | VIRUSES: gene_rate=0.097
2021-12-17 18:13:00.640258 | GENERATION: 11 | ERRORS: best=39, median=106.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=82.565 | VIRUSES: gene_rate=0.111
Simplifying genome of length 83 with total error 0.
Simplified genome by 2 to length 81.
Simplified genome by 2 to length 79.
Simplified genome by 1 to length 78.
Simplified genome by 2 to length 76.
Simplified genome by 2 to length 74.
Simplified genome by 2 to length 72.
Simplified genome by 2 to length 70.
Simplified genome by 2 to length 68.
Simplified genome by 3 to length 65.
Simplified genome by 2 to length 63.
Simplified genome by 1 to length 62.
Simplified genome by 3 to length 59.
Simplified genome by 2 to length 57.
Simplified genome by 3 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 2 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 3 to length 45.
Simplified genome by 3 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 2 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 3 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 2 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 3 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([VirusInput(input_index=2), VirusInput(input_index=0), VirusInput(input_index=1), VirusInstructionMeta(name='int_max', code_blocks=0), VirusInstructionMeta(name='int_min', code_blocks=0), VirusInput(input_index=0), VirusInput(input_index=1), VirusInstructionMeta(name='int_min', code_blocks=0), VirusInstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (vinput_2 vinput_0 vinput_1 vint_max vint_min vinput_0 vinput_1 vint_min vint_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:03
