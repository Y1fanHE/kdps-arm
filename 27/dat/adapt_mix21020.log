Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['stdout'], push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, growth_cap=500, collection_size_cap=1000, runtime_limit=10, step_limit=200))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f9fc056e4c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f9fc056eeb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f9fc056e850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f9fb8266140>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f9fb82666c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f9fc0572e50>]
========================================
Start Run
========================================
2021-12-17 10:57:58.170085 | GENERATION: 1 | ERRORS: best=223, median=4588.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=59.35
2021-12-17 10:58:02.374618 | GENERATION: 2 | ERRORS: best=92, median=235.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=86.68
2021-12-17 10:58:08.223763 | GENERATION: 3 | ERRORS: best=92, median=235.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=85.665
2021-12-17 10:58:14.176344 | GENERATION: 4 | ERRORS: best=92, median=122.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=83.165
2021-12-17 10:58:19.853067 | GENERATION: 5 | ERRORS: best=92, median=207.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=82.68
2021-12-17 10:58:24.628359 | GENERATION: 6 | ERRORS: best=92, median=228.5, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=81.335
2021-12-17 10:58:29.594774 | GENERATION: 7 | ERRORS: best=92, median=122.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=78.91
2021-12-17 10:58:34.160574 | GENERATION: 8 | ERRORS: best=92, median=122.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=77.25
2021-12-17 10:58:38.586805 | GENERATION: 9 | ERRORS: best=92, median=132.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=77.29
2021-12-17 10:58:42.696242 | GENERATION: 10 | ERRORS: best=92, median=122.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=75.425
2021-12-17 10:58:46.642866 | GENERATION: 11 | ERRORS: best=92, median=122.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=73.135
2021-12-17 10:58:50.421610 | GENERATION: 12 | ERRORS: best=92, median=122.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=70.34
2021-12-17 10:58:54.937609 | GENERATION: 13 | ERRORS: best=92, median=122.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=71.87
2021-12-17 10:58:59.185909 | GENERATION: 14 | ERRORS: best=92, median=122.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=67.115
2021-12-17 10:59:03.070779 | GENERATION: 15 | ERRORS: best=92, median=122.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=65.92
2021-12-17 10:59:07.863229 | GENERATION: 16 | ERRORS: best=92, median=122.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=64.8
2021-12-17 10:59:13.248791 | GENERATION: 17 | ERRORS: best=89, median=122.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=62.765
2021-12-17 10:59:18.726060 | GENERATION: 18 | ERRORS: best=89, median=104.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=58.345
2021-12-17 10:59:24.758909 | GENERATION: 19 | ERRORS: best=89, median=122.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=55.995
2021-12-17 10:59:30.368174 | GENERATION: 20 | ERRORS: best=80, median=122.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=57.11
2021-12-17 10:59:35.763549 | GENERATION: 21 | ERRORS: best=80, median=156.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=56.59
2021-12-17 10:59:41.488350 | GENERATION: 22 | ERRORS: best=80, median=122.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=54.205
2021-12-17 10:59:46.637010 | GENERATION: 23 | ERRORS: best=80, median=124.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=53.985
2021-12-17 10:59:51.910725 | GENERATION: 24 | ERRORS: best=74, median=122.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=53.295
2021-12-17 10:59:56.575494 | GENERATION: 25 | ERRORS: best=74, median=159.5, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=54.005
2021-12-17 11:00:00.876146 | GENERATION: 26 | ERRORS: best=79, median=139.5, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=50.255
2021-12-17 11:00:04.835279 | GENERATION: 27 | ERRORS: best=79, median=122.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=49.155
2021-12-17 11:00:08.509241 | GENERATION: 28 | ERRORS: best=75, median=119.5, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=48.16
2021-12-17 11:00:11.718943 | GENERATION: 29 | ERRORS: best=75, median=122.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=47.04
2021-12-17 11:00:14.841222 | GENERATION: 30 | ERRORS: best=69, median=122.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=48.615
2021-12-17 11:00:17.968217 | GENERATION: 31 | ERRORS: best=45, median=122.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=46.525
2021-12-17 11:00:20.871460 | GENERATION: 32 | ERRORS: best=45, median=122.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=53.23
2021-12-17 11:00:23.962898 | GENERATION: 33 | ERRORS: best=45, median=122.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=50.125
2021-12-17 11:00:26.974592 | GENERATION: 34 | ERRORS: best=45, median=158.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=49.66
2021-12-17 11:00:29.988447 | GENERATION: 35 | ERRORS: best=45, median=151.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=50.45
2021-12-17 11:00:32.856506 | GENERATION: 36 | ERRORS: best=45, median=106.5, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=46.615
2021-12-17 11:00:35.967889 | GENERATION: 37 | ERRORS: best=45, median=122.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=50.515
2021-12-17 11:00:39.003136 | GENERATION: 38 | ERRORS: best=41, median=160.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=50.14
2021-12-17 11:00:42.175426 | GENERATION: 39 | ERRORS: best=41, median=117.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=48.43
2021-12-17 11:00:45.700963 | GENERATION: 40 | ERRORS: best=11, median=122.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=49.46
2021-12-17 11:00:50.841796 | GENERATION: 41 | ERRORS: best=11, median=100.5, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=52.32
Simplifying genome of length 54 with total error 0.
Simplified genome by 2 to length 52.
Simplified genome by 2 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 2 to length 47.
Simplified genome by 1 to length 46.
Simplified genome by 3 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 2 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 3 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome to length 15 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='exec_swap', code_blocks=2), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Closer(), Closer(), Closer(), Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=2), Input(input_index=1)])
	Program:
	 (exec_swap (int_min int_max print_int exec_if () ()) (input_0 input_1 input_2 int_max int_min input_2 input_1))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:03:26
