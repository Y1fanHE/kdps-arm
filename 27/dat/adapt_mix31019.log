Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['stdout'], push_config=PushConfig(growth_cap=500, step_limit=200, collection_size_cap=1000, runtime_limit=10, numeric_magnitude_limit=1000000000000.0))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f57ade494c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f57ade49eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f57ade49850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f57a68d5bc0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f57a68c3200>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f57ade4ce50>]
========================================
Start Run
========================================
2021-12-17 10:32:46.374218 | GENERATION: 1 | ERRORS: best=213, median=230.0, diversity=0.065 | INDIVIDUALS: n=200, avg_genome_length=56.555
2021-12-17 10:32:52.732710 | GENERATION: 2 | ERRORS: best=90, median=213.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=51.26
2021-12-17 10:32:57.257511 | GENERATION: 3 | ERRORS: best=90, median=90.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=48.83
2021-12-17 10:33:02.029484 | GENERATION: 4 | ERRORS: best=90, median=117.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=46.86
2021-12-17 10:33:07.018322 | GENERATION: 5 | ERRORS: best=90, median=117.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=45.45
2021-12-17 10:33:11.169039 | GENERATION: 6 | ERRORS: best=90, median=117.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=42.81
2021-12-17 10:33:14.728157 | GENERATION: 7 | ERRORS: best=90, median=117.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=41.16
2021-12-17 10:33:18.209153 | GENERATION: 8 | ERRORS: best=90, median=117.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=39.065
2021-12-17 10:33:22.024880 | GENERATION: 9 | ERRORS: best=90, median=117.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=38.33
2021-12-17 10:33:25.911111 | GENERATION: 10 | ERRORS: best=90, median=117.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=37.095
2021-12-17 10:33:29.931144 | GENERATION: 11 | ERRORS: best=90, median=113.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=36.12
2021-12-17 10:33:33.645439 | GENERATION: 12 | ERRORS: best=90, median=113.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=33.79
2021-12-17 10:33:36.790179 | GENERATION: 13 | ERRORS: best=90, median=117.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=33.61
2021-12-17 10:33:40.062866 | GENERATION: 14 | ERRORS: best=89, median=117.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=32.595
2021-12-17 10:33:43.374845 | GENERATION: 15 | ERRORS: best=63, median=117.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=33.05
2021-12-17 10:33:46.924757 | GENERATION: 16 | ERRORS: best=63, median=117.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=34.66
2021-12-17 10:33:50.814173 | GENERATION: 17 | ERRORS: best=63, median=119.0, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=35.285
2021-12-17 10:33:54.332925 | GENERATION: 18 | ERRORS: best=62, median=117.0, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=36.585
2021-12-17 10:33:57.878303 | GENERATION: 19 | ERRORS: best=62, median=117.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=36.885
2021-12-17 10:34:01.530351 | GENERATION: 20 | ERRORS: best=62, median=117.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=37.21
2021-12-17 10:34:05.356753 | GENERATION: 21 | ERRORS: best=62, median=116.5, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=37.56
2021-12-17 10:34:09.201687 | GENERATION: 22 | ERRORS: best=62, median=117.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=37.545
2021-12-17 10:34:12.990754 | GENERATION: 23 | ERRORS: best=50, median=117.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=37.3
2021-12-17 10:34:16.859966 | GENERATION: 24 | ERRORS: best=50, median=113.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=38.1
2021-12-17 10:34:20.327199 | GENERATION: 25 | ERRORS: best=39, median=113.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=39.935
2021-12-17 10:34:23.615400 | GENERATION: 26 | ERRORS: best=39, median=108.5, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=39.87
2021-12-17 10:34:27.119475 | GENERATION: 27 | ERRORS: best=39, median=97.5, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=39.645
2021-12-17 10:34:30.497257 | GENERATION: 28 | ERRORS: best=39, median=113.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=39.6
2021-12-17 10:34:34.595399 | GENERATION: 29 | ERRORS: best=39, median=113.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=38.83
2021-12-17 10:34:37.991646 | GENERATION: 30 | ERRORS: best=39, median=112.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=38.905
Simplifying genome of length 35 with total error 0.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 3 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 2 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=1), InstructionMeta(name='exec_dup_times', code_blocks=1), Closer(), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_max int_min input_0 input_1 int_min int_max input_1 exec_dup_times () print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:26
