Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(runtime_limit=10, collection_size_cap=1000, growth_cap=500, numeric_magnitude_limit=1000000000000.0, step_limit=200))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f46775aa7f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f467ec5bf40>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f46775aa700>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f467ec68dc0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f467ec68300>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f467ec61a60>]
========================================
Start Run
========================================
2021-12-14 22:24:21.808331 | GENERATION: 1 | ERRORS: best=152, median=400.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=48.975
2021-12-14 22:24:25.873024 | GENERATION: 2 | ERRORS: best=87, median=245.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=60.995
2021-12-14 22:24:30.532274 | GENERATION: 3 | ERRORS: best=87, median=231.5, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=59.375
2021-12-14 22:24:34.557946 | GENERATION: 4 | ERRORS: best=70, median=233.5, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=58.3
2021-12-14 22:24:38.912682 | GENERATION: 5 | ERRORS: best=87, median=240.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=59.205
2021-12-14 22:24:43.022651 | GENERATION: 6 | ERRORS: best=87, median=230.5, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=58.675
2021-12-14 22:24:46.703413 | GENERATION: 7 | ERRORS: best=87, median=210.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=57.985
2021-12-14 22:24:50.165983 | GENERATION: 8 | ERRORS: best=87, median=240.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=55.62
2021-12-14 22:24:54.068788 | GENERATION: 9 | ERRORS: best=87, median=235.5, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=51.745
2021-12-14 22:24:57.708965 | GENERATION: 10 | ERRORS: best=84, median=151.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=50.345
2021-12-14 22:25:00.922337 | GENERATION: 11 | ERRORS: best=75, median=201.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=51.55
2021-12-14 22:25:04.300161 | GENERATION: 12 | ERRORS: best=75, median=228.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=52.085
2021-12-14 22:25:07.624851 | GENERATION: 13 | ERRORS: best=70, median=201.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=51.68
2021-12-14 22:25:10.979806 | GENERATION: 14 | ERRORS: best=49, median=249.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=49.275
2021-12-14 22:25:13.995652 | GENERATION: 15 | ERRORS: best=49, median=157.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=46.965
2021-12-14 22:25:16.937133 | GENERATION: 16 | ERRORS: best=49, median=129.5, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=45.345
2021-12-14 22:25:20.013448 | GENERATION: 17 | ERRORS: best=49, median=149.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=47.24
2021-12-14 22:25:22.969272 | GENERATION: 18 | ERRORS: best=49, median=120.5, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=43.58
2021-12-14 22:25:25.949871 | GENERATION: 19 | ERRORS: best=49, median=119.0, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=42.55
2021-12-14 22:25:28.682458 | GENERATION: 20 | ERRORS: best=49, median=114.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=38.88
2021-12-14 22:25:31.570892 | GENERATION: 21 | ERRORS: best=49, median=114.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=37.78
2021-12-14 22:25:34.501346 | GENERATION: 22 | ERRORS: best=47, median=124.5, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=36.275
2021-12-14 22:25:37.181050 | GENERATION: 23 | ERRORS: best=47, median=119.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=34.725
2021-12-14 22:25:39.917597 | GENERATION: 24 | ERRORS: best=47, median=124.0, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=34.225
2021-12-14 22:25:42.628851 | GENERATION: 25 | ERRORS: best=47, median=104.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=35.43
2021-12-14 22:25:45.337161 | GENERATION: 26 | ERRORS: best=38, median=123.5, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=35.905
2021-12-14 22:25:48.141582 | GENERATION: 27 | ERRORS: best=38, median=136.0, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=38.83
2021-12-14 22:25:50.662167 | GENERATION: 28 | ERRORS: best=38, median=115.0, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=38.95
2021-12-14 22:25:53.522319 | GENERATION: 29 | ERRORS: best=38, median=115.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=38.92
2021-12-14 22:25:56.080064 | GENERATION: 30 | ERRORS: best=38, median=106.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=36.695
2021-12-14 22:25:58.767312 | GENERATION: 31 | ERRORS: best=38, median=114.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=35.455
2021-12-14 22:26:01.540012 | GENERATION: 32 | ERRORS: best=32, median=118.5, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=35.145
2021-12-14 22:26:04.580382 | GENERATION: 33 | ERRORS: best=32, median=114.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=37.37
Simplifying genome of length 24 with total error 0.
Simplified genome by 3 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_1 input_2 int_min input_0 input_1 input_2 int_max int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:05
