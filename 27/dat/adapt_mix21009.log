Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['stdout'], push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, step_limit=200, collection_size_cap=1000, runtime_limit=10, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f831d0454c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f831d045eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f831d045640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f831496bb80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f831496b2c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f831d048e50>]
========================================
Start Run
========================================
2021-12-17 05:31:20.431900 | GENERATION: 1 | ERRORS: best=237, median=4688.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=59.875
2021-12-17 05:31:22.194071 | GENERATION: 2 | ERRORS: best=189, median=237.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=55.855
2021-12-17 05:31:24.474849 | GENERATION: 3 | ERRORS: best=181, median=237.0, diversity=0.35 | INDIVIDUALS: n=200, avg_genome_length=45.65
2021-12-17 05:31:27.481344 | GENERATION: 4 | ERRORS: best=96, median=237.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=45.975
2021-12-17 05:31:30.006540 | GENERATION: 5 | ERRORS: best=90, median=186.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=42.215
2021-12-17 05:31:32.595730 | GENERATION: 6 | ERRORS: best=90, median=114.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=40.895
2021-12-17 05:31:35.165473 | GENERATION: 7 | ERRORS: best=89, median=167.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=40.035
2021-12-17 05:31:37.652920 | GENERATION: 8 | ERRORS: best=74, median=114.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=39.405
2021-12-17 05:31:40.035551 | GENERATION: 9 | ERRORS: best=53, median=179.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=39.46
2021-12-17 05:31:42.716789 | GENERATION: 10 | ERRORS: best=53, median=109.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=38.875
2021-12-17 05:31:45.236819 | GENERATION: 11 | ERRORS: best=49, median=109.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=38.9
2021-12-17 05:31:47.525068 | GENERATION: 12 | ERRORS: best=41, median=103.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=37.13
Simplifying genome of length 36 with total error 0.
Simplified genome by 2 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 2 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 2 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 2 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_1 int_min input_2 int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:44
