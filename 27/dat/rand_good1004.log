Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['stdout'], push_config=PushConfig(step_limit=200, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, growth_cap=500, collection_size_cap=1000))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f3355f477f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f335d639f40>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f3355f470a0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f335d658180>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f335ea35340>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f335d63ea60>]
========================================
Start Run
========================================
2021-12-14 21:46:14.089291 | GENERATION: 1 | ERRORS: best=179, median=239.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=56.7
2021-12-14 21:46:16.977640 | GENERATION: 2 | ERRORS: best=90, median=215.5, diversity=0.31 | INDIVIDUALS: n=200, avg_genome_length=41.32
2021-12-14 21:46:19.828775 | GENERATION: 3 | ERRORS: best=89, median=182.0, diversity=0.305 | INDIVIDUALS: n=200, avg_genome_length=37.555
2021-12-14 21:46:22.745981 | GENERATION: 4 | ERRORS: best=88, median=215.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=33.14
2021-12-14 21:46:25.887508 | GENERATION: 5 | ERRORS: best=87, median=137.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=31.065
2021-12-14 21:46:28.759107 | GENERATION: 6 | ERRORS: best=73, median=136.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=30.795
2021-12-14 21:46:31.520623 | GENERATION: 7 | ERRORS: best=58, median=182.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=29.505
2021-12-14 21:46:34.056121 | GENERATION: 8 | ERRORS: best=44, median=188.5, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=29.13
2021-12-14 21:46:36.654297 | GENERATION: 9 | ERRORS: best=44, median=178.5, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=28.16
Simplifying genome of length 23 with total error 0.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=1), Input(input_index=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_1 int_min input_2 int_max input_1 input_0 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:44
