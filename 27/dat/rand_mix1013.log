Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(runtime_limit=10, growth_cap=500, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, step_limit=200), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f31e6b4d160>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f31efc52bb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f31e6b4d730>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f31e7e1cb40>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f31efdd0380>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f31efc58a60>]
========================================
Start Run
========================================
2021-12-15 04:03:44.013813 | GENERATION: 1 | ERRORS: best=183, median=777.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=62.425
2021-12-15 04:03:50.479940 | GENERATION: 2 | ERRORS: best=183, median=233.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=36.175
2021-12-15 04:03:57.271349 | GENERATION: 3 | ERRORS: best=181, median=198.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=23.945
2021-12-15 04:04:02.354011 | GENERATION: 4 | ERRORS: best=168, median=219.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=23.415
2021-12-15 04:04:05.975163 | GENERATION: 5 | ERRORS: best=103, median=224.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=22.315
2021-12-15 04:04:10.241122 | GENERATION: 6 | ERRORS: best=88, median=206.5, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=20.81
2021-12-15 04:04:14.831085 | GENERATION: 7 | ERRORS: best=46, median=169.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=20.985
2021-12-15 04:04:17.865358 | GENERATION: 8 | ERRORS: best=46, median=140.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=17.715
2021-12-15 04:04:19.996954 | GENERATION: 9 | ERRORS: best=46, median=181.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=15.645
2021-12-15 04:04:22.182986 | GENERATION: 10 | ERRORS: best=26, median=109.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=14.625
2021-12-15 04:04:24.090463 | GENERATION: 11 | ERRORS: best=26, median=174.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=15.09
2021-12-15 04:04:26.073891 | GENERATION: 12 | ERRORS: best=26, median=230.5, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=14.44
2021-12-15 04:04:28.480823 | GENERATION: 13 | ERRORS: best=26, median=111.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=15.13
2021-12-15 04:04:30.616863 | GENERATION: 14 | ERRORS: best=26, median=172.5, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=15.0
2021-12-15 04:04:32.796114 | GENERATION: 15 | ERRORS: best=26, median=233.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=13.885
2021-12-15 04:04:34.539803 | GENERATION: 16 | ERRORS: best=26, median=109.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=13.96
2021-12-15 04:04:36.479439 | GENERATION: 17 | ERRORS: best=26, median=219.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=14.125
2021-12-15 04:04:38.683336 | GENERATION: 18 | ERRORS: best=26, median=233.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=14.115
2021-12-15 04:04:40.701787 | GENERATION: 19 | ERRORS: best=26, median=216.5, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=12.365
2021-12-15 04:04:42.718435 | GENERATION: 20 | ERRORS: best=26, median=109.5, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=12.5
2021-12-15 04:04:44.472630 | GENERATION: 21 | ERRORS: best=26, median=109.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=11.845
2021-12-15 04:04:46.308383 | GENERATION: 22 | ERRORS: best=26, median=189.5, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=12.72
2021-12-15 04:04:48.150763 | GENERATION: 23 | ERRORS: best=26, median=107.5, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=13.59
2021-12-15 04:04:49.897793 | GENERATION: 24 | ERRORS: best=26, median=181.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=14.185
2021-12-15 04:04:51.576173 | GENERATION: 25 | ERRORS: best=26, median=106.5, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=14.275
2021-12-15 04:04:53.295296 | GENERATION: 26 | ERRORS: best=26, median=182.5, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=13.99
2021-12-15 04:04:55.016022 | GENERATION: 27 | ERRORS: best=25, median=181.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=14.815
2021-12-15 04:04:56.828840 | GENERATION: 28 | ERRORS: best=26, median=233.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=14.18
2021-12-15 04:04:58.636851 | GENERATION: 29 | ERRORS: best=26, median=147.5, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=12.425
2021-12-15 04:05:00.385969 | GENERATION: 30 | ERRORS: best=26, median=209.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=12.195
2021-12-15 04:05:02.126651 | GENERATION: 31 | ERRORS: best=26, median=129.5, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=13.8
2021-12-15 04:05:03.884883 | GENERATION: 32 | ERRORS: best=26, median=233.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=14.095
2021-12-15 04:05:05.810992 | GENERATION: 33 | ERRORS: best=26, median=140.5, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=15.0
2021-12-15 04:05:07.742949 | GENERATION: 34 | ERRORS: best=26, median=195.5, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=15.335
2021-12-15 04:05:09.778196 | GENERATION: 35 | ERRORS: best=26, median=142.0, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=17.665
2021-12-15 04:05:11.955399 | GENERATION: 36 | ERRORS: best=26, median=233.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=17.95
2021-12-15 04:05:13.882928 | GENERATION: 37 | ERRORS: best=26, median=196.5, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=19.195
2021-12-15 04:05:16.335936 | GENERATION: 38 | ERRORS: best=26, median=153.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=19.61
2021-12-15 04:05:18.481110 | GENERATION: 39 | ERRORS: best=26, median=156.5, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=19.68
Simplifying genome of length 21 with total error 0.
Simplified genome by 2 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=1), Input(input_index=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_max int_min input_1 input_0 int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:58
