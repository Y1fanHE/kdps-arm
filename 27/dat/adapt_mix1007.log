Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(growth_cap=500, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, step_limit=200, collection_size_cap=1000), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f92622dd340>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f926998cbb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f92622dd820>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f926999da40>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f926999d700>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f9269991a60>]
========================================
Start Run
========================================
2021-12-14 23:47:44.618092 | GENERATION: 1 | ERRORS: best=108, median=235.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=53.125
2021-12-14 23:47:47.163245 | GENERATION: 2 | ERRORS: best=79, median=222.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=29.765
2021-12-14 23:47:49.561906 | GENERATION: 3 | ERRORS: best=79, median=235.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=24.645
2021-12-14 23:47:51.949952 | GENERATION: 4 | ERRORS: best=79, median=108.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=22.89
2021-12-14 23:47:54.722167 | GENERATION: 5 | ERRORS: best=79, median=108.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=24.255
2021-12-14 23:47:57.383635 | GENERATION: 6 | ERRORS: best=79, median=113.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=23.77
2021-12-14 23:47:59.914996 | GENERATION: 7 | ERRORS: best=79, median=158.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=25.54
2021-12-14 23:48:02.536923 | GENERATION: 8 | ERRORS: best=79, median=110.5, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=25.88
2021-12-14 23:48:05.038859 | GENERATION: 9 | ERRORS: best=79, median=156.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=25.075
2021-12-14 23:48:07.412997 | GENERATION: 10 | ERRORS: best=79, median=113.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=24.745
2021-12-14 23:48:10.092576 | GENERATION: 11 | ERRORS: best=79, median=108.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=25.665
2021-12-14 23:48:12.916506 | GENERATION: 12 | ERRORS: best=78, median=107.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=32.315
2021-12-14 23:48:15.964090 | GENERATION: 13 | ERRORS: best=43, median=107.5, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=34.16
2021-12-14 23:48:19.103768 | GENERATION: 14 | ERRORS: best=36, median=107.5, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=38.845
2021-12-14 23:48:22.397458 | GENERATION: 15 | ERRORS: best=36, median=107.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=40.82
2021-12-14 23:48:25.718862 | GENERATION: 16 | ERRORS: best=36, median=106.5, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=40.63
2021-12-14 23:48:28.988719 | GENERATION: 17 | ERRORS: best=36, median=102.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=39.975
2021-12-14 23:48:32.151373 | GENERATION: 18 | ERRORS: best=36, median=99.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=38.935
2021-12-14 23:48:35.438525 | GENERATION: 19 | ERRORS: best=36, median=104.5, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=38.96
2021-12-14 23:48:39.077528 | GENERATION: 20 | ERRORS: best=36, median=94.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=37.88
2021-12-14 23:48:42.133247 | GENERATION: 21 | ERRORS: best=36, median=96.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=37.84
2021-12-14 23:48:45.891396 | GENERATION: 22 | ERRORS: best=36, median=91.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=38.17
2021-12-14 23:48:49.234312 | GENERATION: 23 | ERRORS: best=36, median=80.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=37.75
2021-12-14 23:48:52.392506 | GENERATION: 24 | ERRORS: best=36, median=91.5, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=36.575
2021-12-14 23:48:55.381647 | GENERATION: 25 | ERRORS: best=36, median=108.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=36.62
2021-12-14 23:48:58.316609 | GENERATION: 26 | ERRORS: best=36, median=100.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=35.215
2021-12-14 23:49:01.396883 | GENERATION: 27 | ERRORS: best=36, median=91.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=33.66
2021-12-14 23:49:04.670249 | GENERATION: 28 | ERRORS: best=36, median=94.5, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=32.12
2021-12-14 23:49:08.024719 | GENERATION: 29 | ERRORS: best=36, median=96.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=31.765
2021-12-14 23:49:11.202801 | GENERATION: 30 | ERRORS: best=36, median=90.5, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=32.01
2021-12-14 23:49:13.964844 | GENERATION: 31 | ERRORS: best=36, median=93.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=31.685
2021-12-14 23:49:16.716523 | GENERATION: 32 | ERRORS: best=36, median=103.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=30.62
2021-12-14 23:49:19.332371 | GENERATION: 33 | ERRORS: best=36, median=108.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=31.2
2021-12-14 23:49:22.035549 | GENERATION: 34 | ERRORS: best=36, median=91.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=30.41
2021-12-14 23:49:24.720371 | GENERATION: 35 | ERRORS: best=36, median=97.5, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=29.145
2021-12-14 23:49:26.988237 | GENERATION: 36 | ERRORS: best=36, median=94.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=28.84
2021-12-14 23:49:29.412674 | GENERATION: 37 | ERRORS: best=36, median=95.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=28.5
2021-12-14 23:49:31.785387 | GENERATION: 38 | ERRORS: best=36, median=95.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=28.38
2021-12-14 23:49:33.929833 | GENERATION: 39 | ERRORS: best=36, median=96.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=27.955
2021-12-14 23:49:36.199245 | GENERATION: 40 | ERRORS: best=36, median=94.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=27.93
2021-12-14 23:49:38.619226 | GENERATION: 41 | ERRORS: best=36, median=94.5, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=27.93
2021-12-14 23:49:41.065322 | GENERATION: 42 | ERRORS: best=36, median=103.0, diversity=0.31 | INDIVIDUALS: n=200, avg_genome_length=27.71
2021-12-14 23:49:43.369168 | GENERATION: 43 | ERRORS: best=36, median=93.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=29.09
2021-12-14 23:49:45.611956 | GENERATION: 44 | ERRORS: best=36, median=103.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=26.985
2021-12-14 23:49:47.654972 | GENERATION: 45 | ERRORS: best=36, median=94.0, diversity=0.35 | INDIVIDUALS: n=200, avg_genome_length=25.355
2021-12-14 23:49:49.944916 | GENERATION: 46 | ERRORS: best=36, median=100.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=26.73
2021-12-14 23:49:52.286271 | GENERATION: 47 | ERRORS: best=36, median=95.5, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=24.615
2021-12-14 23:49:54.685451 | GENERATION: 48 | ERRORS: best=36, median=107.5, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=25.075
2021-12-14 23:49:56.903417 | GENERATION: 49 | ERRORS: best=36, median=91.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=25.43
2021-12-14 23:49:59.257012 | GENERATION: 50 | ERRORS: best=36, median=93.5, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=27.57
2021-12-14 23:50:01.403373 | GENERATION: 51 | ERRORS: best=36, median=96.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=28.055
2021-12-14 23:50:03.528567 | GENERATION: 52 | ERRORS: best=36, median=96.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=27.335
Simplifying genome of length 37 with total error 0.
Simplified genome by 1 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 2 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 3 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 2 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 2 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_min int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:41
