Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(collection_size_cap=1000, numeric_magnitude_limit=1000000000000.0, step_limit=200, growth_cap=500, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f8068eee4c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f8068eeeeb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f8068eee640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8060760840>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8060760480>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f8068ef2e50>]
========================================
Start Run
========================================
2021-12-17 04:09:20.589515 | GENERATION: 1 | ERRORS: best=235, median=400.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=65.43
2021-12-17 04:09:24.364995 | GENERATION: 2 | ERRORS: best=155, median=235.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=65.295
2021-12-17 04:09:29.759041 | GENERATION: 3 | ERRORS: best=91, median=235.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=64.17
2021-12-17 04:09:34.221758 | GENERATION: 4 | ERRORS: best=91, median=213.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=60.405
2021-12-17 04:09:39.052725 | GENERATION: 5 | ERRORS: best=91, median=227.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=58.67
2021-12-17 04:09:43.375248 | GENERATION: 6 | ERRORS: best=91, median=154.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=54.75
2021-12-17 04:09:47.405053 | GENERATION: 7 | ERRORS: best=43, median=160.5, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=51.005
2021-12-17 04:09:51.184484 | GENERATION: 8 | ERRORS: best=39, median=147.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=45.235
2021-12-17 04:09:54.597558 | GENERATION: 9 | ERRORS: best=39, median=125.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=36.77
2021-12-17 04:09:57.658447 | GENERATION: 10 | ERRORS: best=39, median=118.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=35.405
2021-12-17 04:10:00.869168 | GENERATION: 11 | ERRORS: best=39, median=108.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=35.745
2021-12-17 04:10:04.117718 | GENERATION: 12 | ERRORS: best=39, median=121.5, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=35.28
2021-12-17 04:10:07.132066 | GENERATION: 13 | ERRORS: best=39, median=108.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=35.46
2021-12-17 04:10:09.820457 | GENERATION: 14 | ERRORS: best=39, median=101.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=34.95
2021-12-17 04:10:12.603928 | GENERATION: 15 | ERRORS: best=39, median=108.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=34.15
2021-12-17 04:10:15.079794 | GENERATION: 16 | ERRORS: best=39, median=103.0, diversity=0.305 | INDIVIDUALS: n=200, avg_genome_length=33.1
2021-12-17 04:10:17.744726 | GENERATION: 17 | ERRORS: best=39, median=101.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=31.785
2021-12-17 04:10:20.398968 | GENERATION: 18 | ERRORS: best=39, median=108.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=31.695
2021-12-17 04:10:22.963151 | GENERATION: 19 | ERRORS: best=39, median=110.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=31.705
2021-12-17 04:10:25.385165 | GENERATION: 20 | ERRORS: best=35, median=100.5, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=31.585
2021-12-17 04:10:28.240641 | GENERATION: 21 | ERRORS: best=35, median=100.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=30.615
2021-12-17 04:10:30.893095 | GENERATION: 22 | ERRORS: best=35, median=101.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=29.79
2021-12-17 04:10:33.449186 | GENERATION: 23 | ERRORS: best=35, median=107.5, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=29.72
2021-12-17 04:10:35.988042 | GENERATION: 24 | ERRORS: best=35, median=106.5, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=28.075
2021-12-17 04:10:38.761412 | GENERATION: 25 | ERRORS: best=35, median=100.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=27.925
2021-12-17 04:10:41.295533 | GENERATION: 26 | ERRORS: best=35, median=108.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=27.48
2021-12-17 04:10:43.832969 | GENERATION: 27 | ERRORS: best=35, median=111.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=27.145
2021-12-17 04:10:45.880701 | GENERATION: 28 | ERRORS: best=35, median=108.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=25.74
2021-12-17 04:10:47.784012 | GENERATION: 29 | ERRORS: best=35, median=100.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=24.645
2021-12-17 04:10:49.763682 | GENERATION: 30 | ERRORS: best=12, median=99.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=23.595
2021-12-17 04:10:51.529552 | GENERATION: 31 | ERRORS: best=12, median=118.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=21.17
2021-12-17 04:10:53.293082 | GENERATION: 32 | ERRORS: best=12, median=110.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=20.46
2021-12-17 04:10:55.214390 | GENERATION: 33 | ERRORS: best=12, median=108.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=20.15
2021-12-17 04:10:56.911782 | GENERATION: 34 | ERRORS: best=10, median=118.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=20.31
2021-12-17 04:10:58.784158 | GENERATION: 35 | ERRORS: best=10, median=109.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=20.22
2021-12-17 04:11:00.605099 | GENERATION: 36 | ERRORS: best=10, median=108.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=20.04
2021-12-17 04:11:02.266413 | GENERATION: 37 | ERRORS: best=10, median=122.5, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=19.89
2021-12-17 04:11:03.942899 | GENERATION: 38 | ERRORS: best=10, median=108.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=20.06
2021-12-17 04:11:05.655024 | GENERATION: 39 | ERRORS: best=10, median=118.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=19.53
Simplifying genome of length 23 with total error 0.
Simplified genome by 2 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_1 int_min input_0 input_1 input_2 int_max int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:02
