Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, growth_cap=500, runtime_limit=10, step_limit=200, collection_size_cap=1000), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fa453241c40>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fa453241eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fa453241640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fa44c5b9240>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fa44c5b9fc0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fa453244e50>]
========================================
Start Run
========================================
2021-12-17 04:59:02.609850 | GENERATION: 1 | ERRORS: best=217, median=239.0, diversity=0.1 | INDIVIDUALS: n=200, avg_genome_length=51.77
2021-12-17 04:59:10.058300 | GENERATION: 2 | ERRORS: best=98, median=228.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=90.76
2021-12-17 04:59:14.147184 | GENERATION: 3 | ERRORS: best=91, median=216.5, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=86.05
2021-12-17 04:59:18.126421 | GENERATION: 4 | ERRORS: best=91, median=179.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=84.92
2021-12-17 04:59:21.557491 | GENERATION: 5 | ERRORS: best=91, median=225.5, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=82.25
2021-12-17 04:59:24.762533 | GENERATION: 6 | ERRORS: best=91, median=184.5, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=80.43
2021-12-17 04:59:27.832464 | GENERATION: 7 | ERRORS: best=91, median=182.5, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=79.555
2021-12-17 04:59:31.176887 | GENERATION: 8 | ERRORS: best=91, median=103.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=77.94
2021-12-17 04:59:34.617019 | GENERATION: 9 | ERRORS: best=88, median=103.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=76.6
2021-12-17 04:59:37.566614 | GENERATION: 10 | ERRORS: best=88, median=104.0, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=73.7
2021-12-17 04:59:40.902368 | GENERATION: 11 | ERRORS: best=88, median=104.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=71.515
2021-12-17 04:59:44.307315 | GENERATION: 12 | ERRORS: best=88, median=119.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=69.92
2021-12-17 04:59:47.434688 | GENERATION: 13 | ERRORS: best=88, median=103.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=69.835
2021-12-17 04:59:50.660007 | GENERATION: 14 | ERRORS: best=67, median=104.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=68.005
2021-12-17 04:59:53.911881 | GENERATION: 15 | ERRORS: best=67, median=114.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=65.255
2021-12-17 04:59:57.290547 | GENERATION: 16 | ERRORS: best=67, median=114.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=62.88
2021-12-17 05:00:00.784844 | GENERATION: 17 | ERRORS: best=67, median=133.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=62.48
2021-12-17 05:00:04.038276 | GENERATION: 18 | ERRORS: best=60, median=109.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=63.19
2021-12-17 05:00:07.313551 | GENERATION: 19 | ERRORS: best=48, median=112.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=64.25
2021-12-17 05:00:10.652867 | GENERATION: 20 | ERRORS: best=48, median=107.5, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=68.04
2021-12-17 05:00:14.297541 | GENERATION: 21 | ERRORS: best=48, median=107.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=68.465
2021-12-17 05:00:17.102814 | GENERATION: 22 | ERRORS: best=48, median=103.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=68.495
2021-12-17 05:00:19.803549 | GENERATION: 23 | ERRORS: best=48, median=103.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=67.495
2021-12-17 05:00:22.444110 | GENERATION: 24 | ERRORS: best=48, median=98.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=68.32
2021-12-17 05:00:25.170632 | GENERATION: 25 | ERRORS: best=48, median=103.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=67.745
2021-12-17 05:00:28.087001 | GENERATION: 26 | ERRORS: best=48, median=103.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=65.71
2021-12-17 05:00:30.472933 | GENERATION: 27 | ERRORS: best=40, median=100.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=68.045
2021-12-17 05:00:33.187182 | GENERATION: 28 | ERRORS: best=40, median=103.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=65.215
2021-12-17 05:00:35.890360 | GENERATION: 29 | ERRORS: best=40, median=103.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=62.955
2021-12-17 05:00:38.471511 | GENERATION: 30 | ERRORS: best=39, median=103.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=62.835
2021-12-17 05:00:41.794351 | GENERATION: 31 | ERRORS: best=37, median=103.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=63.645
2021-12-17 05:00:44.267476 | GENERATION: 32 | ERRORS: best=37, median=101.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=62.49
2021-12-17 05:00:46.617280 | GENERATION: 33 | ERRORS: best=37, median=103.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=62.635
2021-12-17 05:00:49.062704 | GENERATION: 34 | ERRORS: best=37, median=101.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=61.885
2021-12-17 05:00:51.582740 | GENERATION: 35 | ERRORS: best=37, median=103.0, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=61.69
2021-12-17 05:00:54.180329 | GENERATION: 36 | ERRORS: best=37, median=103.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=60.675
Simplifying genome of length 55 with total error 0.
Simplified genome by 2 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 3 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 3 to length 44.
Simplified genome by 2 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 1 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 2 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 2 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 2 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_2 int_max input_1 int_min input_0 input_2 int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:11
