Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], push_config=PushConfig(collection_size_cap=1000, growth_cap=500, step_limit=200, numeric_magnitude_limit=1000000000000.0, runtime_limit=10), arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fc1ecb42730>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fc1f356a790>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fc1ecb42760>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc1f34988c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc1f3498c40>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fc1eb83c430>]
========================================
Start Run
========================================
2021-12-17 18:25:26.073852 | GENERATION: 1 | ERRORS: best=214, median=320.5, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=57.48 | VIRUSES: gene_rate=0.000
2021-12-17 18:25:29.835745 | GENERATION: 2 | ERRORS: best=124, median=240.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=47.25 | VIRUSES: gene_rate=0.015
2021-12-17 18:25:33.277586 | GENERATION: 3 | ERRORS: best=97, median=230.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=57.015 | VIRUSES: gene_rate=0.026
2021-12-17 18:25:36.228143 | GENERATION: 4 | ERRORS: best=97, median=124.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=62.395 | VIRUSES: gene_rate=0.037
2021-12-17 18:25:39.207459 | GENERATION: 5 | ERRORS: best=97, median=124.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=60.945 | VIRUSES: gene_rate=0.050
2021-12-17 18:25:42.429458 | GENERATION: 6 | ERRORS: best=97, median=124.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=60.345 | VIRUSES: gene_rate=0.061
2021-12-17 18:25:45.695122 | GENERATION: 7 | ERRORS: best=71, median=184.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=59.565 | VIRUSES: gene_rate=0.070
2021-12-17 18:25:49.105987 | GENERATION: 8 | ERRORS: best=47, median=221.0, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=61.49 | VIRUSES: gene_rate=0.083
2021-12-17 18:25:52.624153 | GENERATION: 9 | ERRORS: best=45, median=225.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=60.79 | VIRUSES: gene_rate=0.086
2021-12-17 18:25:55.832021 | GENERATION: 10 | ERRORS: best=45, median=207.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=59.75 | VIRUSES: gene_rate=0.101
2021-12-17 18:25:59.184590 | GENERATION: 11 | ERRORS: best=43, median=169.5, diversity=0.755 | INDIVIDUALS: n=200, avg_genome_length=59.525 | VIRUSES: gene_rate=0.103
2021-12-17 18:26:03.242957 | GENERATION: 12 | ERRORS: best=30, median=240.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=60.56 | VIRUSES: gene_rate=0.101
2021-12-17 18:26:06.817766 | GENERATION: 13 | ERRORS: best=18, median=125.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=58.46 | VIRUSES: gene_rate=0.105
2021-12-17 18:26:10.051819 | GENERATION: 14 | ERRORS: best=18, median=188.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=56.305 | VIRUSES: gene_rate=0.102
Simplifying genome of length 61 with total error 0.
Simplified genome by 1 to length 60.
Simplified genome by 1 to length 59.
Simplified genome by 1 to length 58.
Simplified genome by 2 to length 56.
Simplified genome by 2 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 3 to length 50.
Simplified genome by 3 to length 47.
Simplified genome by 2 to length 45.
Simplified genome by 3 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 2 to length 39.
Simplified genome by 3 to length 36.
Simplified genome by 2 to length 34.
Simplified genome by 3 to length 31.
Simplified genome by 2 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 3 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 2 to length 15.
Simplified genome by 3 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([VirusInput(input_index=0), VirusInput(input_index=1), VirusInput(input_index=2), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=1), Input(input_index=2), VirusInstructionMeta(name='int_max', code_blocks=0), VirusInstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (vinput_0 vinput_1 vinput_2 int_min int_max input_1 input_2 vint_max vint_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:05
