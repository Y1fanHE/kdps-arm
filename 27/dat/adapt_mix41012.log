Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['stdout'], push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, growth_cap=500, runtime_limit=10, step_limit=200))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f57a6547c40>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f57a6547eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f57a6547640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f579d52b780>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f579d52bcc0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f57a654be50>]
========================================
Start Run
========================================
2021-12-17 07:10:00.159091 | GENERATION: 1 | ERRORS: best=219, median=779.5, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=67.59
2021-12-17 07:10:04.353664 | GENERATION: 2 | ERRORS: best=106, median=236.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=84.5
2021-12-17 07:10:08.879381 | GENERATION: 3 | ERRORS: best=106, median=219.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=82.52
2021-12-17 07:10:13.750393 | GENERATION: 4 | ERRORS: best=106, median=167.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=81.715
2021-12-17 07:10:18.105809 | GENERATION: 5 | ERRORS: best=91, median=161.5, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=79.48
2021-12-17 07:10:23.151072 | GENERATION: 6 | ERRORS: best=91, median=149.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=76.96
2021-12-17 07:10:27.995677 | GENERATION: 7 | ERRORS: best=67, median=176.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=75.77
2021-12-17 07:10:33.027900 | GENERATION: 8 | ERRORS: best=67, median=153.5, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=74.66
2021-12-17 07:10:38.292979 | GENERATION: 9 | ERRORS: best=59, median=150.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=74.555
2021-12-17 07:10:43.689615 | GENERATION: 10 | ERRORS: best=51, median=171.0, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=72.88
2021-12-17 07:10:48.641889 | GENERATION: 11 | ERRORS: best=51, median=141.5, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=71.34
2021-12-17 07:10:53.474334 | GENERATION: 12 | ERRORS: best=51, median=143.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=69.7
2021-12-17 07:10:57.722971 | GENERATION: 13 | ERRORS: best=51, median=110.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=68.135
2021-12-17 07:11:01.619062 | GENERATION: 14 | ERRORS: best=38, median=131.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=66.865
2021-12-17 07:11:05.882085 | GENERATION: 15 | ERRORS: best=22, median=154.0, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=65.13
2021-12-17 07:11:10.065747 | GENERATION: 16 | ERRORS: best=22, median=154.5, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=65.715
2021-12-17 07:11:14.581080 | GENERATION: 17 | ERRORS: best=22, median=133.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=66.165
2021-12-17 07:11:19.266000 | GENERATION: 18 | ERRORS: best=22, median=138.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=64.86
2021-12-17 07:11:23.764936 | GENERATION: 19 | ERRORS: best=22, median=164.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=64.01
2021-12-17 07:11:28.074344 | GENERATION: 20 | ERRORS: best=22, median=125.5, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=64.82
2021-12-17 07:11:32.962421 | GENERATION: 21 | ERRORS: best=22, median=137.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=63.495
2021-12-17 07:11:37.141692 | GENERATION: 22 | ERRORS: best=22, median=142.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=63.085
2021-12-17 07:11:41.262036 | GENERATION: 23 | ERRORS: best=22, median=154.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=62.54
2021-12-17 07:11:45.649523 | GENERATION: 24 | ERRORS: best=22, median=145.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=62.555
2021-12-17 07:11:49.942666 | GENERATION: 25 | ERRORS: best=12, median=109.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=60.395
2021-12-17 07:11:54.469087 | GENERATION: 26 | ERRORS: best=12, median=119.5, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=59.2
2021-12-17 07:11:59.312881 | GENERATION: 27 | ERRORS: best=12, median=112.5, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=58.69
2021-12-17 07:12:04.061327 | GENERATION: 28 | ERRORS: best=12, median=114.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=57.855
2021-12-17 07:12:08.267932 | GENERATION: 29 | ERRORS: best=12, median=108.5, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=57.525
2021-12-17 07:12:12.101235 | GENERATION: 30 | ERRORS: best=12, median=110.5, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=56.57
2021-12-17 07:12:16.346152 | GENERATION: 31 | ERRORS: best=12, median=108.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=57.175
2021-12-17 07:12:20.131423 | GENERATION: 32 | ERRORS: best=12, median=111.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=56.395
2021-12-17 07:12:24.387521 | GENERATION: 33 | ERRORS: best=12, median=112.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=55.375
2021-12-17 07:12:28.654857 | GENERATION: 34 | ERRORS: best=12, median=114.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=54.405
2021-12-17 07:12:32.815207 | GENERATION: 35 | ERRORS: best=12, median=111.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=53.68
2021-12-17 07:12:37.050725 | GENERATION: 36 | ERRORS: best=12, median=111.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=52.895
2021-12-17 07:12:41.345021 | GENERATION: 37 | ERRORS: best=12, median=115.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=53.685
2021-12-17 07:12:45.372969 | GENERATION: 38 | ERRORS: best=10, median=118.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=53.66
2021-12-17 07:12:49.745219 | GENERATION: 39 | ERRORS: best=10, median=115.5, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=56.4
2021-12-17 07:12:54.086837 | GENERATION: 40 | ERRORS: best=8, median=106.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=55.305
2021-12-17 07:12:57.684477 | GENERATION: 41 | ERRORS: best=8, median=120.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=55.56
Simplifying genome of length 52 with total error 0.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 2 to length 46.
Simplified genome by 1 to length 45.
Simplified genome by 2 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 3 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 3 to length 28.
Simplified genome by 2 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 3 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 2 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_min int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:03:20
