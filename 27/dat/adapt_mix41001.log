Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], push_config=PushConfig(step_limit=200, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, growth_cap=500, collection_size_cap=1000), arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f826d00b4c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f826d00beb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f826d00b850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f82646db180>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f82646db300>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f826d00ee50>]
========================================
Start Run
========================================
2021-12-17 01:24:14.708162 | GENERATION: 1 | ERRORS: best=235, median=4593.0, diversity=0.05 | INDIVIDUALS: n=200, avg_genome_length=63.47
2021-12-17 01:24:17.052001 | GENERATION: 2 | ERRORS: best=88, median=235.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=66.71
2021-12-17 01:24:21.549756 | GENERATION: 3 | ERRORS: best=88, median=235.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=45.925
2021-12-17 01:24:24.713047 | GENERATION: 4 | ERRORS: best=88, median=207.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=42.55
2021-12-17 01:24:27.967289 | GENERATION: 5 | ERRORS: best=88, median=207.5, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=42.11
2021-12-17 01:24:31.106309 | GENERATION: 6 | ERRORS: best=88, median=144.0, diversity=0.305 | INDIVIDUALS: n=200, avg_genome_length=40.955
2021-12-17 01:24:34.419511 | GENERATION: 7 | ERRORS: best=88, median=192.5, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=39.9
2021-12-17 01:24:37.619470 | GENERATION: 8 | ERRORS: best=88, median=179.5, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=39.395
2021-12-17 01:24:41.019222 | GENERATION: 9 | ERRORS: best=88, median=174.0, diversity=0.35 | INDIVIDUALS: n=200, avg_genome_length=38.53
2021-12-17 01:24:44.056150 | GENERATION: 10 | ERRORS: best=88, median=187.5, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=38.96
2021-12-17 01:24:46.894408 | GENERATION: 11 | ERRORS: best=88, median=208.5, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=38.8
2021-12-17 01:24:49.825830 | GENERATION: 12 | ERRORS: best=86, median=169.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=39.175
2021-12-17 01:24:52.585390 | GENERATION: 13 | ERRORS: best=86, median=133.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=39.475
2021-12-17 01:24:55.564779 | GENERATION: 14 | ERRORS: best=73, median=170.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=39.095
2021-12-17 01:24:58.438844 | GENERATION: 15 | ERRORS: best=73, median=180.5, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=39.79
2021-12-17 01:25:01.060958 | GENERATION: 16 | ERRORS: best=72, median=130.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=38.85
2021-12-17 01:25:03.806382 | GENERATION: 17 | ERRORS: best=71, median=176.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=37.825
2021-12-17 01:25:06.396735 | GENERATION: 18 | ERRORS: best=71, median=181.5, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=35.825
2021-12-17 01:25:08.842651 | GENERATION: 19 | ERRORS: best=72, median=191.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=35.84
2021-12-17 01:25:11.174727 | GENERATION: 20 | ERRORS: best=49, median=183.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=33.91
2021-12-17 01:25:13.519572 | GENERATION: 21 | ERRORS: best=49, median=166.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=32.445
2021-12-17 01:25:16.120990 | GENERATION: 22 | ERRORS: best=49, median=151.5, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=31.095
2021-12-17 01:25:18.228488 | GENERATION: 23 | ERRORS: best=48, median=122.5, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=29.84
2021-12-17 01:25:20.250326 | GENERATION: 24 | ERRORS: best=54, median=142.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=27.845
2021-12-17 01:25:22.384645 | GENERATION: 25 | ERRORS: best=54, median=143.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=27.14
2021-12-17 01:25:24.563306 | GENERATION: 26 | ERRORS: best=53, median=143.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=26.43
2021-12-17 01:25:26.713783 | GENERATION: 27 | ERRORS: best=53, median=148.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=26.785
2021-12-17 01:25:28.914635 | GENERATION: 28 | ERRORS: best=51, median=112.5, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=26.885
2021-12-17 01:25:30.933642 | GENERATION: 29 | ERRORS: best=51, median=111.5, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=25.99
2021-12-17 01:25:32.975080 | GENERATION: 30 | ERRORS: best=51, median=114.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=25.68
2021-12-17 01:25:34.926217 | GENERATION: 31 | ERRORS: best=49, median=122.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=22.945
2021-12-17 01:25:36.962865 | GENERATION: 32 | ERRORS: best=49, median=143.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=22.455
2021-12-17 01:25:39.082383 | GENERATION: 33 | ERRORS: best=28, median=110.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=22.39
2021-12-17 01:25:41.008995 | GENERATION: 34 | ERRORS: best=28, median=112.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=22.215
2021-12-17 01:25:43.097918 | GENERATION: 35 | ERRORS: best=28, median=113.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=23.765
2021-12-17 01:25:45.185339 | GENERATION: 36 | ERRORS: best=28, median=101.5, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=24.9
2021-12-17 01:25:47.160865 | GENERATION: 37 | ERRORS: best=26, median=110.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=25.745
Simplifying genome of length 33 with total error 0.
Simplified genome by 1 to length 32.
Simplified genome by 2 to length 30.
Simplified genome by 3 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 2 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_min int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:51
