Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(runtime_limit=10, collection_size_cap=1000, step_limit=200, numeric_magnitude_limit=1000000000000.0, growth_cap=500), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fc7eb47a4c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fc7eb47aeb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fc7eb47a640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc7e2979100>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc7e2979c40>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fc7eb47fe50>]
========================================
Start Run
========================================
2021-12-17 10:15:23.132743 | GENERATION: 1 | ERRORS: best=226, median=5088.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=69.77
2021-12-17 10:15:25.648071 | GENERATION: 2 | ERRORS: best=201, median=226.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=68.28
2021-12-17 10:15:28.467572 | GENERATION: 3 | ERRORS: best=115, median=226.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=74.68
2021-12-17 10:15:31.600706 | GENERATION: 4 | ERRORS: best=115, median=226.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=69.24
2021-12-17 10:15:34.526862 | GENERATION: 5 | ERRORS: best=115, median=226.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=65.19
2021-12-17 10:15:37.837475 | GENERATION: 6 | ERRORS: best=115, median=226.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=64.54
2021-12-17 10:15:40.940101 | GENERATION: 7 | ERRORS: best=115, median=225.5, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=61.465
2021-12-17 10:15:44.067143 | GENERATION: 8 | ERRORS: best=115, median=209.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=52.315
2021-12-17 10:15:48.219436 | GENERATION: 9 | ERRORS: best=45, median=212.5, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=50.67
2021-12-17 10:15:51.572062 | GENERATION: 10 | ERRORS: best=45, median=171.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=47.025
2021-12-17 10:15:54.473772 | GENERATION: 11 | ERRORS: best=45, median=201.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=47.0
2021-12-17 10:15:57.693184 | GENERATION: 12 | ERRORS: best=44, median=190.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=49.32
2021-12-17 10:16:00.769138 | GENERATION: 13 | ERRORS: best=44, median=172.5, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=50.17
2021-12-17 10:16:03.547529 | GENERATION: 14 | ERRORS: best=44, median=155.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=49.955
2021-12-17 10:16:07.414814 | GENERATION: 15 | ERRORS: best=44, median=209.5, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=48.38
2021-12-17 10:16:10.413390 | GENERATION: 16 | ERRORS: best=44, median=175.5, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=45.97
2021-12-17 10:16:13.599480 | GENERATION: 17 | ERRORS: best=44, median=155.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=46.385
2021-12-17 10:16:17.027682 | GENERATION: 18 | ERRORS: best=44, median=172.0, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=44.66
2021-12-17 10:16:21.085510 | GENERATION: 19 | ERRORS: best=44, median=210.5, diversity=0.55 | INDIVIDUALS: n=200, avg_genome_length=42.145
2021-12-17 10:16:24.478944 | GENERATION: 20 | ERRORS: best=44, median=221.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=39.125
2021-12-17 10:16:27.880517 | GENERATION: 21 | ERRORS: best=45, median=128.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=39.055
2021-12-17 10:16:30.941040 | GENERATION: 22 | ERRORS: best=45, median=171.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=37.295
2021-12-17 10:16:33.803060 | GENERATION: 23 | ERRORS: best=45, median=127.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=35.855
Simplifying genome of length 25 with total error 0.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=1), Input(input_index=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_1 input_0 int_max int_min input_0 input_1 int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:30
