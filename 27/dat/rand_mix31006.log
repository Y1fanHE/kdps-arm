Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['stdout'], push_config=PushConfig(growth_cap=500, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, step_limit=200))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f87b904c4c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f87b904ceb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f87b904c640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f87b0918800>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f87b0918680>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f87b904fe50>]
========================================
Start Run
========================================
2021-12-17 04:19:21.428165 | GENERATION: 1 | ERRORS: best=235, median=400.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=65.815
2021-12-17 04:19:24.939838 | GENERATION: 2 | ERRORS: best=91, median=235.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=68.455
2021-12-17 04:19:27.864772 | GENERATION: 3 | ERRORS: best=91, median=235.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=55.025
2021-12-17 04:19:31.085612 | GENERATION: 4 | ERRORS: best=91, median=235.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=54.515
2021-12-17 04:19:33.930577 | GENERATION: 5 | ERRORS: best=91, median=235.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=47.905
2021-12-17 04:19:36.876691 | GENERATION: 6 | ERRORS: best=91, median=235.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=48.865
2021-12-17 04:19:39.705992 | GENERATION: 7 | ERRORS: best=89, median=235.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=48.45
2021-12-17 04:19:43.148354 | GENERATION: 8 | ERRORS: best=88, median=230.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=55.63
2021-12-17 04:19:46.631841 | GENERATION: 9 | ERRORS: best=77, median=157.5, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=56.005
2021-12-17 04:19:50.174006 | GENERATION: 10 | ERRORS: best=90, median=204.0, diversity=0.55 | INDIVIDUALS: n=200, avg_genome_length=53.895
2021-12-17 04:19:53.740716 | GENERATION: 11 | ERRORS: best=90, median=225.5, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=52.025
2021-12-17 04:19:57.111522 | GENERATION: 12 | ERRORS: best=52, median=168.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=46.36
2021-12-17 04:19:59.654974 | GENERATION: 13 | ERRORS: best=52, median=175.5, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=37.605
2021-12-17 04:20:02.215798 | GENERATION: 14 | ERRORS: best=52, median=186.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=34.085
2021-12-17 04:20:04.572312 | GENERATION: 15 | ERRORS: best=52, median=142.5, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=30.65
2021-12-17 04:20:06.865274 | GENERATION: 16 | ERRORS: best=52, median=160.5, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=29.13
2021-12-17 04:20:09.298878 | GENERATION: 17 | ERRORS: best=52, median=201.5, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=29.125
2021-12-17 04:20:11.518075 | GENERATION: 18 | ERRORS: best=52, median=170.5, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=27.695
2021-12-17 04:20:13.703712 | GENERATION: 19 | ERRORS: best=52, median=190.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=23.49
2021-12-17 04:20:15.689613 | GENERATION: 20 | ERRORS: best=48, median=160.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=22.005
2021-12-17 04:20:17.385789 | GENERATION: 21 | ERRORS: best=48, median=128.5, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=20.715
2021-12-17 04:20:19.032995 | GENERATION: 22 | ERRORS: best=39, median=187.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=19.785
2021-12-17 04:20:20.907421 | GENERATION: 23 | ERRORS: best=48, median=235.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=19.79
2021-12-17 04:20:22.729487 | GENERATION: 24 | ERRORS: best=48, median=175.5, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=16.985
2021-12-17 04:20:24.218383 | GENERATION: 25 | ERRORS: best=44, median=219.5, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=17.09
2021-12-17 04:20:25.837227 | GENERATION: 26 | ERRORS: best=44, median=189.5, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=20.275
2021-12-17 04:20:27.558021 | GENERATION: 27 | ERRORS: best=44, median=175.5, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=22.895
2021-12-17 04:20:29.317390 | GENERATION: 28 | ERRORS: best=46, median=149.5, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=20.795
2021-12-17 04:20:30.988650 | GENERATION: 29 | ERRORS: best=47, median=165.5, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=20.435
2021-12-17 04:20:32.738500 | GENERATION: 30 | ERRORS: best=47, median=172.5, diversity=0.35 | INDIVIDUALS: n=200, avg_genome_length=20.365
Simplifying genome of length 24 with total error 0.
Simplified genome by 1 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_1 int_max input_2 int_min input_0 input_1 int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:30
