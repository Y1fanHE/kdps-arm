Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(runtime_limit=10, numeric_magnitude_limit=1000000000000.0, step_limit=200, collection_size_cap=1000, growth_cap=500), output_stacks=['stdout'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f1ca4ab7160>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f1cad3fcbb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f1ca4ab7730>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f1cad4256c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f1cad425c00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f1cad402a60>]
========================================
Start Run
========================================
2021-12-15 06:34:14.438623 | GENERATION: 1 | ERRORS: best=233, median=233.0, diversity=0.065 | INDIVIDUALS: n=200, avg_genome_length=49.875
2021-12-15 06:34:17.305852 | GENERATION: 2 | ERRORS: best=99, median=233.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=45.605
2021-12-15 06:34:21.257516 | GENERATION: 3 | ERRORS: best=99, median=233.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=51.72
2021-12-15 06:34:25.116201 | GENERATION: 4 | ERRORS: best=99, median=225.5, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=59.89
2021-12-15 06:34:28.868724 | GENERATION: 5 | ERRORS: best=99, median=233.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=59.515
2021-12-15 06:34:32.551967 | GENERATION: 6 | ERRORS: best=99, median=233.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=60.28
2021-12-15 06:34:36.390072 | GENERATION: 7 | ERRORS: best=99, median=209.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=57.975
2021-12-15 06:34:40.398938 | GENERATION: 8 | ERRORS: best=99, median=178.5, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=58.58
2021-12-15 06:34:44.047953 | GENERATION: 9 | ERRORS: best=99, median=190.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=57.25
2021-12-15 06:34:47.414126 | GENERATION: 10 | ERRORS: best=96, median=202.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=54.825
2021-12-15 06:34:50.418216 | GENERATION: 11 | ERRORS: best=96, median=158.5, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=46.46
2021-12-15 06:34:53.179130 | GENERATION: 12 | ERRORS: best=96, median=173.5, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=40.565
2021-12-15 06:34:55.897349 | GENERATION: 13 | ERRORS: best=94, median=167.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=40.335
2021-12-15 06:34:58.597023 | GENERATION: 14 | ERRORS: best=94, median=185.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=32.48
2021-12-15 06:35:01.033027 | GENERATION: 15 | ERRORS: best=94, median=190.5, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=26.17
2021-12-15 06:35:03.713702 | GENERATION: 16 | ERRORS: best=61, median=189.5, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=25.925
2021-12-15 06:35:05.658979 | GENERATION: 17 | ERRORS: best=61, median=168.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=16.33
2021-12-15 06:35:07.651633 | GENERATION: 18 | ERRORS: best=61, median=121.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=17.335
2021-12-15 06:35:09.391190 | GENERATION: 19 | ERRORS: best=61, median=121.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=16.6
2021-12-15 06:35:11.075505 | GENERATION: 20 | ERRORS: best=61, median=165.5, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=17.105
2021-12-15 06:35:13.090953 | GENERATION: 21 | ERRORS: best=61, median=152.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=17.315
2021-12-15 06:35:14.936982 | GENERATION: 22 | ERRORS: best=38, median=173.5, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=17.84
2021-12-15 06:35:16.702935 | GENERATION: 23 | ERRORS: best=38, median=121.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=15.745
2021-12-15 06:35:18.209305 | GENERATION: 24 | ERRORS: best=38, median=116.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=10.67
2021-12-15 06:35:19.697071 | GENERATION: 25 | ERRORS: best=38, median=116.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=10.645
2021-12-15 06:35:21.334463 | GENERATION: 26 | ERRORS: best=38, median=117.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=9.91
2021-12-15 06:35:22.876896 | GENERATION: 27 | ERRORS: best=38, median=116.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=9.075
2021-12-15 06:35:24.662390 | GENERATION: 28 | ERRORS: best=38, median=117.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=8.245
2021-12-15 06:35:25.978732 | GENERATION: 29 | ERRORS: best=38, median=145.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=6.36
2021-12-15 06:35:27.431304 | GENERATION: 30 | ERRORS: best=38, median=204.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=7.64
2021-12-15 06:35:28.748961 | GENERATION: 31 | ERRORS: best=38, median=116.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=7.65
2021-12-15 06:35:30.255340 | GENERATION: 32 | ERRORS: best=38, median=152.5, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=7.345
2021-12-15 06:35:31.889831 | GENERATION: 33 | ERRORS: best=38, median=130.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=7.72
2021-12-15 06:35:33.449834 | GENERATION: 34 | ERRORS: best=38, median=116.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=7.925
2021-12-15 06:35:34.942766 | GENERATION: 35 | ERRORS: best=38, median=119.5, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=7.63
2021-12-15 06:35:36.406363 | GENERATION: 36 | ERRORS: best=38, median=117.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=7.68
2021-12-15 06:35:38.061870 | GENERATION: 37 | ERRORS: best=38, median=117.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=7.41
2021-12-15 06:35:39.695049 | GENERATION: 38 | ERRORS: best=38, median=116.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=7.5
2021-12-15 06:35:41.207797 | GENERATION: 39 | ERRORS: best=38, median=116.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=7.725
2021-12-15 06:35:42.724018 | GENERATION: 40 | ERRORS: best=38, median=117.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=8.405
Simplifying genome of length 13 with total error 0.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_1 input_2 int_max input_0 input_1 input_2 int_min int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:48
