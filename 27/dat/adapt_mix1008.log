Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, growth_cap=500, step_limit=200, runtime_limit=10), output_stacks=['stdout'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fac178150a0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fac1ef07a00>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fac17815310>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fac1ef22640>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fac1ef22440>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fac1ef0ca60>]
========================================
Start Run
========================================
2021-12-15 00:38:12.749760 | GENERATION: 1 | ERRORS: best=217, median=239.0, diversity=0.1 | INDIVIDUALS: n=200, avg_genome_length=52.04
2021-12-15 00:38:20.585622 | GENERATION: 2 | ERRORS: best=98, median=228.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=91.27
2021-12-15 00:38:25.898672 | GENERATION: 3 | ERRORS: best=91, median=225.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=85.995
2021-12-15 00:38:30.325420 | GENERATION: 4 | ERRORS: best=91, median=184.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=82.65
2021-12-15 00:38:34.983811 | GENERATION: 5 | ERRORS: best=91, median=178.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=81.635
2021-12-15 00:38:39.004644 | GENERATION: 6 | ERRORS: best=91, median=157.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=78.69
2021-12-15 00:38:43.482593 | GENERATION: 7 | ERRORS: best=91, median=168.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=77.095
2021-12-15 00:38:47.735599 | GENERATION: 8 | ERRORS: best=91, median=130.5, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=75.41
2021-12-15 00:38:51.755557 | GENERATION: 9 | ERRORS: best=91, median=141.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=74.035
2021-12-15 00:38:55.833713 | GENERATION: 10 | ERRORS: best=91, median=117.0, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=73.495
2021-12-15 00:38:59.789466 | GENERATION: 11 | ERRORS: best=91, median=120.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=73.24
2021-12-15 00:39:03.690938 | GENERATION: 12 | ERRORS: best=91, median=115.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=72.515
2021-12-15 00:39:07.899265 | GENERATION: 13 | ERRORS: best=91, median=145.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=71.28
2021-12-15 00:39:11.357205 | GENERATION: 14 | ERRORS: best=91, median=103.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=70.93
2021-12-15 00:39:14.862370 | GENERATION: 15 | ERRORS: best=91, median=127.5, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=70.495
2021-12-15 00:39:18.484867 | GENERATION: 16 | ERRORS: best=91, median=128.5, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=70.01
2021-12-15 00:39:22.324001 | GENERATION: 17 | ERRORS: best=90, median=110.5, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=67.87
2021-12-15 00:39:26.014238 | GENERATION: 18 | ERRORS: best=51, median=109.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=68.055
2021-12-15 00:39:30.004977 | GENERATION: 19 | ERRORS: best=49, median=101.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=70.03
2021-12-15 00:39:34.500127 | GENERATION: 20 | ERRORS: best=48, median=102.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=69.82
2021-12-15 00:39:39.831919 | GENERATION: 21 | ERRORS: best=48, median=103.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=69.955
2021-12-15 00:39:45.022477 | GENERATION: 22 | ERRORS: best=48, median=101.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=69.515
2021-12-15 00:39:49.847373 | GENERATION: 23 | ERRORS: best=48, median=102.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=67.25
2021-12-15 00:39:55.189455 | GENERATION: 24 | ERRORS: best=48, median=98.5, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=63.385
2021-12-15 00:40:00.110153 | GENERATION: 25 | ERRORS: best=48, median=100.5, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=60.32
2021-12-15 00:40:04.670250 | GENERATION: 26 | ERRORS: best=48, median=99.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=59.63
2021-12-15 00:40:09.012616 | GENERATION: 27 | ERRORS: best=22, median=97.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=58.995
2021-12-15 00:40:13.242627 | GENERATION: 28 | ERRORS: best=22, median=98.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=55.375
2021-12-15 00:40:16.989527 | GENERATION: 29 | ERRORS: best=20, median=92.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=53.25
2021-12-15 00:40:20.905723 | GENERATION: 30 | ERRORS: best=17, median=79.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=51.93
2021-12-15 00:40:24.772927 | GENERATION: 31 | ERRORS: best=9, median=96.5, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=49.665
2021-12-15 00:40:28.453656 | GENERATION: 32 | ERRORS: best=9, median=91.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=50.03
Simplifying genome of length 52 with total error 0.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 3 to length 45.
Simplified genome by 3 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 3 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 2 to length 28.
Simplified genome by 3 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 3 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 2 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=1), Input(input_index=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_1 int_max input_1 input_0 int_min input_2 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:40
