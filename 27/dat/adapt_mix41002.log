Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], push_config=PushConfig(collection_size_cap=1000, runtime_limit=10, step_limit=200, numeric_magnitude_limit=1000000000000.0, growth_cap=500), arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f57ef1fdc40>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f57ef1fdeb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f57ef1fd850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f57e7fce1c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f57e7fce140>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f57ef201e50>]
========================================
Start Run
========================================
2021-12-17 02:02:05.693299 | GENERATION: 1 | ERRORS: best=167, median=4880.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=58.275
2021-12-17 02:02:11.806456 | GENERATION: 2 | ERRORS: best=126, median=207.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=72.31
2021-12-17 02:02:17.077842 | GENERATION: 3 | ERRORS: best=95, median=208.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=69.5
2021-12-17 02:02:20.568414 | GENERATION: 4 | ERRORS: best=95, median=176.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=64.69
2021-12-17 02:02:24.126010 | GENERATION: 5 | ERRORS: best=93, median=227.5, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=64.36
2021-12-17 02:02:28.633793 | GENERATION: 6 | ERRORS: best=93, median=227.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=65.42
2021-12-17 02:02:32.885900 | GENERATION: 7 | ERRORS: best=91, median=233.5, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=66.33
2021-12-17 02:02:37.062305 | GENERATION: 8 | ERRORS: best=91, median=208.5, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=64.125
2021-12-17 02:02:40.901045 | GENERATION: 9 | ERRORS: best=91, median=181.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=63.955
2021-12-17 02:02:44.685365 | GENERATION: 10 | ERRORS: best=91, median=215.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=62.815
2021-12-17 02:02:48.563829 | GENERATION: 11 | ERRORS: best=91, median=189.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=61.945
2021-12-17 02:02:52.507880 | GENERATION: 12 | ERRORS: best=91, median=174.5, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=62.355
2021-12-17 02:02:56.162003 | GENERATION: 13 | ERRORS: best=91, median=145.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=61.725
2021-12-17 02:02:59.792044 | GENERATION: 14 | ERRORS: best=90, median=179.5, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=63.24
2021-12-17 02:03:03.308599 | GENERATION: 15 | ERRORS: best=81, median=156.0, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=63.405
2021-12-17 02:03:06.596428 | GENERATION: 16 | ERRORS: best=80, median=149.0, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=63.665
2021-12-17 02:03:09.895260 | GENERATION: 17 | ERRORS: best=75, median=188.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=63.845
2021-12-17 02:03:13.041006 | GENERATION: 18 | ERRORS: best=75, median=179.0, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=63.235
2021-12-17 02:03:16.261780 | GENERATION: 19 | ERRORS: best=74, median=129.5, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=63.05
2021-12-17 02:03:19.159811 | GENERATION: 20 | ERRORS: best=74, median=191.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=63.585
2021-12-17 02:03:22.126393 | GENERATION: 21 | ERRORS: best=74, median=148.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=63.255
2021-12-17 02:03:25.248553 | GENERATION: 22 | ERRORS: best=74, median=161.5, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=62.125
2021-12-17 02:03:28.198884 | GENERATION: 23 | ERRORS: best=74, median=143.5, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=62.64
2021-12-17 02:03:31.129917 | GENERATION: 24 | ERRORS: best=74, median=141.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=60.83
2021-12-17 02:03:34.003322 | GENERATION: 25 | ERRORS: best=54, median=155.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=59.64
2021-12-17 02:03:36.812767 | GENERATION: 26 | ERRORS: best=54, median=136.5, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=59.075
2021-12-17 02:03:39.627810 | GENERATION: 27 | ERRORS: best=54, median=157.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=57.46
2021-12-17 02:03:42.409220 | GENERATION: 28 | ERRORS: best=54, median=133.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=58.44
2021-12-17 02:03:45.154278 | GENERATION: 29 | ERRORS: best=54, median=126.0, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=57.66
2021-12-17 02:03:47.998594 | GENERATION: 30 | ERRORS: best=54, median=143.0, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=57.245
2021-12-17 02:03:51.003210 | GENERATION: 31 | ERRORS: best=54, median=126.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=57.07
2021-12-17 02:03:53.773588 | GENERATION: 32 | ERRORS: best=54, median=121.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=56.04
2021-12-17 02:03:56.807422 | GENERATION: 33 | ERRORS: best=54, median=126.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=56.86
2021-12-17 02:03:59.752689 | GENERATION: 34 | ERRORS: best=54, median=128.5, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=55.07
2021-12-17 02:04:02.758950 | GENERATION: 35 | ERRORS: best=54, median=126.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=55.825
2021-12-17 02:04:05.641207 | GENERATION: 36 | ERRORS: best=54, median=126.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=53.51
2021-12-17 02:04:08.365035 | GENERATION: 37 | ERRORS: best=53, median=116.5, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=51.89
2021-12-17 02:04:11.134541 | GENERATION: 38 | ERRORS: best=31, median=116.5, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=50.695
2021-12-17 02:04:14.199496 | GENERATION: 39 | ERRORS: best=31, median=117.5, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=49.17
2021-12-17 02:04:17.157814 | GENERATION: 40 | ERRORS: best=4, median=126.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=45.905
Simplifying genome of length 48 with total error 0.
Simplified genome by 3 to length 45.
Simplified genome by 1 to length 44.
Simplified genome by 2 to length 42.
Simplified genome by 3 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 3 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 3 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), InstructionMeta(name='exec_dup', code_blocks=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=1), Input(input_index=2), Closer(), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 exec_dup (int_min int_max input_1 input_2) int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:37
