Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(collection_size_cap=1000, runtime_limit=10, step_limit=200, numeric_magnitude_limit=1000000000000.0, growth_cap=500), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f188ae62640>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f189188cc10>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f188ae62130>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f188860ee80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f1891ca2680>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f1889e78430>]
========================================
Start Run
========================================
2021-12-17 16:37:27.149937 | GENERATION: 1 | ERRORS: best=152, median=400.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=48.865 | VIRUSES: gene_rate=0.000
2021-12-17 16:37:30.716058 | GENERATION: 2 | ERRORS: best=87, median=201.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=59.535 | VIRUSES: gene_rate=0.006
2021-12-17 16:37:34.503984 | GENERATION: 3 | ERRORS: best=87, median=143.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=66.225 | VIRUSES: gene_rate=0.016
2021-12-17 16:37:38.182350 | GENERATION: 4 | ERRORS: best=87, median=121.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=66.855 | VIRUSES: gene_rate=0.023
2021-12-17 16:37:42.022200 | GENERATION: 5 | ERRORS: best=70, median=114.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=64.805 | VIRUSES: gene_rate=0.030
2021-12-17 16:37:45.665048 | GENERATION: 6 | ERRORS: best=70, median=125.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=63.365 | VIRUSES: gene_rate=0.029
2021-12-17 16:37:49.304543 | GENERATION: 7 | ERRORS: best=70, median=120.0, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=62.125 | VIRUSES: gene_rate=0.039
2021-12-17 16:37:52.915497 | GENERATION: 8 | ERRORS: best=67, median=119.5, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=61.065 | VIRUSES: gene_rate=0.041
2021-12-17 16:37:56.831459 | GENERATION: 9 | ERRORS: best=65, median=127.0, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=60.835 | VIRUSES: gene_rate=0.037
2021-12-17 16:38:00.884856 | GENERATION: 10 | ERRORS: best=60, median=127.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=60.645 | VIRUSES: gene_rate=0.042
2021-12-17 16:38:05.015144 | GENERATION: 11 | ERRORS: best=47, median=125.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=59.4 | VIRUSES: gene_rate=0.054
2021-12-17 16:38:09.310186 | GENERATION: 12 | ERRORS: best=38, median=105.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=65.055 | VIRUSES: gene_rate=0.072
2021-12-17 16:38:13.768797 | GENERATION: 13 | ERRORS: best=32, median=137.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=67.18 | VIRUSES: gene_rate=0.085
2021-12-17 16:38:18.541929 | GENERATION: 14 | ERRORS: best=32, median=189.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=66.91 | VIRUSES: gene_rate=0.091
2021-12-17 16:38:23.180415 | GENERATION: 15 | ERRORS: best=32, median=151.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=67.35 | VIRUSES: gene_rate=0.100
2021-12-17 16:38:28.258905 | GENERATION: 16 | ERRORS: best=32, median=136.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=67.315 | VIRUSES: gene_rate=0.118
Simplifying genome of length 69 with total error 0.
Simplified genome by 1 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 1 to length 66.
Simplified genome by 2 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 1 to length 60.
Simplified genome by 1 to length 59.
Simplified genome by 1 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 1 to length 55.
Simplified genome by 2 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 2 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 2 to length 46.
Simplified genome by 2 to length 44.
Simplified genome by 3 to length 41.
Simplified genome by 1 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 3 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 3 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 3 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=1), Input(input_index=2), VirusInstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=2), Input(input_index=1), VirusInstructionMeta(name='int_min', code_blocks=0), VirusInstructionMeta(name='int_max', code_blocks=0), VirusInstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_1 input_2 vint_max input_0 input_2 input_1 vint_min vint_max vint_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:28
