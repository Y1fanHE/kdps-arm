Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(growth_cap=500, numeric_magnitude_limit=1000000000000.0, step_limit=200, collection_size_cap=1000, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f41c2dec4c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f41c2deceb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f41c2dec850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f41bc16e940>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f41bc16e040>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f41c2defe50>]
========================================
Start Run
========================================
2021-12-17 07:46:18.751235 | GENERATION: 1 | ERRORS: best=183, median=777.0, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=62.405
2021-12-17 07:46:25.310943 | GENERATION: 2 | ERRORS: best=88, median=233.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=32.165
2021-12-17 07:46:29.576450 | GENERATION: 3 | ERRORS: best=88, median=233.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=55.98
2021-12-17 07:46:32.442982 | GENERATION: 4 | ERRORS: best=88, median=181.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=40.71
2021-12-17 07:46:34.825151 | GENERATION: 5 | ERRORS: best=88, median=181.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=33.065
2021-12-17 07:46:36.949617 | GENERATION: 6 | ERRORS: best=88, median=103.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=29.495
2021-12-17 07:46:38.986720 | GENERATION: 7 | ERRORS: best=88, median=103.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=28.87
2021-12-17 07:46:40.697769 | GENERATION: 8 | ERRORS: best=88, median=140.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=26.735
2021-12-17 07:46:42.480079 | GENERATION: 9 | ERRORS: best=86, median=103.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=28.135
2021-12-17 07:46:44.478608 | GENERATION: 10 | ERRORS: best=86, median=233.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=27.105
2021-12-17 07:46:46.313994 | GENERATION: 11 | ERRORS: best=88, median=201.5, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=25.98
2021-12-17 07:46:48.076596 | GENERATION: 12 | ERRORS: best=85, median=197.5, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=20.73
2021-12-17 07:46:49.834973 | GENERATION: 13 | ERRORS: best=78, median=151.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=18.64
2021-12-17 07:46:51.482670 | GENERATION: 14 | ERRORS: best=59, median=219.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=14.205
2021-12-17 07:46:53.080693 | GENERATION: 15 | ERRORS: best=44, median=143.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=12.66
2021-12-17 07:46:54.584215 | GENERATION: 16 | ERRORS: best=44, median=180.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=12.8
2021-12-17 07:46:56.309886 | GENERATION: 17 | ERRORS: best=26, median=160.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=12.99
2021-12-17 07:46:58.046146 | GENERATION: 18 | ERRORS: best=26, median=233.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=14.125
2021-12-17 07:46:59.792815 | GENERATION: 19 | ERRORS: best=26, median=120.5, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=13.895
2021-12-17 07:47:01.713743 | GENERATION: 20 | ERRORS: best=26, median=233.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=13.19
2021-12-17 07:47:03.471880 | GENERATION: 21 | ERRORS: best=26, median=125.5, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=12.315
2021-12-17 07:47:05.471162 | GENERATION: 22 | ERRORS: best=26, median=233.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=13.15
2021-12-17 07:47:07.099664 | GENERATION: 23 | ERRORS: best=26, median=156.5, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=12.65
2021-12-17 07:47:08.780861 | GENERATION: 24 | ERRORS: best=26, median=109.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=12.845
2021-12-17 07:47:10.226430 | GENERATION: 25 | ERRORS: best=26, median=157.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=12.475
2021-12-17 07:47:11.867956 | GENERATION: 26 | ERRORS: best=26, median=233.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=11.565
2021-12-17 07:47:13.534364 | GENERATION: 27 | ERRORS: best=26, median=193.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=11.265
Simplifying genome of length 17 with total error 0.
Simplified genome by 1 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 2 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_min int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:15
