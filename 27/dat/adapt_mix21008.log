Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, growth_cap=500, collection_size_cap=1000, runtime_limit=10, step_limit=200))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f53c565dc40>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f53c565deb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f53c565d640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f53be9f7400>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f53be9f7300>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f53c5660e50>]
========================================
Start Run
========================================
2021-12-17 04:56:00.934545 | GENERATION: 1 | ERRORS: best=217, median=239.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=52.04
2021-12-17 04:56:08.199169 | GENERATION: 2 | ERRORS: best=98, median=228.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=90.905
2021-12-17 04:56:12.940377 | GENERATION: 3 | ERRORS: best=91, median=219.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=87.41
2021-12-17 04:56:16.838537 | GENERATION: 4 | ERRORS: best=91, median=239.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=87.105
2021-12-17 04:56:20.811583 | GENERATION: 5 | ERRORS: best=91, median=204.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=84.45
2021-12-17 04:56:25.129945 | GENERATION: 6 | ERRORS: best=81, median=151.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=81.605
2021-12-17 04:56:29.491342 | GENERATION: 7 | ERRORS: best=52, median=128.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=81.625
2021-12-17 04:56:33.299784 | GENERATION: 8 | ERRORS: best=52, median=105.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=81.535
2021-12-17 04:56:37.376599 | GENERATION: 9 | ERRORS: best=52, median=107.5, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=82.43
2021-12-17 04:56:41.175902 | GENERATION: 10 | ERRORS: best=52, median=112.5, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=82.065
2021-12-17 04:56:44.722074 | GENERATION: 11 | ERRORS: best=52, median=111.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=77.24
2021-12-17 04:56:48.430140 | GENERATION: 12 | ERRORS: best=52, median=158.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=73.94
2021-12-17 04:56:51.806506 | GENERATION: 13 | ERRORS: best=52, median=101.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=74.45
2021-12-17 04:56:55.502584 | GENERATION: 14 | ERRORS: best=52, median=120.5, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=75.585
2021-12-17 04:56:59.167363 | GENERATION: 15 | ERRORS: best=52, median=105.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=74.03
2021-12-17 04:57:02.679432 | GENERATION: 16 | ERRORS: best=52, median=139.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=73.55
2021-12-17 04:57:06.090946 | GENERATION: 17 | ERRORS: best=52, median=101.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=71.47
2021-12-17 04:57:09.498055 | GENERATION: 18 | ERRORS: best=52, median=108.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=71.845
2021-12-17 04:57:12.802221 | GENERATION: 19 | ERRORS: best=52, median=108.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=70.58
2021-12-17 04:57:16.320215 | GENERATION: 20 | ERRORS: best=52, median=139.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=69.07
2021-12-17 04:57:19.817593 | GENERATION: 21 | ERRORS: best=52, median=142.5, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=67.045
2021-12-17 04:57:23.618297 | GENERATION: 22 | ERRORS: best=52, median=104.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=69.13
2021-12-17 04:57:27.272323 | GENERATION: 23 | ERRORS: best=52, median=103.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=67.46
2021-12-17 04:57:30.702286 | GENERATION: 24 | ERRORS: best=52, median=106.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=69.04
2021-12-17 04:57:34.298967 | GENERATION: 25 | ERRORS: best=52, median=147.5, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=67.7
2021-12-17 04:57:38.003885 | GENERATION: 26 | ERRORS: best=52, median=103.5, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=69.36
2021-12-17 04:57:41.441972 | GENERATION: 27 | ERRORS: best=52, median=132.5, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=68.275
2021-12-17 04:57:44.869509 | GENERATION: 28 | ERRORS: best=52, median=108.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=65.295
2021-12-17 04:57:48.342364 | GENERATION: 29 | ERRORS: best=52, median=111.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=63.9
2021-12-17 04:57:51.556214 | GENERATION: 30 | ERRORS: best=52, median=137.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=63.665
2021-12-17 04:57:54.573103 | GENERATION: 31 | ERRORS: best=39, median=135.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=63.48
2021-12-17 04:57:57.906607 | GENERATION: 32 | ERRORS: best=39, median=128.5, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=60.6
2021-12-17 04:58:01.041972 | GENERATION: 33 | ERRORS: best=39, median=103.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=60.21
2021-12-17 04:58:04.491440 | GENERATION: 34 | ERRORS: best=39, median=116.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=60.46
2021-12-17 04:58:07.769590 | GENERATION: 35 | ERRORS: best=39, median=100.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=60.55
2021-12-17 04:58:11.207479 | GENERATION: 36 | ERRORS: best=39, median=100.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=58.22
2021-12-17 04:58:14.722200 | GENERATION: 37 | ERRORS: best=39, median=133.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=59.485
2021-12-17 04:58:18.466927 | GENERATION: 38 | ERRORS: best=39, median=101.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=56.05
2021-12-17 04:58:21.953208 | GENERATION: 39 | ERRORS: best=39, median=103.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=57.525
2021-12-17 04:58:25.889202 | GENERATION: 40 | ERRORS: best=6, median=103.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=57.36
2021-12-17 04:58:29.972596 | GENERATION: 41 | ERRORS: best=6, median=102.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=62.505
2021-12-17 04:58:33.891478 | GENERATION: 42 | ERRORS: best=6, median=100.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=61.735
Simplifying genome of length 67 with total error 0.
Simplified genome by 2 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 2 to length 59.
Simplified genome by 1 to length 58.
Simplified genome by 3 to length 55.
Simplified genome by 2 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 2 to length 50.
Simplified genome by 3 to length 47.
Simplified genome by 3 to length 44.
Simplified genome by 1 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 1 to length 37.
Simplified genome by 3 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 2 to length 23.
Simplified genome by 3 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 3 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 2 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=1), Input(input_index=0), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_2 int_min input_1 input_0 input_2 int_max int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:03:00
