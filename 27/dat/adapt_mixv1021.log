Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(collection_size_cap=1000, step_limit=200, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fc443943640>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fc44a370c10>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fc4439433a0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc44a2c9b80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc44a2c9a00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fc443720430>]
========================================
Start Run
========================================
2021-12-17 19:43:32.479982 | GENERATION: 1 | ERRORS: best=221, median=500.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=60.655 | VIRUSES: gene_rate=0.000
2021-12-17 19:43:35.849334 | GENERATION: 2 | ERRORS: best=104, median=221.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=37.94 | VIRUSES: gene_rate=0.012
2021-12-17 19:43:39.038814 | GENERATION: 3 | ERRORS: best=102, median=181.5, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=36.1 | VIRUSES: gene_rate=0.037
2021-12-17 19:43:41.875368 | GENERATION: 4 | ERRORS: best=102, median=131.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=32.94 | VIRUSES: gene_rate=0.054
2021-12-17 19:43:44.760658 | GENERATION: 5 | ERRORS: best=102, median=151.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=33.79 | VIRUSES: gene_rate=0.062
2021-12-17 19:43:49.360550 | GENERATION: 6 | ERRORS: best=72, median=131.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=48.4 | VIRUSES: gene_rate=0.043
2021-12-17 19:43:54.040093 | GENERATION: 7 | ERRORS: best=65, median=144.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=51.81 | VIRUSES: gene_rate=0.047
2021-12-17 19:43:58.418485 | GENERATION: 8 | ERRORS: best=65, median=125.5, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=50.58 | VIRUSES: gene_rate=0.061
2021-12-17 19:44:02.356254 | GENERATION: 9 | ERRORS: best=49, median=121.0, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=48.76 | VIRUSES: gene_rate=0.074
2021-12-17 19:44:05.961116 | GENERATION: 10 | ERRORS: best=49, median=121.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=47.635 | VIRUSES: gene_rate=0.101
2021-12-17 19:44:09.360123 | GENERATION: 11 | ERRORS: best=41, median=121.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=46.465 | VIRUSES: gene_rate=0.123
2021-12-17 19:44:12.696592 | GENERATION: 12 | ERRORS: best=41, median=113.5, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=45.125 | VIRUSES: gene_rate=0.146
2021-12-17 19:44:15.894042 | GENERATION: 13 | ERRORS: best=41, median=108.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=45.84 | VIRUSES: gene_rate=0.173
Simplifying genome of length 42 with total error 0.
Simplified genome by 2 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 2 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 3 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 3 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome to length 11 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=1), Input(input_index=0), VirusInput(input_index=2), VirusInput(input_index=1), VirusInstructionMeta(name='int_min', code_blocks=0), VirusInstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_swap', code_blocks=0), VirusInput(input_index=2), VirusInstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), VirusInstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_1 input_0 vinput_2 vinput_1 vint_min vint_max int_swap vinput_2 vint_max int_min vprint_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:04
