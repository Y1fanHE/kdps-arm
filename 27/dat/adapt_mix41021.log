Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, runtime_limit=10, step_limit=200, growth_cap=500, collection_size_cap=1000))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fdbc52924c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fdbc5292eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fdbc5292640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fdbbc8a1fc0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fdbbc8a1040>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7fdbc5296e50>]
========================================
Start Run
========================================
2021-12-17 12:03:04.418213 | GENERATION: 1 | ERRORS: best=221, median=2030.5, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=60.92
2021-12-17 12:03:07.809249 | GENERATION: 2 | ERRORS: best=173, median=221.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=38.73
2021-12-17 12:03:12.327853 | GENERATION: 3 | ERRORS: best=102, median=234.5, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=55.875
2021-12-17 12:03:17.272417 | GENERATION: 4 | ERRORS: best=102, median=235.0, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=55.37
2021-12-17 12:03:22.326877 | GENERATION: 5 | ERRORS: best=102, median=221.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=50.325
2021-12-17 12:03:26.886782 | GENERATION: 6 | ERRORS: best=102, median=213.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=49.605
2021-12-17 12:03:31.197660 | GENERATION: 7 | ERRORS: best=102, median=221.5, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=48.35
2021-12-17 12:03:35.026334 | GENERATION: 8 | ERRORS: best=102, median=190.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=47.02
2021-12-17 12:03:39.082324 | GENERATION: 9 | ERRORS: best=102, median=202.5, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=48.245
2021-12-17 12:03:42.917637 | GENERATION: 10 | ERRORS: best=96, median=156.5, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=48.145
2021-12-17 12:03:46.823518 | GENERATION: 11 | ERRORS: best=96, median=152.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=47.295
2021-12-17 12:03:51.023477 | GENERATION: 12 | ERRORS: best=96, median=140.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=45.64
2021-12-17 12:03:54.972133 | GENERATION: 13 | ERRORS: best=55, median=181.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=45.195
2021-12-17 12:03:58.523027 | GENERATION: 14 | ERRORS: best=55, median=207.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=42.425
2021-12-17 12:04:01.806116 | GENERATION: 15 | ERRORS: best=55, median=155.5, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=40.81
2021-12-17 12:04:04.797458 | GENERATION: 16 | ERRORS: best=55, median=175.5, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=39.255
2021-12-17 12:04:07.465339 | GENERATION: 17 | ERRORS: best=55, median=164.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=37.115
2021-12-17 12:04:10.159746 | GENERATION: 18 | ERRORS: best=49, median=197.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=36.19
2021-12-17 12:04:12.457291 | GENERATION: 19 | ERRORS: best=49, median=142.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=35.98
2021-12-17 12:04:14.933097 | GENERATION: 20 | ERRORS: best=49, median=166.5, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=35.09
2021-12-17 12:04:17.546077 | GENERATION: 21 | ERRORS: best=48, median=131.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=34.055
2021-12-17 12:04:19.644567 | GENERATION: 22 | ERRORS: best=47, median=121.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=29.475
2021-12-17 12:04:21.587233 | GENERATION: 23 | ERRORS: best=47, median=121.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=26.89
2021-12-17 12:04:23.649245 | GENERATION: 24 | ERRORS: best=47, median=114.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=25.37
2021-12-17 12:04:25.435356 | GENERATION: 25 | ERRORS: best=47, median=119.5, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=23.525
2021-12-17 12:04:27.288919 | GENERATION: 26 | ERRORS: best=47, median=114.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=22.15
2021-12-17 12:04:28.954068 | GENERATION: 27 | ERRORS: best=47, median=116.5, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=21.54
Simplifying genome of length 28 with total error 0.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 2 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_1 input_2 int_max input_0 input_1 input_2 int_min int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:42
