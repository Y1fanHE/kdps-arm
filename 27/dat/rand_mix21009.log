Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(growth_cap=500, step_limit=200, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000), output_stacks=['stdout'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f9066a924c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f9066a92eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f9066a92850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f905e39e880>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f905e39e780>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f9066a95e50>]
========================================
Start Run
========================================
2021-12-17 05:39:22.313474 | GENERATION: 1 | ERRORS: best=237, median=4688.0, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=59.985
2021-12-17 05:39:24.612363 | GENERATION: 2 | ERRORS: best=103, median=237.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=52.105
2021-12-17 05:39:27.249462 | GENERATION: 3 | ERRORS: best=96, median=225.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=40.94
2021-12-17 05:39:30.023797 | GENERATION: 4 | ERRORS: best=96, median=186.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=43.71
2021-12-17 05:39:33.089867 | GENERATION: 5 | ERRORS: best=96, median=225.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=42.135
2021-12-17 05:39:36.226569 | GENERATION: 6 | ERRORS: best=96, median=237.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=39.45
2021-12-17 05:39:39.445509 | GENERATION: 7 | ERRORS: best=96, median=149.5, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=38.375
2021-12-17 05:39:42.904042 | GENERATION: 8 | ERRORS: best=96, median=115.5, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=35.425
2021-12-17 05:39:46.077147 | GENERATION: 9 | ERRORS: best=96, median=105.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=33.17
2021-12-17 05:39:49.054707 | GENERATION: 10 | ERRORS: best=96, median=235.5, diversity=0.35 | INDIVIDUALS: n=200, avg_genome_length=35.94
2021-12-17 05:39:52.819185 | GENERATION: 11 | ERRORS: best=95, median=237.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=33.37
2021-12-17 05:39:56.292786 | GENERATION: 12 | ERRORS: best=94, median=237.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=33.085
2021-12-17 05:39:59.763909 | GENERATION: 13 | ERRORS: best=94, median=237.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=30.93
2021-12-17 05:40:02.577653 | GENERATION: 14 | ERRORS: best=95, median=225.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=26.585
2021-12-17 05:40:05.492261 | GENERATION: 15 | ERRORS: best=95, median=225.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=25.93
2021-12-17 05:40:08.729846 | GENERATION: 16 | ERRORS: best=67, median=225.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=27.17
2021-12-17 05:40:11.480848 | GENERATION: 17 | ERRORS: best=67, median=237.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=29.08
2021-12-17 05:40:14.178448 | GENERATION: 18 | ERRORS: best=87, median=237.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=29.97
2021-12-17 05:40:17.138357 | GENERATION: 19 | ERRORS: best=94, median=228.5, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=30.62
2021-12-17 05:40:19.783050 | GENERATION: 20 | ERRORS: best=95, median=235.5, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=26.41
2021-12-17 05:40:22.480172 | GENERATION: 21 | ERRORS: best=95, median=237.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=24.955
2021-12-17 05:40:25.146119 | GENERATION: 22 | ERRORS: best=82, median=225.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=24.555
2021-12-17 05:40:28.070754 | GENERATION: 23 | ERRORS: best=82, median=223.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=24.935
2021-12-17 05:40:30.796084 | GENERATION: 24 | ERRORS: best=82, median=237.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=23.115
2021-12-17 05:40:33.391495 | GENERATION: 25 | ERRORS: best=88, median=185.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=23.035
2021-12-17 05:40:36.053275 | GENERATION: 26 | ERRORS: best=82, median=235.5, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=20.995
2021-12-17 05:40:38.463243 | GENERATION: 27 | ERRORS: best=82, median=168.5, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=20.005
2021-12-17 05:40:40.833488 | GENERATION: 28 | ERRORS: best=75, median=225.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=21.2
2021-12-17 05:40:43.426568 | GENERATION: 29 | ERRORS: best=71, median=194.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=20.405
2021-12-17 05:40:45.722917 | GENERATION: 30 | ERRORS: best=47, median=230.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=20.155
2021-12-17 05:40:47.874599 | GENERATION: 31 | ERRORS: best=41, median=237.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=17.32
2021-12-17 05:40:50.080822 | GENERATION: 32 | ERRORS: best=16, median=173.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=18.515
Simplifying genome of length 21 with total error 0.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 2 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=2), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_0 input_1 input_2 int_min int_max input_2 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:46
