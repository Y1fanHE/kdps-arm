Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, step_limit=200, collection_size_cap=1000, runtime_limit=10, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f6eb1fa04c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f6eb1fa0eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f6eb1fa0640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f6ea82c9e40>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f6ea82c9d00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f6eb1fa4e50>]
========================================
Start Run
========================================
2021-12-17 06:38:33.352343 | GENERATION: 1 | ERRORS: best=231, median=231.0, diversity=0.05 | INDIVIDUALS: n=200, avg_genome_length=55.41
2021-12-17 06:38:35.937689 | GENERATION: 2 | ERRORS: best=113, median=231.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=60.085
2021-12-17 06:38:39.060952 | GENERATION: 3 | ERRORS: best=113, median=231.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=55.055
2021-12-17 06:38:42.407071 | GENERATION: 4 | ERRORS: best=71, median=166.0, diversity=0.305 | INDIVIDUALS: n=200, avg_genome_length=57.76
2021-12-17 06:38:45.928622 | GENERATION: 5 | ERRORS: best=69, median=184.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=57.16
2021-12-17 06:38:49.249237 | GENERATION: 6 | ERRORS: best=69, median=130.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=57.9
2021-12-17 06:38:52.580706 | GENERATION: 7 | ERRORS: best=69, median=128.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=55.455
2021-12-17 06:38:56.200583 | GENERATION: 8 | ERRORS: best=69, median=157.0, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=54.99
2021-12-17 06:38:59.477478 | GENERATION: 9 | ERRORS: best=59, median=123.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=53.345
2021-12-17 06:39:02.547931 | GENERATION: 10 | ERRORS: best=54, median=123.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=50.815
2021-12-17 06:39:05.802796 | GENERATION: 11 | ERRORS: best=54, median=110.5, diversity=0.365 | INDIVIDUALS: n=200, avg_genome_length=49.785
2021-12-17 06:39:08.995577 | GENERATION: 12 | ERRORS: best=33, median=119.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=47.67
2021-12-17 06:39:12.497468 | GENERATION: 13 | ERRORS: best=33, median=128.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=46.89
2021-12-17 06:39:15.868964 | GENERATION: 14 | ERRORS: best=33, median=145.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=45.98
2021-12-17 06:39:19.602020 | GENERATION: 15 | ERRORS: best=33, median=125.5, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=44.78
2021-12-17 06:39:22.688177 | GENERATION: 16 | ERRORS: best=33, median=123.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=43.265
2021-12-17 06:39:25.672472 | GENERATION: 17 | ERRORS: best=33, median=123.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=42.6
2021-12-17 06:39:29.212124 | GENERATION: 18 | ERRORS: best=31, median=123.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=42.855
2021-12-17 06:39:33.352134 | GENERATION: 19 | ERRORS: best=31, median=123.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=41.76
2021-12-17 06:39:37.286230 | GENERATION: 20 | ERRORS: best=31, median=124.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=40.115
2021-12-17 06:39:40.992911 | GENERATION: 21 | ERRORS: best=31, median=129.5, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=39.77
2021-12-17 06:39:44.705653 | GENERATION: 22 | ERRORS: best=31, median=123.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=39.405
2021-12-17 06:39:48.727240 | GENERATION: 23 | ERRORS: best=31, median=99.5, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=38.43
2021-12-17 06:39:52.769784 | GENERATION: 24 | ERRORS: best=31, median=121.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=35.875
2021-12-17 06:39:56.321635 | GENERATION: 25 | ERRORS: best=31, median=119.5, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=35.755
2021-12-17 06:39:59.860528 | GENERATION: 26 | ERRORS: best=31, median=119.5, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=34.22
2021-12-17 06:40:03.494845 | GENERATION: 27 | ERRORS: best=31, median=123.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=35.695
2021-12-17 06:40:06.888179 | GENERATION: 28 | ERRORS: best=15, median=123.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=35.925
2021-12-17 06:40:10.246738 | GENERATION: 29 | ERRORS: best=5, median=113.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=38.885
2021-12-17 06:40:13.222162 | GENERATION: 30 | ERRORS: best=5, median=109.5, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=37.205
2021-12-17 06:40:16.096728 | GENERATION: 31 | ERRORS: best=5, median=99.5, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=36.345
2021-12-17 06:40:19.239927 | GENERATION: 32 | ERRORS: best=5, median=119.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=35.465
2021-12-17 06:40:21.902688 | GENERATION: 33 | ERRORS: best=5, median=118.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=36.205
2021-12-17 06:40:24.643092 | GENERATION: 34 | ERRORS: best=5, median=101.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=36.035
2021-12-17 06:40:27.231193 | GENERATION: 35 | ERRORS: best=5, median=106.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=35.565
2021-12-17 06:40:29.936759 | GENERATION: 36 | ERRORS: best=5, median=101.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=35.39
2021-12-17 06:40:32.785445 | GENERATION: 37 | ERRORS: best=5, median=123.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=35.34
2021-12-17 06:40:35.349359 | GENERATION: 38 | ERRORS: best=5, median=123.0, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=35.27
2021-12-17 06:40:37.820246 | GENERATION: 39 | ERRORS: best=5, median=123.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=35.115
2021-12-17 06:40:40.610062 | GENERATION: 40 | ERRORS: best=5, median=113.0, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=35.54
Simplifying genome of length 37 with total error 0.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 2 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 3 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome to length 14 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), InstructionMeta(name='exec_dup', code_blocks=1), Input(input_index=1), Input(input_index=2), Closer(), InstructionMeta(name='int_gt', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='exec_when', code_blocks=1), Input(input_index=1), Closer(), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 exec_dup (input_1 input_2) int_gt int_min input_0 int_max exec_when (input_1) int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:31
