Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(step_limit=200, runtime_limit=10, growth_cap=500, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000), output_stacks=['stdout'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f6b17288160>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f6b2038dbb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f6b17288820>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f6b2039df80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f6b2039db40>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f6b20393a60>]
========================================
Start Run
========================================
2021-12-15 04:05:44.187034 | GENERATION: 1 | ERRORS: best=183, median=777.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=62.805
2021-12-15 04:05:51.610683 | GENERATION: 2 | ERRORS: best=183, median=233.0, diversity=0.075 | INDIVIDUALS: n=200, avg_genome_length=34.23
2021-12-15 04:05:58.645230 | GENERATION: 3 | ERRORS: best=103, median=205.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=24.48
2021-12-15 04:06:03.836630 | GENERATION: 4 | ERRORS: best=88, median=233.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=59.815
2021-12-15 04:06:08.030129 | GENERATION: 5 | ERRORS: best=88, median=233.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=77.265
2021-12-15 04:06:11.788240 | GENERATION: 6 | ERRORS: best=88, median=233.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=82.855
2021-12-15 04:06:15.755863 | GENERATION: 7 | ERRORS: best=88, median=233.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=82.895
2021-12-15 04:06:19.735906 | GENERATION: 8 | ERRORS: best=88, median=233.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=82.47
2021-12-15 04:06:23.533920 | GENERATION: 9 | ERRORS: best=72, median=233.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=82.325
2021-12-15 04:06:27.382415 | GENERATION: 10 | ERRORS: best=72, median=233.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=82.005
2021-12-15 04:06:31.794602 | GENERATION: 11 | ERRORS: best=72, median=233.0, diversity=0.305 | INDIVIDUALS: n=200, avg_genome_length=82.71
2021-12-15 04:06:35.692209 | GENERATION: 12 | ERRORS: best=72, median=233.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=81.805
2021-12-15 04:06:39.649557 | GENERATION: 13 | ERRORS: best=72, median=233.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=81.825
2021-12-15 04:06:43.711081 | GENERATION: 14 | ERRORS: best=72, median=233.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=81.56
2021-12-15 04:06:47.638319 | GENERATION: 15 | ERRORS: best=72, median=233.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=81.71
2021-12-15 04:06:52.135340 | GENERATION: 16 | ERRORS: best=72, median=233.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=81.47
2021-12-15 04:06:56.131327 | GENERATION: 17 | ERRORS: best=72, median=233.0, diversity=0.35 | INDIVIDUALS: n=200, avg_genome_length=81.195
2021-12-15 04:07:00.940541 | GENERATION: 18 | ERRORS: best=72, median=233.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=80.895
2021-12-15 04:07:05.999057 | GENERATION: 19 | ERRORS: best=72, median=233.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=81.06
2021-12-15 04:07:10.936035 | GENERATION: 20 | ERRORS: best=62, median=178.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=81.3
2021-12-15 04:07:14.995478 | GENERATION: 21 | ERRORS: best=62, median=233.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=81.12
2021-12-15 04:07:19.002800 | GENERATION: 22 | ERRORS: best=62, median=233.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=80.95
2021-12-15 04:07:22.833037 | GENERATION: 23 | ERRORS: best=62, median=203.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=81.055
2021-12-15 04:07:26.760556 | GENERATION: 24 | ERRORS: best=59, median=233.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=80.55
2021-12-15 04:07:30.637189 | GENERATION: 25 | ERRORS: best=56, median=141.5, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=81.79
2021-12-15 04:07:34.702891 | GENERATION: 26 | ERRORS: best=49, median=180.5, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=81.925
2021-12-15 04:07:38.842180 | GENERATION: 27 | ERRORS: best=42, median=110.0, diversity=0.55 | INDIVIDUALS: n=200, avg_genome_length=83.045
2021-12-15 04:07:43.165913 | GENERATION: 28 | ERRORS: best=42, median=137.5, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=82.915
2021-12-15 04:07:47.392466 | GENERATION: 29 | ERRORS: best=42, median=128.5, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=82.57
2021-12-15 04:07:51.146863 | GENERATION: 30 | ERRORS: best=42, median=110.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=82.035
2021-12-15 04:07:55.090968 | GENERATION: 31 | ERRORS: best=42, median=104.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=82.77
2021-12-15 04:07:59.600798 | GENERATION: 32 | ERRORS: best=42, median=104.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=83.16
2021-12-15 04:08:04.209108 | GENERATION: 33 | ERRORS: best=26, median=110.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=82.64
2021-12-15 04:08:08.733199 | GENERATION: 34 | ERRORS: best=26, median=103.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=82.98
2021-12-15 04:08:13.096246 | GENERATION: 35 | ERRORS: best=16, median=106.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=83.21
2021-12-15 04:08:17.877688 | GENERATION: 36 | ERRORS: best=13, median=106.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=83.695
2021-12-15 04:08:22.267367 | GENERATION: 37 | ERRORS: best=13, median=110.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=83.335
2021-12-15 04:08:26.659566 | GENERATION: 38 | ERRORS: best=13, median=113.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=82.85
2021-12-15 04:08:30.907907 | GENERATION: 39 | ERRORS: best=13, median=164.5, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=82.26
2021-12-15 04:08:34.825360 | GENERATION: 40 | ERRORS: best=13, median=105.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=82.795
2021-12-15 04:08:38.924984 | GENERATION: 41 | ERRORS: best=13, median=123.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=82.2
2021-12-15 04:08:43.661870 | GENERATION: 42 | ERRORS: best=13, median=132.5, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=82.12
2021-12-15 04:08:48.066929 | GENERATION: 43 | ERRORS: best=13, median=103.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=81.72
2021-12-15 04:08:52.506591 | GENERATION: 44 | ERRORS: best=13, median=103.5, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=82.33
Simplifying genome of length 77 with total error 0.
Simplified genome by 1 to length 76.
Simplified genome by 2 to length 74.
Simplified genome by 2 to length 72.
Simplified genome by 1 to length 71.
Simplified genome by 2 to length 69.
Simplified genome by 2 to length 67.
Simplified genome by 3 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 3 to length 58.
Simplified genome by 3 to length 55.
Simplified genome by 3 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 2 to length 47.
Simplified genome by 1 to length 46.
Simplified genome by 1 to length 45.
Simplified genome by 1 to length 44.
Simplified genome by 2 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 1 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 1 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 3 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 2 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 2 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=1), Input(input_index=2), InstructionMeta(name='exec_rot', code_blocks=3), InstructionMeta(name='print_int', code_blocks=0), Closer(), Closer(), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0)])
	Program:
	 (input_0 input_1 input_2 int_max int_min input_1 input_2 exec_rot (print_int) () (int_min int_max))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:03:41
