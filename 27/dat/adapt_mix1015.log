Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000, growth_cap=500, step_limit=200), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f20909ed340>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f209809cbb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f20909ed820>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f208fbfbe80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f209a272240>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f20980a2a60>]
========================================
Start Run
========================================
2021-12-15 05:31:51.364349 | GENERATION: 1 | ERRORS: best=233, median=285.0, diversity=0.085 | INDIVIDUALS: n=200, avg_genome_length=57.765
2021-12-15 05:31:54.860558 | GENERATION: 2 | ERRORS: best=183, median=233.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=48.84
2021-12-15 05:32:01.389109 | GENERATION: 3 | ERRORS: best=93, median=232.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=38.54
2021-12-15 05:32:04.486526 | GENERATION: 4 | ERRORS: best=51, median=114.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=40.08
2021-12-15 05:32:07.734544 | GENERATION: 5 | ERRORS: best=42, median=108.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=37.13
2021-12-15 05:32:11.210750 | GENERATION: 6 | ERRORS: best=42, median=99.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=36.39
2021-12-15 05:32:14.875378 | GENERATION: 7 | ERRORS: best=38, median=107.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=36.33
2021-12-15 05:32:18.907917 | GENERATION: 8 | ERRORS: best=38, median=93.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=36.175
2021-12-15 05:32:22.864049 | GENERATION: 9 | ERRORS: best=38, median=83.5, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=35.12
2021-12-15 05:32:26.434305 | GENERATION: 10 | ERRORS: best=38, median=84.0, diversity=0.31 | INDIVIDUALS: n=200, avg_genome_length=34.75
2021-12-15 05:32:29.962582 | GENERATION: 11 | ERRORS: best=38, median=74.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=34.225
2021-12-15 05:32:33.164874 | GENERATION: 12 | ERRORS: best=38, median=93.0, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=33.755
2021-12-15 05:32:36.298093 | GENERATION: 13 | ERRORS: best=33, median=74.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=33.43
2021-12-15 05:32:39.295792 | GENERATION: 14 | ERRORS: best=33, median=93.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=28.54
2021-12-15 05:32:41.734224 | GENERATION: 15 | ERRORS: best=33, median=84.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=27.345
2021-12-15 05:32:44.353152 | GENERATION: 16 | ERRORS: best=33, median=84.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=26.075
2021-12-15 05:32:47.268280 | GENERATION: 17 | ERRORS: best=33, median=84.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=26.545
2021-12-15 05:32:50.242696 | GENERATION: 18 | ERRORS: best=33, median=93.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=25.29
2021-12-15 05:32:52.969101 | GENERATION: 19 | ERRORS: best=33, median=84.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=26.905
2021-12-15 05:32:55.472792 | GENERATION: 20 | ERRORS: best=33, median=107.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=28.055
2021-12-15 05:32:58.141763 | GENERATION: 21 | ERRORS: best=33, median=84.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=28.63
2021-12-15 05:33:00.866820 | GENERATION: 22 | ERRORS: best=33, median=80.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=29.455
2021-12-15 05:33:03.323472 | GENERATION: 23 | ERRORS: best=33, median=80.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=29.685
2021-12-15 05:33:06.088684 | GENERATION: 24 | ERRORS: best=33, median=75.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=30.065
2021-12-15 05:33:09.076526 | GENERATION: 25 | ERRORS: best=33, median=84.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=29.755
2021-12-15 05:33:11.698823 | GENERATION: 26 | ERRORS: best=33, median=107.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=28.89
2021-12-15 05:33:14.526866 | GENERATION: 27 | ERRORS: best=33, median=76.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=30.25
2021-12-15 05:33:17.238191 | GENERATION: 28 | ERRORS: best=33, median=93.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=29.06
2021-12-15 05:33:19.882596 | GENERATION: 29 | ERRORS: best=33, median=84.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=28.45
2021-12-15 05:33:22.718374 | GENERATION: 30 | ERRORS: best=33, median=82.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=28.56
Simplifying genome of length 35 with total error 0.
Simplified genome by 2 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 3 to length 28.
Simplified genome by 2 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 2 to length 23.
Simplified genome by 3 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 2 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_max int_min input_0 input_1 int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:53
