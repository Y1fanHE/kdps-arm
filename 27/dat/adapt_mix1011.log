Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(collection_size_cap=1000, step_limit=200, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, growth_cap=500), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f96f8d0d160>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f97021ffbb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f96f8d0d130>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f96fa789740>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f96fa789540>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f9702205a60>]
========================================
Start Run
========================================
2021-12-15 02:43:01.384913 | GENERATION: 1 | ERRORS: best=231, median=231.0, diversity=0.06 | INDIVIDUALS: n=200, avg_genome_length=55.61
2021-12-15 02:43:04.547036 | GENERATION: 2 | ERRORS: best=203, median=231.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=63.47
2021-12-15 02:43:08.015288 | GENERATION: 3 | ERRORS: best=74, median=221.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=38.63
2021-12-15 02:43:14.338703 | GENERATION: 4 | ERRORS: best=74, median=211.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=36.535
2021-12-15 02:43:20.844939 | GENERATION: 5 | ERRORS: best=74, median=123.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=35.545
2021-12-15 02:43:26.182123 | GENERATION: 6 | ERRORS: best=74, median=113.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=32.045
2021-12-15 02:43:31.057922 | GENERATION: 7 | ERRORS: best=74, median=123.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=29.575
2021-12-15 02:43:34.529300 | GENERATION: 8 | ERRORS: best=74, median=113.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=26.76
2021-12-15 02:43:38.255572 | GENERATION: 9 | ERRORS: best=74, median=113.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=24.855
2021-12-15 02:43:41.159303 | GENERATION: 10 | ERRORS: best=32, median=113.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=21.665
2021-12-15 02:43:43.213975 | GENERATION: 11 | ERRORS: best=32, median=106.5, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=19.385
2021-12-15 02:43:45.359632 | GENERATION: 12 | ERRORS: best=32, median=101.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=18.43
2021-12-15 02:43:47.679809 | GENERATION: 13 | ERRORS: best=32, median=105.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=18.215
2021-12-15 02:43:49.944363 | GENERATION: 14 | ERRORS: best=32, median=108.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=17.76
2021-12-15 02:43:52.279560 | GENERATION: 15 | ERRORS: best=32, median=98.5, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=17.57
2021-12-15 02:43:54.801443 | GENERATION: 16 | ERRORS: best=32, median=96.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=16.93
2021-12-15 02:43:57.378500 | GENERATION: 17 | ERRORS: best=32, median=108.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=17.01
2021-12-15 02:43:59.875037 | GENERATION: 18 | ERRORS: best=32, median=101.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=16.745
2021-12-15 02:44:02.374807 | GENERATION: 19 | ERRORS: best=32, median=108.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=16.365
2021-12-15 02:44:04.755699 | GENERATION: 20 | ERRORS: best=32, median=96.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=15.83
2021-12-15 02:44:07.034892 | GENERATION: 21 | ERRORS: best=32, median=123.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=14.32
2021-12-15 02:44:09.519629 | GENERATION: 22 | ERRORS: best=32, median=108.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=14.21
2021-12-15 02:44:11.670299 | GENERATION: 23 | ERRORS: best=32, median=96.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=14.66
2021-12-15 02:44:13.993998 | GENERATION: 24 | ERRORS: best=32, median=96.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=14.485
2021-12-15 02:44:15.981050 | GENERATION: 25 | ERRORS: best=32, median=96.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=13.335
2021-12-15 02:44:18.421646 | GENERATION: 26 | ERRORS: best=32, median=98.5, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=14.525
2021-12-15 02:44:21.085590 | GENERATION: 27 | ERRORS: best=32, median=123.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=14.265
2021-12-15 02:44:23.308168 | GENERATION: 28 | ERRORS: best=32, median=96.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=14.075
2021-12-15 02:44:25.695561 | GENERATION: 29 | ERRORS: best=32, median=101.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=13.6
2021-12-15 02:44:27.888448 | GENERATION: 30 | ERRORS: best=32, median=112.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=12.875
2021-12-15 02:44:30.376822 | GENERATION: 31 | ERRORS: best=32, median=96.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=13.015
Simplifying genome of length 13 with total error 0.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_max int_min input_0 input_1 int_min int_max print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:50
