Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=3, push_config=PushConfig(runtime_limit=10, numeric_magnitude_limit=1000000000000.0, step_limit=200, growth_cap=500, collection_size_cap=1000))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f3d75f15c40>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f3d75f15eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f3d75f15640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f3d6f2e2e80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f3d6f2e2d80>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7f3d75f19e50>]
========================================
Start Run
========================================
2021-12-17 05:01:16.086494 | GENERATION: 1 | ERRORS: best=217, median=239.0, diversity=0.1 | INDIVIDUALS: n=200, avg_genome_length=51.77
2021-12-17 05:01:22.549079 | GENERATION: 2 | ERRORS: best=98, median=228.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=89.525
2021-12-17 05:01:27.219476 | GENERATION: 3 | ERRORS: best=91, median=223.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=86.605
2021-12-17 05:01:31.802510 | GENERATION: 4 | ERRORS: best=91, median=199.0, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=85.685
2021-12-17 05:01:36.119401 | GENERATION: 5 | ERRORS: best=91, median=218.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=83.535
2021-12-17 05:01:40.451196 | GENERATION: 6 | ERRORS: best=91, median=191.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=82.17
2021-12-17 05:01:44.802225 | GENERATION: 7 | ERRORS: best=91, median=166.5, diversity=0.315 | INDIVIDUALS: n=200, avg_genome_length=80.825
2021-12-17 05:01:49.423576 | GENERATION: 8 | ERRORS: best=91, median=181.5, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=79.94
2021-12-17 05:01:53.738930 | GENERATION: 9 | ERRORS: best=91, median=148.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=74.285
2021-12-17 05:01:57.583699 | GENERATION: 10 | ERRORS: best=91, median=146.5, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=71.45
2021-12-17 05:02:01.334943 | GENERATION: 11 | ERRORS: best=91, median=151.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=67.865
2021-12-17 05:02:05.229002 | GENERATION: 12 | ERRORS: best=91, median=146.0, diversity=0.45 | INDIVIDUALS: n=200, avg_genome_length=66.38
2021-12-17 05:02:08.807081 | GENERATION: 13 | ERRORS: best=91, median=103.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=63.39
2021-12-17 05:02:12.536116 | GENERATION: 14 | ERRORS: best=88, median=131.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=60.775
2021-12-17 05:02:16.338318 | GENERATION: 15 | ERRORS: best=80, median=149.5, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=56.79
2021-12-17 05:02:20.302599 | GENERATION: 16 | ERRORS: best=60, median=170.5, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=53.72
2021-12-17 05:02:24.058912 | GENERATION: 17 | ERRORS: best=60, median=107.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=51.29
2021-12-17 05:02:27.588965 | GENERATION: 18 | ERRORS: best=60, median=127.5, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=48.935
2021-12-17 05:02:31.006796 | GENERATION: 19 | ERRORS: best=47, median=108.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=48.35
2021-12-17 05:02:34.935750 | GENERATION: 20 | ERRORS: best=47, median=128.5, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=44.855
2021-12-17 05:02:38.624250 | GENERATION: 21 | ERRORS: best=47, median=101.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=43.79
2021-12-17 05:02:42.218579 | GENERATION: 22 | ERRORS: best=47, median=101.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=43.83
2021-12-17 05:02:45.786799 | GENERATION: 23 | ERRORS: best=47, median=103.0, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=42.52
2021-12-17 05:02:48.968568 | GENERATION: 24 | ERRORS: best=39, median=106.0, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=40.225
2021-12-17 05:02:51.985664 | GENERATION: 25 | ERRORS: best=39, median=101.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=34.975
2021-12-17 05:02:54.798315 | GENERATION: 26 | ERRORS: best=39, median=100.5, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=35.435
2021-12-17 05:02:57.463689 | GENERATION: 27 | ERRORS: best=39, median=100.5, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=34.155
2021-12-17 05:03:00.199197 | GENERATION: 28 | ERRORS: best=29, median=100.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=33.1
2021-12-17 05:03:02.955805 | GENERATION: 29 | ERRORS: best=29, median=101.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=31.195
2021-12-17 05:03:05.499324 | GENERATION: 30 | ERRORS: best=29, median=101.0, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=30.085
2021-12-17 05:03:08.002089 | GENERATION: 31 | ERRORS: best=29, median=101.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=29.835
2021-12-17 05:03:10.496488 | GENERATION: 32 | ERRORS: best=29, median=101.0, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=29.16
2021-12-17 05:03:13.059933 | GENERATION: 33 | ERRORS: best=35, median=102.0, diversity=0.44 | INDIVIDUALS: n=200, avg_genome_length=28.395
2021-12-17 05:03:15.496166 | GENERATION: 34 | ERRORS: best=35, median=101.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=26.45
2021-12-17 05:03:17.879494 | GENERATION: 35 | ERRORS: best=35, median=102.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=29.28
2021-12-17 05:03:20.234756 | GENERATION: 36 | ERRORS: best=35, median=103.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=28.83
2021-12-17 05:03:22.549714 | GENERATION: 37 | ERRORS: best=29, median=101.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=26.49
2021-12-17 05:03:24.579608 | GENERATION: 38 | ERRORS: best=29, median=101.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=26.93
2021-12-17 05:03:26.497336 | GENERATION: 39 | ERRORS: best=29, median=102.5, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=25.965
2021-12-17 05:03:28.556250 | GENERATION: 40 | ERRORS: best=29, median=101.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=25.7
2021-12-17 05:03:30.515381 | GENERATION: 41 | ERRORS: best=29, median=98.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=23.61
2021-12-17 05:03:32.338381 | GENERATION: 42 | ERRORS: best=30, median=101.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=23.345
2021-12-17 05:03:34.162252 | GENERATION: 43 | ERRORS: best=30, median=100.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=22.935
Simplifying genome of length 21 with total error 0.
Simplified genome by 1 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 2 to length 11.
Simplified genome by 1 to length 10.
Simplified genome to length 10 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_min int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:35
