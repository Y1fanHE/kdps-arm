Included 0 edge cases.
Included 100 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(growth_cap=500, step_limit=200, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, runtime_limit=10), output_stacks=['stdout'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7ff8f9fc44c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7ff8f9fc4eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7ff8f9fc4850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7ff8f190b940>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7ff8f190b340>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_int at 0x7ff8f9fc8e50>]
========================================
Start Run
========================================
2021-12-17 05:37:14.162627 | GENERATION: 1 | ERRORS: best=237, median=4688.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=60.28
2021-12-17 05:37:16.350354 | GENERATION: 2 | ERRORS: best=105, median=237.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=56.97
2021-12-17 05:37:19.289691 | GENERATION: 3 | ERRORS: best=96, median=237.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=36.425
2021-12-17 05:37:22.141580 | GENERATION: 4 | ERRORS: best=52, median=237.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=36.13
2021-12-17 05:37:25.210717 | GENERATION: 5 | ERRORS: best=52, median=221.5, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=41.635
2021-12-17 05:37:28.029454 | GENERATION: 6 | ERRORS: best=52, median=109.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=40.635
2021-12-17 05:37:31.042945 | GENERATION: 7 | ERRORS: best=52, median=115.0, diversity=0.415 | INDIVIDUALS: n=200, avg_genome_length=41.575
2021-12-17 05:37:34.086253 | GENERATION: 8 | ERRORS: best=52, median=165.5, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=41.065
2021-12-17 05:37:37.335184 | GENERATION: 9 | ERRORS: best=52, median=151.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=40.76
2021-12-17 05:37:40.350018 | GENERATION: 10 | ERRORS: best=52, median=150.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=40.94
2021-12-17 05:37:43.288289 | GENERATION: 11 | ERRORS: best=52, median=141.5, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=41.165
2021-12-17 05:37:46.381511 | GENERATION: 12 | ERRORS: best=52, median=109.0, diversity=0.395 | INDIVIDUALS: n=200, avg_genome_length=43.535
2021-12-17 05:37:49.504464 | GENERATION: 13 | ERRORS: best=52, median=142.5, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=43.32
2021-12-17 05:37:52.755721 | GENERATION: 14 | ERRORS: best=52, median=180.5, diversity=0.46 | INDIVIDUALS: n=200, avg_genome_length=43.73
2021-12-17 05:37:55.417228 | GENERATION: 15 | ERRORS: best=52, median=148.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=43.875
2021-12-17 05:37:58.291964 | GENERATION: 16 | ERRORS: best=52, median=109.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=43.745
2021-12-17 05:38:01.156670 | GENERATION: 17 | ERRORS: best=47, median=135.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=43.055
2021-12-17 05:38:04.127760 | GENERATION: 18 | ERRORS: best=47, median=109.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=42.89
2021-12-17 05:38:07.131156 | GENERATION: 19 | ERRORS: best=47, median=148.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=42.88
2021-12-17 05:38:10.150958 | GENERATION: 20 | ERRORS: best=47, median=151.5, diversity=0.465 | INDIVIDUALS: n=200, avg_genome_length=42.4
2021-12-17 05:38:13.292411 | GENERATION: 21 | ERRORS: best=47, median=123.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=41.385
2021-12-17 05:38:16.526654 | GENERATION: 22 | ERRORS: best=41, median=109.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=40.25
2021-12-17 05:38:19.238318 | GENERATION: 23 | ERRORS: best=41, median=105.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=39.81
2021-12-17 05:38:22.329131 | GENERATION: 24 | ERRORS: best=41, median=105.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=38.215
2021-12-17 05:38:25.743954 | GENERATION: 25 | ERRORS: best=41, median=105.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=37.335
2021-12-17 05:38:28.989195 | GENERATION: 26 | ERRORS: best=41, median=109.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=37.57
2021-12-17 05:38:32.012393 | GENERATION: 27 | ERRORS: best=41, median=105.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=37.29
2021-12-17 05:38:35.066598 | GENERATION: 28 | ERRORS: best=41, median=105.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=36.425
2021-12-17 05:38:37.887546 | GENERATION: 29 | ERRORS: best=41, median=105.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=35.78
2021-12-17 05:38:40.660112 | GENERATION: 30 | ERRORS: best=41, median=105.0, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=35.78
2021-12-17 05:38:43.618734 | GENERATION: 31 | ERRORS: best=41, median=105.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=35.16
2021-12-17 05:38:45.925523 | GENERATION: 32 | ERRORS: best=41, median=104.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=35.21
2021-12-17 05:38:48.546900 | GENERATION: 33 | ERRORS: best=27, median=105.0, diversity=0.375 | INDIVIDUALS: n=200, avg_genome_length=34.85
2021-12-17 05:38:50.826260 | GENERATION: 34 | ERRORS: best=27, median=103.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=36.85
2021-12-17 05:38:53.121068 | GENERATION: 35 | ERRORS: best=27, median=96.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=37.095
2021-12-17 05:38:55.390654 | GENERATION: 36 | ERRORS: best=27, median=103.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=38.625
2021-12-17 05:38:57.647709 | GENERATION: 37 | ERRORS: best=6, median=89.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=38.62
Simplifying genome of length 43 with total error 0.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 1 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 2 to length 12.
Simplified genome to length 12 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_stack_depth', code_blocks=0), InstructionMeta(name='int_shove_dup', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0)])
	Program:
	 (input_2 input_0 input_1 int_stack_depth int_shove_dup int_min int_max input_0 input_1 int_max int_min print_int)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:02:06
