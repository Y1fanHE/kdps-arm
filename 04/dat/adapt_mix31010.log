Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, runtime_limit=10, step_limit=600, growth_cap=500), arity=3, output_stacks=['bool'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f9ddb840100>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f9de7a0bdc0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f9ddb840640>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f9ddc22a300>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f9ddc22aa00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f9de7a11820>]
========================================
Start Run
========================================
2021-12-09 09:10:57.535150 | GENERATION: 1 | ERRORS: best=20, median=100000000.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=121.755
2021-12-09 09:11:02.586145 | GENERATION: 2 | ERRORS: best=20, median=28.5, diversity=0.07 | INDIVIDUALS: n=200, avg_genome_length=127.885
2021-12-09 09:11:09.134718 | GENERATION: 3 | ERRORS: best=20, median=47.5, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=118.32
2021-12-09 09:11:17.176975 | GENERATION: 4 | ERRORS: best=20, median=67.0, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=127.475
2021-12-09 09:11:27.016409 | GENERATION: 5 | ERRORS: best=18, median=3000026.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=138.815
2021-12-09 09:11:37.497553 | GENERATION: 6 | ERRORS: best=18, median=1000022.5, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=139.89
2021-12-09 09:11:47.397709 | GENERATION: 7 | ERRORS: best=18, median=1500036.0, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=135.355
2021-12-09 09:11:57.193292 | GENERATION: 8 | ERRORS: best=18, median=1000020.5, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=128.21
2021-12-09 09:12:07.432379 | GENERATION: 9 | ERRORS: best=18, median=2000021.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=129.96
2021-12-09 09:12:18.556135 | GENERATION: 10 | ERRORS: best=18, median=2000021.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=128.515
2021-12-09 09:12:31.908825 | GENERATION: 11 | ERRORS: best=18, median=1000018.5, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=132.57
2021-12-09 09:12:44.024897 | GENERATION: 12 | ERRORS: best=17, median=81.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=135.615
2021-12-09 09:12:56.764218 | GENERATION: 13 | ERRORS: best=16, median=2000021.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=138.71
2021-12-09 09:13:09.311231 | GENERATION: 14 | ERRORS: best=15, median=500049.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=140.59
2021-12-09 09:13:21.197875 | GENERATION: 15 | ERRORS: best=15, median=79.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=127.32
2021-12-09 09:13:33.215655 | GENERATION: 16 | ERRORS: best=16, median=79.5, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=125.41
2021-12-09 09:13:47.864891 | GENERATION: 17 | ERRORS: best=16, median=70.5, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=128.815
2021-12-09 09:14:02.987517 | GENERATION: 18 | ERRORS: best=15, median=80.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=127.605
2021-12-09 09:14:19.083174 | GENERATION: 19 | ERRORS: best=13, median=80.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=129.365
2021-12-09 09:14:35.907379 | GENERATION: 20 | ERRORS: best=2, median=80.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=129.735
2021-12-09 09:14:49.827720 | GENERATION: 21 | ERRORS: best=2, median=78.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=82.685
Simplifying genome of length 71 with total error 0.
Simplified genome by 2 to length 69.
Simplified genome by 1 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 2 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 1 to length 63.
Simplified genome by 1 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 1 to length 60.
Simplified genome by 2 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 3 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 2 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 2 to length 45.
Simplified genome by 2 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 1 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 3 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome to length 28 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='exec_do_while', code_blocks=1), InstructionMeta(name='str_make_empty', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='noop_open', code_blocks=1), InstructionMeta(name='str_remove_all_str', code_blocks=0), InstructionMeta(name='int_swap', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), Closer(), InstructionMeta(name='int_gt', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_shove_dup', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='exec_is_empty', code_blocks=0), InstructionMeta(name='exec_while', code_blocks=1), Closer(), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_remove_nth', code_blocks=0), InstructionMeta(name='str_contains_str', code_blocks=0), InstructionMeta(name='exec_is_empty', code_blocks=0), InstructionMeta(name='bool_swap', code_blocks=0), InstructionMeta(name='str_make_empty', code_blocks=0), Closer(), InstructionMeta(name='exec_if', code_blocks=2)])
	Program:
	 (exec_do_while (str_make_empty input_1 str_length str_length noop_open (str_remove_all_str int_swap input_0 str_length) int_gt input_2 str_shove_dup input_0 str_length exec_is_empty exec_while () input_1 str_length str_remove_nth str_contains_str exec_is_empty bool_swap str_make_empty) exec_if () ())
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:06:18
