Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['bool'], arity=3, push_config=PushConfig(step_limit=600, runtime_limit=10, growth_cap=500, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f8c5fa69790>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f8c6bc38c40>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f8c5fa69760>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8c6be2cb00>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8c5f69e700>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f8c6bc3d820>]
========================================
Start Run
========================================
2021-12-07 14:52:02.750012 | GENERATION: 1 | ERRORS: best=23, median=100000000.0, diversity=0.015 | INDIVIDUALS: n=200, avg_genome_length=117.045
2021-12-07 14:52:05.948667 | GENERATION: 2 | ERRORS: best=23, median=23.0, diversity=0.07 | INDIVIDUALS: n=200, avg_genome_length=104.78
2021-12-07 14:52:09.550918 | GENERATION: 3 | ERRORS: best=22, median=30.0, diversity=0.4 | INDIVIDUALS: n=200, avg_genome_length=100.06
2021-12-07 14:52:13.913501 | GENERATION: 4 | ERRORS: best=21, median=57.5, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=106.815
2021-12-07 14:52:18.768494 | GENERATION: 5 | ERRORS: best=21, median=69.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=105.195
2021-12-07 14:52:23.410234 | GENERATION: 6 | ERRORS: best=19, median=70.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=105.18
2021-12-07 14:52:28.641684 | GENERATION: 7 | ERRORS: best=19, median=63.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=110.715
2021-12-07 14:52:33.307182 | GENERATION: 8 | ERRORS: best=18, median=68.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=111.865
2021-12-07 14:52:38.424549 | GENERATION: 9 | ERRORS: best=18, median=56.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=111.55
2021-12-07 14:52:43.062564 | GENERATION: 10 | ERRORS: best=21, median=42.0, diversity=0.825 | INDIVIDUALS: n=200, avg_genome_length=110.315
2021-12-07 14:52:47.217475 | GENERATION: 11 | ERRORS: best=20, median=36.5, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=107.295
2021-12-07 14:52:51.952150 | GENERATION: 12 | ERRORS: best=21, median=42.0, diversity=0.815 | INDIVIDUALS: n=200, avg_genome_length=108.495
2021-12-07 14:52:56.311375 | GENERATION: 13 | ERRORS: best=19, median=38.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=101.9
2021-12-07 14:53:01.031087 | GENERATION: 14 | ERRORS: best=19, median=34.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=98.415
2021-12-07 14:53:05.927880 | GENERATION: 15 | ERRORS: best=19, median=33.0, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=97.14
2021-12-07 14:53:10.717131 | GENERATION: 16 | ERRORS: best=19, median=30.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=92.86
2021-12-07 14:53:15.521578 | GENERATION: 17 | ERRORS: best=19, median=29.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=92.04
2021-12-07 14:53:20.697465 | GENERATION: 18 | ERRORS: best=19, median=31.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=91.55
2021-12-07 14:53:26.323897 | GENERATION: 19 | ERRORS: best=20, median=29.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=91.12
2021-12-07 14:53:32.723431 | GENERATION: 20 | ERRORS: best=20, median=34.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=89.64
2021-12-07 14:53:39.956525 | GENERATION: 21 | ERRORS: best=20, median=30.0, diversity=0.755 | INDIVIDUALS: n=200, avg_genome_length=88.315
2021-12-07 14:53:47.437581 | GENERATION: 22 | ERRORS: best=20, median=33.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=89.64
2021-12-07 14:53:53.877457 | GENERATION: 23 | ERRORS: best=17, median=50.5, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=92.56
2021-12-07 14:54:01.247239 | GENERATION: 24 | ERRORS: best=17, median=31.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=92.12
2021-12-07 14:54:08.448201 | GENERATION: 25 | ERRORS: best=17, median=41.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=94.935
2021-12-07 14:54:15.040519 | GENERATION: 26 | ERRORS: best=17, median=32.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=94.865
2021-12-07 14:54:21.693897 | GENERATION: 27 | ERRORS: best=14, median=40.0, diversity=0.795 | INDIVIDUALS: n=200, avg_genome_length=91.41
2021-12-07 14:54:28.009254 | GENERATION: 28 | ERRORS: best=14, median=27.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=84.625
2021-12-07 14:54:35.148692 | GENERATION: 29 | ERRORS: best=14, median=27.5, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=84.17
2021-12-07 14:54:41.976580 | GENERATION: 30 | ERRORS: best=14, median=26.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=86.3
2021-12-07 14:54:48.805421 | GENERATION: 31 | ERRORS: best=11, median=25.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=85.32
2021-12-07 14:54:55.261780 | GENERATION: 32 | ERRORS: best=1, median=26.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=84.07
Simplifying genome of length 65 with total error 0.
Simplified genome by 1 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 3 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 1 to length 55.
Simplified genome by 3 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 2 to length 45.
Simplified genome by 2 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 3 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 2 to length 26.
Simplified genome by 3 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome to length 12 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='exec_is_empty', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_sub', code_blocks=0), InstructionMeta(name='exec_dup_times', code_blocks=1), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_gt', code_blocks=0)])
	Program:
	 (exec_is_empty input_1 str_length input_0 str_length int_sub exec_dup_times (input_2 str_length input_1 str_length int_gt))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:03:43
