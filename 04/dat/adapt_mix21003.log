Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['bool'], arity=3, push_config=PushConfig(collection_size_cap=1000, step_limit=600, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f4d19948550>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f4d1993d700>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f4d19948430>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f4d0e1a5f80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f4d0e1a5180>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f4d19943820>]
========================================
Start Run
========================================
2021-12-08 23:39:07.838909 | GENERATION: 1 | ERRORS: best=24, median=76.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=125.89
2021-12-08 23:39:13.709170 | GENERATION: 2 | ERRORS: best=24, median=28.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=137.82
2021-12-08 23:39:19.210326 | GENERATION: 3 | ERRORS: best=24, median=28.0, diversity=0.06 | INDIVIDUALS: n=200, avg_genome_length=134.68
2021-12-08 23:39:27.593175 | GENERATION: 4 | ERRORS: best=24, median=28.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=123.36
2021-12-08 23:39:38.568910 | GENERATION: 5 | ERRORS: best=20, median=30.5, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=108.77
2021-12-08 23:39:53.745674 | GENERATION: 6 | ERRORS: best=20, median=46.0, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=79.02
2021-12-08 23:40:08.639243 | GENERATION: 7 | ERRORS: best=17, median=52.5, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=82.285
2021-12-08 23:40:24.092734 | GENERATION: 8 | ERRORS: best=17, median=66.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=76.575
2021-12-08 23:40:39.528151 | GENERATION: 9 | ERRORS: best=17, median=48.5, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=77.505
2021-12-08 23:40:50.771858 | GENERATION: 10 | ERRORS: best=16, median=53.5, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=73.195
2021-12-08 23:41:04.121068 | GENERATION: 11 | ERRORS: best=16, median=59.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=75.505
2021-12-08 23:41:16.198801 | GENERATION: 12 | ERRORS: best=16, median=50.5, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=67.785
2021-12-08 23:41:29.073271 | GENERATION: 13 | ERRORS: best=16, median=61.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=65.975
2021-12-08 23:41:43.779746 | GENERATION: 14 | ERRORS: best=16, median=51.5, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=66.445
2021-12-08 23:41:57.195404 | GENERATION: 15 | ERRORS: best=16, median=40.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=65.365
2021-12-08 23:42:10.149017 | GENERATION: 16 | ERRORS: best=16, median=44.0, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=63.74
2021-12-08 23:42:22.182083 | GENERATION: 17 | ERRORS: best=15, median=39.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=63.58
2021-12-08 23:42:32.986618 | GENERATION: 18 | ERRORS: best=15, median=36.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=62.44
2021-12-08 23:42:42.994093 | GENERATION: 19 | ERRORS: best=12, median=30.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=61.965
2021-12-08 23:42:53.628241 | GENERATION: 20 | ERRORS: best=12, median=34.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=61.84
2021-12-08 23:43:04.613021 | GENERATION: 21 | ERRORS: best=12, median=33.0, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=62.055
2021-12-08 23:43:16.177447 | GENERATION: 22 | ERRORS: best=12, median=34.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=60.085
2021-12-08 23:43:28.670570 | GENERATION: 23 | ERRORS: best=12, median=30.5, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=60.485
2021-12-08 23:43:41.373738 | GENERATION: 24 | ERRORS: best=12, median=33.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=59.385
2021-12-08 23:43:54.187557 | GENERATION: 25 | ERRORS: best=12, median=28.0, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=59.335
2021-12-08 23:44:06.357251 | GENERATION: 26 | ERRORS: best=11, median=30.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=58.875
2021-12-08 23:44:18.034165 | GENERATION: 27 | ERRORS: best=11, median=27.5, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=58.41
2021-12-08 23:44:28.307768 | GENERATION: 28 | ERRORS: best=11, median=33.5, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=58.0
2021-12-08 23:44:40.642647 | GENERATION: 29 | ERRORS: best=13, median=28.0, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=58.54
2021-12-08 23:44:50.921730 | GENERATION: 30 | ERRORS: best=6, median=34.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=58.78
2021-12-08 23:45:00.370407 | GENERATION: 31 | ERRORS: best=6, median=36.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=56.865
2021-12-08 23:45:09.539509 | GENERATION: 32 | ERRORS: best=6, median=43.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=57.575
2021-12-08 23:45:18.985063 | GENERATION: 33 | ERRORS: best=6, median=47.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=57.75
2021-12-08 23:45:28.341662 | GENERATION: 34 | ERRORS: best=6, median=39.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=57.55
2021-12-08 23:45:36.332973 | GENERATION: 35 | ERRORS: best=6, median=34.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=57.09
2021-12-08 23:45:45.669725 | GENERATION: 36 | ERRORS: best=6, median=37.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=57.17
2021-12-08 23:45:56.013825 | GENERATION: 37 | ERRORS: best=6, median=35.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=56.475
2021-12-08 23:46:05.222795 | GENERATION: 38 | ERRORS: best=6, median=34.5, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=55.505
2021-12-08 23:46:14.024538 | GENERATION: 39 | ERRORS: best=1, median=34.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=55.93
2021-12-08 23:46:23.436781 | GENERATION: 40 | ERRORS: best=1, median=54.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=58.35
2021-12-08 23:46:31.610484 | GENERATION: 41 | ERRORS: best=1, median=55.0, diversity=0.305 | INDIVIDUALS: n=200, avg_genome_length=57.87
2021-12-08 23:46:38.216523 | GENERATION: 42 | ERRORS: best=1, median=40.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=56.89
2021-12-08 23:46:45.956918 | GENERATION: 43 | ERRORS: best=1, median=43.5, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=57.085
2021-12-08 23:46:51.762615 | GENERATION: 44 | ERRORS: best=1, median=34.5, diversity=0.32 | INDIVIDUALS: n=200, avg_genome_length=56.99
2021-12-08 23:46:57.451672 | GENERATION: 45 | ERRORS: best=1, median=27.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=56.785
2021-12-08 23:47:02.757772 | GENERATION: 46 | ERRORS: best=1, median=36.5, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=56.705
2021-12-08 23:47:06.823099 | GENERATION: 47 | ERRORS: best=1, median=24.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=54.48
2021-12-08 23:47:10.730800 | GENERATION: 48 | ERRORS: best=1, median=24.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=54.085
2021-12-08 23:47:15.363397 | GENERATION: 49 | ERRORS: best=1, median=27.5, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=55.08
2021-12-08 23:47:19.066778 | GENERATION: 50 | ERRORS: best=1, median=24.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=53.335
Simplifying genome of length 55 with total error 0.
Simplified genome by 2 to length 53.
Simplified genome by 2 to length 51.
Simplified genome by 2 to length 49.
Simplified genome by 3 to length 46.
Simplified genome by 3 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 3 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome to length 22 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='exec_yank_dup', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_yank_dup', code_blocks=0), InstructionMeta(name='str_contains_str', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_head', code_blocks=0), InstructionMeta(name='int_swap', code_blocks=0), InstructionMeta(name='int_dec', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_yank', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), InstructionMeta(name='int_dec', code_blocks=0), InstructionMeta(name='str_split_on_str', code_blocks=0), InstructionMeta(name='print_bool', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_gte', code_blocks=0)])
	Program:
	 (input_2 str_length exec_yank_dup input_0 str_length int_yank_dup str_contains_str input_1 str_length input_2 str_head int_swap int_dec str_length str_yank int_max int_dec str_split_on_str print_bool input_0 str_length int_gte)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 30
	Time:
	 00:08:42
