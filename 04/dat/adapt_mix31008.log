Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, runtime_limit=10, growth_cap=500, step_limit=600), output_stacks=['bool'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f93f6f1a760>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f94030f8fa0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f93f6f1a490>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f93f61319c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f93f61315c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f94030fe820>]
========================================
Start Run
========================================
2021-12-09 06:50:18.547460 | GENERATION: 1 | ERRORS: best=30, median=100000000.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=118.09
2021-12-09 06:50:26.932098 | GENERATION: 2 | ERRORS: best=30, median=70.0, diversity=0.06 | INDIVIDUALS: n=200, avg_genome_length=128.27
2021-12-09 06:50:35.043084 | GENERATION: 3 | ERRORS: best=30, median=35.5, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=137.575
2021-12-09 06:50:44.016510 | GENERATION: 4 | ERRORS: best=28, median=49.5, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=155.34
2021-12-09 06:50:56.087190 | GENERATION: 5 | ERRORS: best=28, median=50.5, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=163.15
2021-12-09 06:51:09.584536 | GENERATION: 6 | ERRORS: best=28, median=54.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=160.97
2021-12-09 06:51:23.649334 | GENERATION: 7 | ERRORS: best=28, median=57.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=160.1
2021-12-09 06:51:37.776883 | GENERATION: 8 | ERRORS: best=28, median=58.5, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=158.995
2021-12-09 06:51:53.269914 | GENERATION: 9 | ERRORS: best=28, median=68.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=158.13
2021-12-09 06:52:09.368828 | GENERATION: 10 | ERRORS: best=27, median=53.5, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=155.65
2021-12-09 06:52:25.963004 | GENERATION: 11 | ERRORS: best=22, median=62.0, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=153.97
2021-12-09 06:52:42.969340 | GENERATION: 12 | ERRORS: best=22, median=47.5, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=151.71
2021-12-09 06:52:59.238834 | GENERATION: 13 | ERRORS: best=22, median=40.5, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=149.97
2021-12-09 06:53:15.869864 | GENERATION: 14 | ERRORS: best=22, median=40.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=148.915
2021-12-09 06:53:33.335846 | GENERATION: 15 | ERRORS: best=22, median=41.0, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=149.995
2021-12-09 06:53:50.108779 | GENERATION: 16 | ERRORS: best=22, median=39.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=148.495
2021-12-09 06:54:06.758908 | GENERATION: 17 | ERRORS: best=22, median=43.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=146.95
2021-12-09 06:54:22.893386 | GENERATION: 18 | ERRORS: best=22, median=43.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=146.445
2021-12-09 06:54:38.385121 | GENERATION: 19 | ERRORS: best=20, median=35.0, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=146.285
2021-12-09 06:54:54.021671 | GENERATION: 20 | ERRORS: best=20, median=35.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=145.53
2021-12-09 06:55:09.653724 | GENERATION: 21 | ERRORS: best=23, median=35.0, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=145.435
2021-12-09 06:55:24.684655 | GENERATION: 22 | ERRORS: best=20, median=34.0, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=144.585
2021-12-09 06:55:40.310985 | GENERATION: 23 | ERRORS: best=20, median=39.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=145.49
2021-12-09 06:55:57.051002 | GENERATION: 24 | ERRORS: best=21, median=37.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=145.96
2021-12-09 06:56:13.305200 | GENERATION: 25 | ERRORS: best=20, median=37.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=145.535
2021-12-09 06:56:29.628249 | GENERATION: 26 | ERRORS: best=22, median=39.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=144.985
2021-12-09 06:56:46.475794 | GENERATION: 27 | ERRORS: best=22, median=38.0, diversity=0.8 | INDIVIDUALS: n=200, avg_genome_length=144.84
2021-12-09 06:57:03.575891 | GENERATION: 28 | ERRORS: best=22, median=40.5, diversity=0.835 | INDIVIDUALS: n=200, avg_genome_length=144.675
2021-12-09 06:57:20.713708 | GENERATION: 29 | ERRORS: best=22, median=37.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=143.875
2021-12-09 06:57:39.325672 | GENERATION: 30 | ERRORS: best=22, median=37.5, diversity=0.82 | INDIVIDUALS: n=200, avg_genome_length=145.65
2021-12-09 06:57:57.443263 | GENERATION: 31 | ERRORS: best=21, median=36.0, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=146.065
2021-12-09 06:58:14.901446 | GENERATION: 32 | ERRORS: best=19, median=37.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=145.455
2021-12-09 06:58:32.471232 | GENERATION: 33 | ERRORS: best=16, median=32.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=143.62
2021-12-09 06:58:49.010974 | GENERATION: 34 | ERRORS: best=12, median=33.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=144.82
2021-12-09 06:59:05.202766 | GENERATION: 35 | ERRORS: best=4, median=33.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=143.75
2021-12-09 06:59:20.458689 | GENERATION: 36 | ERRORS: best=4, median=30.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=142.49
2021-12-09 06:59:35.278215 | GENERATION: 37 | ERRORS: best=4, median=30.0, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=142.585
2021-12-09 06:59:49.720701 | GENERATION: 38 | ERRORS: best=4, median=30.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=142.46
2021-12-09 07:00:03.187709 | GENERATION: 39 | ERRORS: best=4, median=30.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=142.785
2021-12-09 07:00:18.433486 | GENERATION: 40 | ERRORS: best=4, median=30.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=143.595
2021-12-09 07:00:32.458964 | GENERATION: 41 | ERRORS: best=4, median=35.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=141.44
2021-12-09 07:00:47.152078 | GENERATION: 42 | ERRORS: best=4, median=34.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=142.67
2021-12-09 07:01:00.438160 | GENERATION: 43 | ERRORS: best=1, median=33.5, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=143.075
2021-12-09 07:01:12.556795 | GENERATION: 44 | ERRORS: best=1, median=58.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=143.83
Simplifying genome of length 145 with total error 0.
Simplified genome by 2 to length 143.
Simplified genome by 1 to length 142.
Simplified genome by 1 to length 141.
Simplified genome by 2 to length 139.
Simplified genome by 1 to length 138.
Simplified genome by 1 to length 137.
Simplified genome by 2 to length 135.
Simplified genome by 1 to length 134.
Simplified genome by 3 to length 131.
Simplified genome by 2 to length 129.
Simplified genome by 2 to length 127.
Simplified genome by 1 to length 126.
Simplified genome by 2 to length 124.
Simplified genome by 2 to length 122.
Simplified genome by 1 to length 121.
Simplified genome by 3 to length 118.
Simplified genome by 2 to length 116.
Simplified genome by 1 to length 115.
Simplified genome by 1 to length 114.
Simplified genome by 3 to length 111.
Simplified genome by 1 to length 110.
Simplified genome by 2 to length 108.
Simplified genome by 2 to length 106.
Simplified genome by 2 to length 104.
Simplified genome by 2 to length 102.
Simplified genome by 3 to length 99.
Simplified genome by 3 to length 96.
Simplified genome by 1 to length 95.
Simplified genome by 3 to length 92.
Simplified genome by 3 to length 89.
Simplified genome by 3 to length 86.
Simplified genome by 3 to length 83.
Simplified genome by 3 to length 80.
Simplified genome by 1 to length 79.
Simplified genome by 1 to length 78.
Simplified genome by 3 to length 75.
Simplified genome by 1 to length 74.
Simplified genome by 2 to length 72.
Simplified genome by 3 to length 69.
Simplified genome by 1 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 3 to length 64.
Simplified genome by 1 to length 63.
Simplified genome by 1 to length 62.
Simplified genome by 3 to length 59.
Simplified genome by 2 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 1 to length 55.
Simplified genome by 1 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 2 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 1 to length 46.
Simplified genome by 1 to length 45.
Simplified genome by 1 to length 44.
Simplified genome by 3 to length 41.
Simplified genome by 1 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 3 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome to length 16 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=2), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_is_empty_string', code_blocks=0), InstructionMeta(name='bool_dup', code_blocks=0), InstructionMeta(name='bool_xor', code_blocks=0), Input(input_index=1), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='int_from_bool', code_blocks=0), InstructionMeta(name='bool_yank_dup', code_blocks=0)])
	Program:
	 (input_2 input_0 str_length str_is_empty_string bool_dup bool_xor input_1 input_1 str_length input_2 str_length int_lt str_length int_gte int_from_bool bool_yank_dup)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:11:37
