Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['bool'], push_config=PushConfig(runtime_limit=10, numeric_magnitude_limit=1000000000000.0, growth_cap=500, collection_size_cap=1000, step_limit=600), arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f8492b35580>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f849ed09700>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f8492b35130>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8492bbeec0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8492bbec00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f849ed0f820>]
========================================
Start Run
========================================
2021-12-08 23:29:31.480990 | GENERATION: 1 | ERRORS: best=28, median=100000000.0, diversity=0.015 | INDIVIDUALS: n=200, avg_genome_length=124.235
2021-12-08 23:29:42.163274 | GENERATION: 2 | ERRORS: best=28, median=28.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=136.03
2021-12-08 23:29:54.673156 | GENERATION: 3 | ERRORS: best=25, median=28.0, diversity=0.085 | INDIVIDUALS: n=200, avg_genome_length=136.185
2021-12-08 23:30:09.401227 | GENERATION: 4 | ERRORS: best=25, median=68.5, diversity=0.345 | INDIVIDUALS: n=200, avg_genome_length=113.955
2021-12-08 23:30:25.330857 | GENERATION: 5 | ERRORS: best=25, median=64.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=108.255
2021-12-08 23:30:40.381938 | GENERATION: 6 | ERRORS: best=25, median=72.0, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=107.035
2021-12-08 23:30:56.088029 | GENERATION: 7 | ERRORS: best=25, median=69.0, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=104.135
2021-12-08 23:31:12.508691 | GENERATION: 8 | ERRORS: best=25, median=43.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=103.295
2021-12-08 23:31:28.287264 | GENERATION: 9 | ERRORS: best=26, median=48.5, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=104.055
2021-12-08 23:31:45.207448 | GENERATION: 10 | ERRORS: best=26, median=37.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=102.79
2021-12-08 23:32:01.595795 | GENERATION: 11 | ERRORS: best=23, median=37.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=102.285
2021-12-08 23:32:17.154753 | GENERATION: 12 | ERRORS: best=23, median=37.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=104.0
2021-12-08 23:32:32.974389 | GENERATION: 13 | ERRORS: best=23, median=37.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=102.9
2021-12-08 23:32:49.388909 | GENERATION: 14 | ERRORS: best=23, median=39.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=102.59
2021-12-08 23:33:05.464048 | GENERATION: 15 | ERRORS: best=22, median=40.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=101.835
2021-12-08 23:33:21.315869 | GENERATION: 16 | ERRORS: best=22, median=40.0, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=99.62
2021-12-08 23:33:37.154447 | GENERATION: 17 | ERRORS: best=22, median=34.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=97.87
2021-12-08 23:33:54.046199 | GENERATION: 18 | ERRORS: best=22, median=34.5, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=95.99
2021-12-08 23:34:10.872368 | GENERATION: 19 | ERRORS: best=22, median=33.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=96.565
2021-12-08 23:34:28.183155 | GENERATION: 20 | ERRORS: best=21, median=33.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=94.905
2021-12-08 23:34:44.233003 | GENERATION: 21 | ERRORS: best=21, median=30.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=94.77
2021-12-08 23:35:02.687960 | GENERATION: 22 | ERRORS: best=21, median=33.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=96.86
2021-12-08 23:35:20.333679 | GENERATION: 23 | ERRORS: best=21, median=35.5, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=94.945
2021-12-08 23:35:37.577866 | GENERATION: 24 | ERRORS: best=21, median=33.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=95.245
2021-12-08 23:35:54.829544 | GENERATION: 25 | ERRORS: best=19, median=33.0, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=96.12
2021-12-08 23:36:10.610393 | GENERATION: 26 | ERRORS: best=19, median=37.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=95.51
2021-12-08 23:36:27.583613 | GENERATION: 27 | ERRORS: best=19, median=32.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=94.24
2021-12-08 23:36:45.572329 | GENERATION: 28 | ERRORS: best=20, median=34.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=94.75
2021-12-08 23:37:02.312559 | GENERATION: 29 | ERRORS: best=19, median=36.0, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=95.77
2021-12-08 23:37:18.444423 | GENERATION: 30 | ERRORS: best=19, median=35.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=95.595
2021-12-08 23:37:34.371377 | GENERATION: 31 | ERRORS: best=18, median=37.0, diversity=0.6 | INDIVIDUALS: n=200, avg_genome_length=95.05
2021-12-08 23:37:49.658438 | GENERATION: 32 | ERRORS: best=18, median=40.5, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=94.84
2021-12-08 23:38:05.557382 | GENERATION: 33 | ERRORS: best=18, median=40.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=95.48
2021-12-08 23:38:20.537155 | GENERATION: 34 | ERRORS: best=10, median=32.5, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=97.045
2021-12-08 23:38:32.081946 | GENERATION: 35 | ERRORS: best=4, median=32.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=96.355
Simplifying genome of length 94 with total error 0.
Simplified genome by 2 to length 92.
Simplified genome by 2 to length 90.
Simplified genome by 1 to length 89.
Simplified genome by 2 to length 87.
Simplified genome by 1 to length 86.
Simplified genome by 3 to length 83.
Simplified genome by 2 to length 81.
Simplified genome by 3 to length 78.
Simplified genome by 3 to length 75.
Simplified genome by 2 to length 73.
Simplified genome by 1 to length 72.
Simplified genome by 2 to length 70.
Simplified genome by 1 to length 69.
Simplified genome by 1 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 3 to length 64.
Simplified genome by 1 to length 63.
Simplified genome by 3 to length 60.
Simplified genome by 2 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 2 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 3 to length 50.
Simplified genome by 3 to length 47.
Simplified genome by 1 to length 46.
Simplified genome by 2 to length 44.
Simplified genome by 1 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 2 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 3 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 2 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 3 to length 25.
Simplified genome by 2 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome to length 14 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lte', code_blocks=0), Input(input_index=2), InstructionMeta(name='exec_if', code_blocks=2), InstructionMeta(name='exec_is_empty', code_blocks=0), InstructionMeta(name='str_make_empty', code_blocks=0), Closer(), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0)])
	Program:
	 (input_1 str_length input_0 str_length int_lte input_2 exec_if (exec_is_empty str_make_empty) (input_1 str_length str_length int_lt))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:09:34
