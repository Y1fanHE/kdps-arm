Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['bool'], arity=3, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, step_limit=600, growth_cap=500, collection_size_cap=1000, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fc7f18f72b0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fc7fdb11a30>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fc7f18f74c0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc7efde0900>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc7f141e400>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7fc7f24051f0>]
========================================
Start Run
========================================
2021-12-17 21:18:51.462334 | GENERATION: 1 | ERRORS: best=28, median=100000000.0, diversity=0.015 | INDIVIDUALS: n=200, avg_genome_length=124.475 | VIRUSES: gene_rate=0.000
2021-12-17 21:19:00.054982 | GENERATION: 2 | ERRORS: best=28, median=28.0, diversity=0.04 | INDIVIDUALS: n=200, avg_genome_length=134.93 | VIRUSES: gene_rate=0.003
2021-12-17 21:19:09.083872 | GENERATION: 3 | ERRORS: best=28, median=30.5, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=133.785 | VIRUSES: gene_rate=0.009
2021-12-17 21:19:18.217800 | GENERATION: 4 | ERRORS: best=28, median=72.0, diversity=0.34 | INDIVIDUALS: n=200, avg_genome_length=144.68 | VIRUSES: gene_rate=0.015
2021-12-17 21:19:26.501486 | GENERATION: 5 | ERRORS: best=28, median=72.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=147.555 | VIRUSES: gene_rate=0.023
2021-12-17 21:19:34.171434 | GENERATION: 6 | ERRORS: best=25, median=72.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=151.63 | VIRUSES: gene_rate=0.028
2021-12-17 21:19:42.397787 | GENERATION: 7 | ERRORS: best=25, median=72.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=152.89 | VIRUSES: gene_rate=0.035
2021-12-17 21:19:51.153931 | GENERATION: 8 | ERRORS: best=24, median=71.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=156.015 | VIRUSES: gene_rate=0.038
2021-12-17 21:19:59.595161 | GENERATION: 9 | ERRORS: best=25, median=43.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=151.775 | VIRUSES: gene_rate=0.045
2021-12-17 21:20:08.166478 | GENERATION: 10 | ERRORS: best=21, median=48.5, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=150.71 | VIRUSES: gene_rate=0.051
2021-12-17 21:20:16.218643 | GENERATION: 11 | ERRORS: best=21, median=41.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=147.545 | VIRUSES: gene_rate=0.059
2021-12-17 21:20:24.934804 | GENERATION: 12 | ERRORS: best=20, median=50.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=147.745 | VIRUSES: gene_rate=0.060
2021-12-17 21:20:32.360068 | GENERATION: 13 | ERRORS: best=20, median=49.0, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=143.615 | VIRUSES: gene_rate=0.068
2021-12-17 21:20:39.575485 | GENERATION: 14 | ERRORS: best=20, median=57.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=137.12 | VIRUSES: gene_rate=0.075
2021-12-17 21:20:48.912131 | GENERATION: 15 | ERRORS: best=20, median=38.5, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=140.065 | VIRUSES: gene_rate=0.076
2021-12-17 21:20:57.841514 | GENERATION: 16 | ERRORS: best=16, median=51.5, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=140.605 | VIRUSES: gene_rate=0.080
2021-12-17 21:21:06.823664 | GENERATION: 17 | ERRORS: best=16, median=69.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=138.04 | VIRUSES: gene_rate=0.086
2021-12-17 21:21:17.326819 | GENERATION: 18 | ERRORS: best=2, median=65.0, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=144.86 | VIRUSES: gene_rate=0.086
2021-12-17 21:21:31.479487 | GENERATION: 19 | ERRORS: best=2, median=52.5, diversity=0.455 | INDIVIDUALS: n=200, avg_genome_length=167.845 | VIRUSES: gene_rate=0.078
2021-12-17 21:21:46.020824 | GENERATION: 20 | ERRORS: best=1, median=52.5, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=168.26 | VIRUSES: gene_rate=0.082
Simplifying genome of length 174 with total error 0.
Simplified genome by 1 to length 173.
Simplified genome by 1 to length 172.
Simplified genome by 1 to length 171.
Simplified genome by 2 to length 169.
Simplified genome by 1 to length 168.
Simplified genome by 3 to length 165.
Simplified genome by 1 to length 164.
Simplified genome by 1 to length 163.
Simplified genome by 1 to length 162.
Simplified genome by 3 to length 159.
Simplified genome by 3 to length 156.
Simplified genome by 2 to length 154.
Simplified genome by 2 to length 152.
Simplified genome by 2 to length 150.
Simplified genome by 3 to length 147.
Simplified genome by 3 to length 144.
Simplified genome by 1 to length 143.
Simplified genome by 3 to length 140.
Simplified genome by 2 to length 138.
Simplified genome by 3 to length 135.
Simplified genome by 1 to length 134.
Simplified genome by 3 to length 131.
Simplified genome by 1 to length 130.
Simplified genome by 1 to length 129.
Simplified genome by 1 to length 128.
Simplified genome by 2 to length 126.
Simplified genome by 1 to length 125.
Simplified genome by 1 to length 124.
Simplified genome by 2 to length 122.
Simplified genome by 3 to length 119.
Simplified genome by 3 to length 116.
Simplified genome by 1 to length 115.
Simplified genome by 1 to length 114.
Simplified genome by 3 to length 111.
Simplified genome by 3 to length 108.
Simplified genome by 2 to length 106.
Simplified genome by 2 to length 104.
Simplified genome by 1 to length 103.
Simplified genome by 1 to length 102.
Simplified genome by 1 to length 101.
Simplified genome by 2 to length 99.
Simplified genome by 2 to length 97.
Simplified genome by 3 to length 94.
Simplified genome by 1 to length 93.
Simplified genome by 2 to length 91.
Simplified genome by 1 to length 90.
Simplified genome by 3 to length 87.
Simplified genome by 2 to length 85.
Simplified genome by 2 to length 83.
Simplified genome by 1 to length 82.
Simplified genome by 1 to length 81.
Simplified genome by 1 to length 80.
Simplified genome by 2 to length 78.
Simplified genome by 2 to length 76.
Simplified genome by 1 to length 75.
Simplified genome by 1 to length 74.
Simplified genome by 2 to length 72.
Simplified genome by 1 to length 71.
Simplified genome by 3 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 1 to length 66.
Simplified genome by 3 to length 63.
Simplified genome by 2 to length 61.
Simplified genome by 1 to length 60.
Simplified genome by 2 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 2 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 1 to length 46.
Simplified genome by 1 to length 45.
Simplified genome by 1 to length 44.
Simplified genome by 1 to length 43.
Simplified genome by 1 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 3 to length 37.
Simplified genome to length 37 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='int_dup', code_blocks=0), InstructionMeta(name='bool_from_int', code_blocks=0), Input(input_index=0), InstructionMeta(name='int_add', code_blocks=0), InstructionMeta(name='bool_yank_dup', code_blocks=0), InstructionMeta(name='exec_stack_depth', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), InstructionMeta(name='int_dec', code_blocks=0), InstructionMeta(name='int_eq', code_blocks=0), VirusInput(input_index=1), InstructionMeta(name='str_make_empty', code_blocks=0), InstructionMeta(name='str_dup', code_blocks=0), InstructionMeta(name='str_drop', code_blocks=0), InstructionMeta(name='str_replace_first_str', code_blocks=0), VirusInstructionMeta(name='str_length', code_blocks=0), VirusInput(input_index=0), VirusInstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lte', code_blocks=0), Input(input_index=1), InstructionMeta(name='bool_not', code_blocks=0), InstructionMeta(name='bool_is_empty', code_blocks=0), InstructionMeta(name='bool_pop', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Closer(), InstructionMeta(name='exec_dup_times', code_blocks=1), Closer(), InstructionMeta(name='str_from_last_char', code_blocks=0), InstructionMeta(name='exec_do_while', code_blocks=1), InstructionMeta(name='int_is_empty', code_blocks=0), Closer(), Closer(), InstructionMeta(name='str_length', code_blocks=0), VirusInput(input_index=2), VirusInstructionMeta(name='str_length', code_blocks=0), VirusInstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_pop', code_blocks=0)])
	Program:
	 (int_dup bool_from_int input_0 int_add bool_yank_dup exec_stack_depth input_2 str_occurrences_of_str int_dec int_eq vinput_1 str_make_empty str_dup str_drop str_replace_first_str vstr_length vinput_0 vstr_length int_lte input_1 bool_not bool_is_empty bool_pop exec_if () (exec_dup_times () str_from_last_char exec_do_while (int_is_empty)) str_length vinput_2 vstr_length vint_lt str_pop)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:06:34
