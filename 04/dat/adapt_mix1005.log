Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, runtime_limit=10, step_limit=600, growth_cap=500, collection_size_cap=1000), output_stacks=['bool'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7efdf7a2d970>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7efdf7a22b20>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7efdf7a2d280>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7efdf7bba9c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7efdebee6a00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7efdf7a28820>]
========================================
Start Run
========================================
2021-12-07 12:33:47.803080 | GENERATION: 1 | ERRORS: best=26, median=100000000.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=127.595
2021-12-07 12:33:52.776533 | GENERATION: 2 | ERRORS: best=26, median=26.0, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=111.89
2021-12-07 12:34:02.876010 | GENERATION: 3 | ERRORS: best=26, median=34.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=106.755
2021-12-07 12:34:16.221584 | GENERATION: 4 | ERRORS: best=25, median=42.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=105.205
2021-12-07 12:34:29.949177 | GENERATION: 5 | ERRORS: best=24, median=48.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=105.665
2021-12-07 12:34:45.240505 | GENERATION: 6 | ERRORS: best=25, median=42.0, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=105.46
2021-12-07 12:35:01.209445 | GENERATION: 7 | ERRORS: best=21, median=42.5, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=105.05
2021-12-07 12:35:19.887017 | GENERATION: 8 | ERRORS: best=21, median=40.5, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=103.76
2021-12-07 12:35:36.402465 | GENERATION: 9 | ERRORS: best=21, median=40.5, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=104.04
2021-12-07 12:35:54.436775 | GENERATION: 10 | ERRORS: best=22, median=36.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=103.43
2021-12-07 12:36:11.885661 | GENERATION: 11 | ERRORS: best=19, median=37.5, diversity=0.815 | INDIVIDUALS: n=200, avg_genome_length=103.92
2021-12-07 12:36:29.096940 | GENERATION: 12 | ERRORS: best=17, median=39.0, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=103.5
2021-12-07 12:36:47.096911 | GENERATION: 13 | ERRORS: best=19, median=38.0, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=101.875
2021-12-07 12:37:04.832002 | GENERATION: 14 | ERRORS: best=19, median=34.0, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=101.37
2021-12-07 12:37:23.255411 | GENERATION: 15 | ERRORS: best=19, median=34.0, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=99.83
2021-12-07 12:37:40.758639 | GENERATION: 16 | ERRORS: best=19, median=37.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=99.035
2021-12-07 12:37:59.556284 | GENERATION: 17 | ERRORS: best=19, median=31.5, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=98.005
2021-12-07 12:38:16.652802 | GENERATION: 18 | ERRORS: best=17, median=34.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=96.985
2021-12-07 12:38:33.681467 | GENERATION: 19 | ERRORS: best=16, median=30.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=96.29
2021-12-07 12:38:47.612864 | GENERATION: 20 | ERRORS: best=14, median=28.0, diversity=0.555 | INDIVIDUALS: n=200, avg_genome_length=94.865
2021-12-07 12:39:01.314253 | GENERATION: 21 | ERRORS: best=14, median=27.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=95.3
2021-12-07 12:39:15.441627 | GENERATION: 22 | ERRORS: best=14, median=28.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=94.06
2021-12-07 12:39:29.075255 | GENERATION: 23 | ERRORS: best=12, median=29.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=94.26
2021-12-07 12:39:42.818542 | GENERATION: 24 | ERRORS: best=11, median=27.0, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=94.365
2021-12-07 12:39:56.589333 | GENERATION: 25 | ERRORS: best=10, median=26.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=93.46
2021-12-07 12:40:10.938167 | GENERATION: 26 | ERRORS: best=10, median=28.5, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=93.75
2021-12-07 12:40:25.205041 | GENERATION: 27 | ERRORS: best=10, median=26.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=93.02
2021-12-07 12:40:40.156514 | GENERATION: 28 | ERRORS: best=8, median=32.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=92.145
2021-12-07 12:40:54.357192 | GENERATION: 29 | ERRORS: best=6, median=28.0, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=87.545
2021-12-07 12:41:09.552123 | GENERATION: 30 | ERRORS: best=6, median=26.5, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=85.77
2021-12-07 12:41:26.004750 | GENERATION: 31 | ERRORS: best=6, median=27.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=83.115
2021-12-07 12:41:45.135608 | GENERATION: 32 | ERRORS: best=5, median=27.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=80.01
2021-12-07 12:42:03.519381 | GENERATION: 33 | ERRORS: best=5, median=26.0, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=77.635
2021-12-07 12:42:22.740738 | GENERATION: 34 | ERRORS: best=5, median=26.0, diversity=0.59 | INDIVIDUALS: n=200, avg_genome_length=76.61
Simplifying genome of length 75 with total error 0.
Simplified genome by 1 to length 74.
Simplified genome by 1 to length 73.
Simplified genome by 1 to length 72.
Simplified genome by 1 to length 71.
Simplified genome by 2 to length 69.
Simplified genome by 2 to length 67.
Simplified genome by 1 to length 66.
Simplified genome by 1 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 1 to length 60.
Simplified genome by 2 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 1 to length 55.
Simplified genome by 1 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 3 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 2 to length 46.
Simplified genome by 1 to length 45.
Simplified genome by 3 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 1 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 2 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 3 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome to length 20 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='str_is_empty', code_blocks=0), Input(input_index=1), InstructionMeta(name='int_stack_depth', code_blocks=0), InstructionMeta(name='str_from_bool', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_sub', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_is_empty', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), Closer(), InstructionMeta(name='str_yank_dup', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_div', code_blocks=0), InstructionMeta(name='exec_dup_times', code_blocks=1), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_gt', code_blocks=0)])
	Program:
	 (str_is_empty input_1 int_stack_depth str_from_bool str_length int_sub input_2 str_length int_is_empty exec_do_range () str_yank_dup str_length int_div exec_dup_times (input_1 str_length input_0 str_length int_gt))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:11:43
