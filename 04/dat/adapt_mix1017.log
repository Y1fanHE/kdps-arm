Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, output_stacks=['bool'], push_config=PushConfig(growth_cap=500, collection_size_cap=1000, numeric_magnitude_limit=1000000000000.0, step_limit=600, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f8704eb5670>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f871108eee0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f8704eb57c0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8705861040>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8705861700>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f8711095820>]
========================================
Start Run
========================================
2021-12-07 15:38:37.481753 | GENERATION: 1 | ERRORS: best=25, median=100000000.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=109.895
2021-12-07 15:38:43.069408 | GENERATION: 2 | ERRORS: best=25, median=25.0, diversity=0.045 | INDIVIDUALS: n=200, avg_genome_length=102.48
2021-12-07 15:38:48.372479 | GENERATION: 3 | ERRORS: best=23, median=55.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=102.915
2021-12-07 15:38:54.943423 | GENERATION: 4 | ERRORS: best=23, median=75.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=117.355
2021-12-07 15:39:01.243648 | GENERATION: 5 | ERRORS: best=23, median=68.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=111.855
2021-12-07 15:39:08.905977 | GENERATION: 6 | ERRORS: best=23, median=46.5, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=113.21
2021-12-07 15:39:16.402623 | GENERATION: 7 | ERRORS: best=23, median=65.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=114.145
2021-12-07 15:39:24.168355 | GENERATION: 8 | ERRORS: best=21, median=56.5, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=111.225
2021-12-07 15:39:32.320372 | GENERATION: 9 | ERRORS: best=20, median=40.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=114.945
2021-12-07 15:39:41.313621 | GENERATION: 10 | ERRORS: best=20, median=51.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=115.07
2021-12-07 15:39:49.803679 | GENERATION: 11 | ERRORS: best=20, median=46.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=115.025
2021-12-07 15:39:58.655909 | GENERATION: 12 | ERRORS: best=20, median=50.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=120.97
2021-12-07 15:40:07.742179 | GENERATION: 13 | ERRORS: best=18, median=37.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=119.465
2021-12-07 15:40:16.402086 | GENERATION: 14 | ERRORS: best=20, median=42.5, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=118.995
2021-12-07 15:40:25.756816 | GENERATION: 15 | ERRORS: best=17, median=36.5, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=118.49
2021-12-07 15:40:34.748246 | GENERATION: 16 | ERRORS: best=16, median=37.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=117.39
2021-12-07 15:40:43.638332 | GENERATION: 17 | ERRORS: best=16, median=37.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=117.485
2021-12-07 15:40:53.086366 | GENERATION: 18 | ERRORS: best=16, median=35.5, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=118.055
2021-12-07 15:41:02.173077 | GENERATION: 19 | ERRORS: best=16, median=31.0, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=116.715
2021-12-07 15:41:11.686398 | GENERATION: 20 | ERRORS: best=15, median=34.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=116.855
2021-12-07 15:41:20.568375 | GENERATION: 21 | ERRORS: best=11, median=34.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=116.14
2021-12-07 15:41:29.687291 | GENERATION: 22 | ERRORS: best=10, median=34.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=113.215
2021-12-07 15:41:38.532663 | GENERATION: 23 | ERRORS: best=9, median=27.5, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=111.41
2021-12-07 15:41:47.398118 | GENERATION: 24 | ERRORS: best=9, median=29.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=110.365
2021-12-07 15:41:55.143418 | GENERATION: 25 | ERRORS: best=9, median=28.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=109.14
2021-12-07 15:42:03.726277 | GENERATION: 26 | ERRORS: best=2, median=33.0, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=108.665
2021-12-07 15:42:10.811380 | GENERATION: 27 | ERRORS: best=2, median=26.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=103.61
2021-12-07 15:42:18.384167 | GENERATION: 28 | ERRORS: best=2, median=29.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=101.54
2021-12-07 15:42:26.187249 | GENERATION: 29 | ERRORS: best=2, median=25.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=100.05
2021-12-07 15:42:34.113572 | GENERATION: 30 | ERRORS: best=2, median=28.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=96.065
2021-12-07 15:42:42.198984 | GENERATION: 31 | ERRORS: best=2, median=26.0, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=94.955
2021-12-07 15:42:50.348194 | GENERATION: 32 | ERRORS: best=2, median=27.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=94.46
2021-12-07 15:42:58.671689 | GENERATION: 33 | ERRORS: best=2, median=27.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=94.155
2021-12-07 15:43:06.327544 | GENERATION: 34 | ERRORS: best=2, median=27.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=92.97
Simplifying genome of length 91 with total error 0.
Simplified genome by 1 to length 90.
Simplified genome by 1 to length 89.
Simplified genome by 2 to length 87.
Simplified genome by 3 to length 84.
Simplified genome by 1 to length 83.
Simplified genome by 1 to length 82.
Simplified genome by 2 to length 80.
Simplified genome by 3 to length 77.
Simplified genome by 2 to length 75.
Simplified genome by 1 to length 74.
Simplified genome by 1 to length 73.
Simplified genome by 2 to length 71.
Simplified genome by 1 to length 70.
Simplified genome by 1 to length 69.
Simplified genome by 1 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 1 to length 66.
Simplified genome by 1 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 1 to length 63.
Simplified genome by 1 to length 62.
Simplified genome by 3 to length 59.
Simplified genome by 1 to length 58.
Simplified genome by 3 to length 55.
Simplified genome by 2 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 3 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 2 to length 45.
Simplified genome by 1 to length 44.
Simplified genome by 2 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 1 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 3 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 3 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome to length 12 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), InstructionMeta(name='str_stack_depth', code_blocks=0), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='exec_shove', code_blocks=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0)])
	Program:
	 (input_0 str_stack_depth exec_shove_dup (exec_shove (str_length input_1 str_length int_lt input_2 str_length int_lt bool_and)))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:05:23
