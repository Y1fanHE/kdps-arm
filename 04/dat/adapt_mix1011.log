Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['bool'], arity=3, push_config=PushConfig(growth_cap=500, collection_size_cap=1000, step_limit=600, runtime_limit=10, numeric_magnitude_limit=1000000000000.0))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fc73f836730>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fc74ba0c6d0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fc73f836250>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc73f636cc0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fc73efa6300>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7fc74ba11820>]
========================================
Start Run
========================================
2021-12-07 14:01:01.814553 | GENERATION: 1 | ERRORS: best=28, median=100000000.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=140.05
2021-12-07 14:01:11.244753 | GENERATION: 2 | ERRORS: best=27, median=28.0, diversity=0.07 | INDIVIDUALS: n=200, avg_genome_length=125.765
2021-12-07 14:01:15.663193 | GENERATION: 3 | ERRORS: best=27, median=29.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=180.665
2021-12-07 14:01:19.850943 | GENERATION: 4 | ERRORS: best=27, median=52.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=182.245
2021-12-07 14:01:25.114513 | GENERATION: 5 | ERRORS: best=27, median=52.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=183.96
2021-12-07 14:01:29.879273 | GENERATION: 6 | ERRORS: best=25, median=52.5, diversity=0.405 | INDIVIDUALS: n=200, avg_genome_length=183.17
2021-12-07 14:01:35.069102 | GENERATION: 7 | ERRORS: best=25, median=61.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=188.355
2021-12-07 14:01:40.423087 | GENERATION: 8 | ERRORS: best=25, median=49.0, diversity=0.505 | INDIVIDUALS: n=200, avg_genome_length=187.15
2021-12-07 14:01:47.039900 | GENERATION: 9 | ERRORS: best=25, median=44.0, diversity=0.525 | INDIVIDUALS: n=200, avg_genome_length=189.995
2021-12-07 14:01:52.865501 | GENERATION: 10 | ERRORS: best=23, median=36.0, diversity=0.49 | INDIVIDUALS: n=200, avg_genome_length=186.87
2021-12-07 14:01:59.251678 | GENERATION: 11 | ERRORS: best=23, median=36.0, diversity=0.55 | INDIVIDUALS: n=200, avg_genome_length=187.965
2021-12-07 14:02:06.934530 | GENERATION: 12 | ERRORS: best=23, median=36.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=188.86
2021-12-07 14:02:15.078259 | GENERATION: 13 | ERRORS: best=23, median=34.5, diversity=0.57 | INDIVIDUALS: n=200, avg_genome_length=189.185
2021-12-07 14:02:23.544144 | GENERATION: 14 | ERRORS: best=21, median=38.5, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=188.45
2021-12-07 14:02:33.030215 | GENERATION: 15 | ERRORS: best=21, median=32.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=191.795
2021-12-07 14:02:43.107486 | GENERATION: 16 | ERRORS: best=18, median=33.0, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=192.275
2021-12-07 14:02:53.836890 | GENERATION: 17 | ERRORS: best=18, median=32.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=192.17
2021-12-07 14:03:04.849288 | GENERATION: 18 | ERRORS: best=15, median=30.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=193.49
2021-12-07 14:03:16.721402 | GENERATION: 19 | ERRORS: best=13, median=28.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=193.615
2021-12-07 14:03:28.534165 | GENERATION: 20 | ERRORS: best=12, median=29.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=195.2
2021-12-07 14:03:40.630684 | GENERATION: 21 | ERRORS: best=12, median=30.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=196.175
2021-12-07 14:03:53.339905 | GENERATION: 22 | ERRORS: best=12, median=28.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=197.37
2021-12-07 14:04:06.452295 | GENERATION: 23 | ERRORS: best=12, median=29.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=198.2
2021-12-07 14:04:19.408825 | GENERATION: 24 | ERRORS: best=13, median=30.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=197.265
2021-12-07 14:04:32.848847 | GENERATION: 25 | ERRORS: best=13, median=28.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=197.705
2021-12-07 14:04:46.863455 | GENERATION: 26 | ERRORS: best=12, median=30.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=197.935
2021-12-07 14:05:00.636240 | GENERATION: 27 | ERRORS: best=12, median=28.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=197.43
2021-12-07 14:05:14.113586 | GENERATION: 28 | ERRORS: best=11, median=28.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=197.315
2021-12-07 14:05:28.056324 | GENERATION: 29 | ERRORS: best=11, median=28.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=197.755
2021-12-07 14:05:41.985939 | GENERATION: 30 | ERRORS: best=11, median=29.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=196.305
2021-12-07 14:05:57.010093 | GENERATION: 31 | ERRORS: best=11, median=30.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=197.345
2021-12-07 14:06:11.313759 | GENERATION: 32 | ERRORS: best=11, median=28.5, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=197.385
2021-12-07 14:06:26.062761 | GENERATION: 33 | ERRORS: best=11, median=34.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=197.97
2021-12-07 14:06:41.554688 | GENERATION: 34 | ERRORS: best=11, median=32.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=198.085
2021-12-07 14:06:56.532253 | GENERATION: 35 | ERRORS: best=11, median=29.5, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=198.735
2021-12-07 14:07:11.600143 | GENERATION: 36 | ERRORS: best=11, median=32.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=198.035
2021-12-07 14:07:27.372531 | GENERATION: 37 | ERRORS: best=11, median=28.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=196.665
2021-12-07 14:07:42.565763 | GENERATION: 38 | ERRORS: best=11, median=29.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=196.46
2021-12-07 14:07:59.596782 | GENERATION: 39 | ERRORS: best=11, median=28.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=196.21
2021-12-07 14:08:14.223687 | GENERATION: 40 | ERRORS: best=11, median=28.0, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=196.015
2021-12-07 14:08:29.204371 | GENERATION: 41 | ERRORS: best=11, median=28.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=195.62
2021-12-07 14:08:44.137667 | GENERATION: 42 | ERRORS: best=11, median=28.5, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=195.58
2021-12-07 14:08:59.063343 | GENERATION: 43 | ERRORS: best=11, median=28.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=196.065
2021-12-07 14:09:14.436156 | GENERATION: 44 | ERRORS: best=10, median=28.5, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=196.22
2021-12-07 14:09:30.768964 | GENERATION: 45 | ERRORS: best=10, median=29.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=195.43
2021-12-07 14:09:46.424164 | GENERATION: 46 | ERRORS: best=10, median=28.0, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=196.19
2021-12-07 14:10:01.686803 | GENERATION: 47 | ERRORS: best=10, median=28.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=195.875
2021-12-07 14:10:16.981226 | GENERATION: 48 | ERRORS: best=10, median=28.0, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=195.61
2021-12-07 14:10:33.533700 | GENERATION: 49 | ERRORS: best=10, median=28.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=195.41
2021-12-07 14:10:49.386308 | GENERATION: 50 | ERRORS: best=10, median=28.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=195.035
2021-12-07 14:11:05.522664 | GENERATION: 51 | ERRORS: best=10, median=28.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=195.195
2021-12-07 14:11:21.797757 | GENERATION: 52 | ERRORS: best=10, median=28.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=195.135
2021-12-07 14:11:38.184830 | GENERATION: 53 | ERRORS: best=10, median=28.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=194.49
2021-12-07 14:11:54.483527 | GENERATION: 54 | ERRORS: best=10, median=28.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=194.64
2021-12-07 14:12:11.451956 | GENERATION: 55 | ERRORS: best=10, median=28.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=194.675
2021-12-07 14:12:27.881156 | GENERATION: 56 | ERRORS: best=10, median=28.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=194.66
2021-12-07 14:12:45.858154 | GENERATION: 57 | ERRORS: best=9, median=28.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=194.26
2021-12-07 14:13:04.680928 | GENERATION: 58 | ERRORS: best=7, median=28.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=193.895
2021-12-07 14:13:22.136557 | GENERATION: 59 | ERRORS: best=7, median=28.0, diversity=0.825 | INDIVIDUALS: n=200, avg_genome_length=193.45
2021-12-07 14:13:39.244643 | GENERATION: 60 | ERRORS: best=5, median=28.0, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=192.585
2021-12-07 14:13:56.623894 | GENERATION: 61 | ERRORS: best=5, median=28.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=191.065
2021-12-07 14:14:15.232782 | GENERATION: 62 | ERRORS: best=4, median=28.0, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=191.495
2021-12-07 14:14:33.001421 | GENERATION: 63 | ERRORS: best=4, median=28.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=191.985
2021-12-07 14:14:50.836937 | GENERATION: 64 | ERRORS: best=4, median=26.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=191.465
2021-12-07 14:15:09.251883 | GENERATION: 65 | ERRORS: best=4, median=28.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=191.74
2021-12-07 14:15:28.086018 | GENERATION: 66 | ERRORS: best=4, median=28.0, diversity=0.84 | INDIVIDUALS: n=200, avg_genome_length=190.985
2021-12-07 14:15:46.130302 | GENERATION: 67 | ERRORS: best=4, median=28.0, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=190.34
2021-12-07 14:16:03.605950 | GENERATION: 68 | ERRORS: best=3, median=26.5, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=190.385
2021-12-07 14:16:21.861255 | GENERATION: 69 | ERRORS: best=2, median=26.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=191.155
2021-12-07 14:16:40.115090 | GENERATION: 70 | ERRORS: best=2, median=21.5, diversity=0.795 | INDIVIDUALS: n=200, avg_genome_length=191.93
2021-12-07 14:16:57.808917 | GENERATION: 71 | ERRORS: best=2, median=28.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=191.375
2021-12-07 14:17:16.380199 | GENERATION: 72 | ERRORS: best=2, median=21.0, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=191.665
2021-12-07 14:17:34.633731 | GENERATION: 73 | ERRORS: best=2, median=27.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=191.55
2021-12-07 14:17:52.587253 | GENERATION: 74 | ERRORS: best=2, median=23.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=191.84
2021-12-07 14:18:10.979149 | GENERATION: 75 | ERRORS: best=2, median=27.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=191.015
2021-12-07 14:18:29.211726 | GENERATION: 76 | ERRORS: best=2, median=28.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=191.095
2021-12-07 14:18:47.381185 | GENERATION: 77 | ERRORS: best=2, median=26.0, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=191.21
2021-12-07 14:19:05.475001 | GENERATION: 78 | ERRORS: best=2, median=26.5, diversity=0.755 | INDIVIDUALS: n=200, avg_genome_length=190.945
2021-12-07 14:19:23.892166 | GENERATION: 79 | ERRORS: best=2, median=23.5, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=191.035
2021-12-07 14:19:42.213594 | GENERATION: 80 | ERRORS: best=2, median=27.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=190.945
2021-12-07 14:20:01.058104 | GENERATION: 81 | ERRORS: best=2, median=22.5, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=191.055
2021-12-07 14:20:20.467747 | GENERATION: 82 | ERRORS: best=2, median=24.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=190.885
2021-12-07 14:20:38.552350 | GENERATION: 83 | ERRORS: best=1, median=28.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=191.045
2021-12-07 14:20:57.300964 | GENERATION: 84 | ERRORS: best=1, median=27.0, diversity=0.795 | INDIVIDUALS: n=200, avg_genome_length=191.06
2021-12-07 14:21:15.639132 | GENERATION: 85 | ERRORS: best=1, median=25.0, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=191.605
2021-12-07 14:21:34.291738 | GENERATION: 86 | ERRORS: best=1, median=21.5, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=191.43
2021-12-07 14:21:52.587569 | GENERATION: 87 | ERRORS: best=1, median=26.5, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=191.075
2021-12-07 14:22:11.028398 | GENERATION: 88 | ERRORS: best=1, median=20.0, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=191.825
2021-12-07 14:22:29.855097 | GENERATION: 89 | ERRORS: best=1, median=26.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=191.66
2021-12-07 14:22:48.588960 | GENERATION: 90 | ERRORS: best=1, median=27.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=191.205
2021-12-07 14:23:06.882713 | GENERATION: 91 | ERRORS: best=1, median=26.5, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=191.59
2021-12-07 14:23:25.560853 | GENERATION: 92 | ERRORS: best=1, median=28.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=191.48
2021-12-07 14:23:43.751145 | GENERATION: 93 | ERRORS: best=1, median=28.0, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=191.285
2021-12-07 14:24:02.298369 | GENERATION: 94 | ERRORS: best=1, median=28.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=190.98
2021-12-07 14:24:21.599444 | GENERATION: 95 | ERRORS: best=1, median=27.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=191.475
2021-12-07 14:24:40.644116 | GENERATION: 96 | ERRORS: best=1, median=27.5, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=191.765
2021-12-07 14:24:59.478994 | GENERATION: 97 | ERRORS: best=1, median=27.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=191.415
2021-12-07 14:25:18.711184 | GENERATION: 98 | ERRORS: best=1, median=28.0, diversity=0.8 | INDIVIDUALS: n=200, avg_genome_length=191.09
2021-12-07 14:25:37.823691 | GENERATION: 99 | ERRORS: best=1, median=23.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=191.39
2021-12-07 14:25:56.380304 | GENERATION: 100 | ERRORS: best=1, median=28.0, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=191.195
2021-12-07 14:26:15.864920 | GENERATION: 101 | ERRORS: best=1, median=27.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=191.77
2021-12-07 14:26:35.435734 | GENERATION: 102 | ERRORS: best=1, median=27.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=192.05
2021-12-07 14:26:54.448299 | GENERATION: 103 | ERRORS: best=1, median=26.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=191.95
2021-12-07 14:27:14.074192 | GENERATION: 104 | ERRORS: best=1, median=21.5, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=191.76
2021-12-07 14:27:33.802128 | GENERATION: 105 | ERRORS: best=1, median=26.5, diversity=0.795 | INDIVIDUALS: n=200, avg_genome_length=191.92
2021-12-07 14:27:53.579660 | GENERATION: 106 | ERRORS: best=1, median=25.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=191.275
Simplifying genome of length 193 with total error 0.
Simplified genome by 1 to length 192.
Simplified genome by 1 to length 191.
Simplified genome by 2 to length 189.
Simplified genome by 1 to length 188.
Simplified genome by 1 to length 187.
Simplified genome by 1 to length 186.
Simplified genome by 1 to length 185.
Simplified genome by 1 to length 184.
Simplified genome by 1 to length 183.
Simplified genome by 1 to length 182.
Simplified genome by 1 to length 181.
Simplified genome by 1 to length 180.
Simplified genome by 1 to length 179.
Simplified genome to length 179 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='bool_shove_dup', code_blocks=0), InstructionMeta(name='int_dup_times', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), Input(input_index=2), Closer(), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_but_last_n', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_dup_times', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_swap', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='int_dup_times', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='str_concat', code_blocks=0), Closer(), InstructionMeta(name='noop', code_blocks=0), InstructionMeta(name='println_exec', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_strip_whitespace', code_blocks=0), InstructionMeta(name='str_eq', code_blocks=0), InstructionMeta(name='str_but_last', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='str_pop', code_blocks=0), InstructionMeta(name='noop', code_blocks=0), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), InstructionMeta(name='int_eq', code_blocks=0), InstructionMeta(name='str_eq', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='println_exec', code_blocks=0), InstructionMeta(name='int_mult', code_blocks=0), InstructionMeta(name='str_strip_whitespace', code_blocks=0), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='bool_stack_depth', code_blocks=0), Literal(value=False, push_type=<pyshgp.push.types.PushBoolType object at 0x7fc749e19310>), Closer(), InstructionMeta(name='str_yank_dup', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='print_bool', code_blocks=0), InstructionMeta(name='str_concat', code_blocks=0), InstructionMeta(name='str_from_nth_char', code_blocks=0), InstructionMeta(name='int_eq', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_eq', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_flush', code_blocks=0), InstructionMeta(name='int_eq', code_blocks=0), InstructionMeta(name='str_eq', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), InstructionMeta(name='bool_flush', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='bool_yank', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='println_exec', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_is_empty', code_blocks=0), InstructionMeta(name='bool_shove_dup', code_blocks=0), InstructionMeta(name='bool_dup', code_blocks=0), InstructionMeta(name='bool_shove_dup', code_blocks=0), InstructionMeta(name='int_dup_times', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='str_pop', code_blocks=0), InstructionMeta(name='noop', code_blocks=0), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='int_is_empty', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='str_swap', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='println_str', code_blocks=0), InstructionMeta(name='exec_dup', code_blocks=1), InstructionMeta(name='str_rot', code_blocks=0), InstructionMeta(name='bool_not', code_blocks=0), InstructionMeta(name='exec_rot', code_blocks=3), Closer(), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='exec_is_empty', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_contains_str', code_blocks=0), Closer(), InstructionMeta(name='exec_do_count', code_blocks=1), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_concat', code_blocks=0), InstructionMeta(name='str_reverse', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), Closer(), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='int_is_empty', code_blocks=0), InstructionMeta(name='int_swap', code_blocks=0), InstructionMeta(name='str_is_empty', code_blocks=0), Closer(), InstructionMeta(name='exec_dup_times', code_blocks=1), InstructionMeta(name='int_min', code_blocks=0), InstructionMeta(name='int_sub', code_blocks=0), Closer(), Closer(), Closer(), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='bool_is_empty', code_blocks=0), InstructionMeta(name='exec_do_while', code_blocks=1), InstructionMeta(name='str_dup_times', code_blocks=0), InstructionMeta(name='exec_rot', code_blocks=3), InstructionMeta(name='exec_yank_dup', code_blocks=0), InstructionMeta(name='bool_yank', code_blocks=0), InstructionMeta(name='exec_dup', code_blocks=1), InstructionMeta(name='bool_shove_dup', code_blocks=0), InstructionMeta(name='int_dup_times', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='str_eq', code_blocks=0), Closer(), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='bool_pop', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_dup_times', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), InstructionMeta(name='int_flush', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_while', code_blocks=1), InstructionMeta(name='bool_shove_dup', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_remove_n_str', code_blocks=0), Closer(), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='bool_shove_dup', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='exec_is_empty', code_blocks=0), InstructionMeta(name='str_flush', code_blocks=0), InstructionMeta(name='int_eq', code_blocks=0), InstructionMeta(name='str_insert_str', code_blocks=0), InstructionMeta(name='str_pop', code_blocks=0), InstructionMeta(name='noop', code_blocks=0), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), InstructionMeta(name='int_inc', code_blocks=0), InstructionMeta(name='exec_eq', code_blocks=0)])
	Program:
	 (bool_shove_dup int_dup_times str_insert_str bool_and input_2 str_length str_but_last_n int_min input_2 str_length str_length int_dup_times str_insert_str bool_and input_2 str_length str_length str_swap int_lt int_lt int_dup_times str_insert_str str_concat noop println_exec input_0 str_length str_strip_whitespace str_eq str_but_last str_insert_str str_pop noop str_occurrences_of_str int_eq str_eq input_0 str_length input_1 str_length println_exec int_mult str_strip_whitespace exec_shove_dup (bool_stack_depth False) str_yank_dup bool_and input_0 input_1 str_length int_gte print_bool str_concat str_from_nth_char int_eq int_lt str_eq str_length input_1 str_flush int_eq str_eq input_2 str_length str_occurrences_of_str bool_flush int_lt str_length bool_yank str_length int_min str_insert_str bool_and println_exec input_2 str_length int_is_empty bool_shove_dup bool_dup bool_shove_dup int_dup_times str_insert_str str_pop noop str_occurrences_of_str bool_and int_lt int_is_empty input_0 str_length bool_and str_swap int_lt input_0 str_length println_str exec_dup (str_rot bool_not exec_rot () (exec_shove_dup (exec_is_empty bool_and int_lt input_1 str_contains_str) exec_do_count (input_0 str_length str_concat str_reverse input_1 str_length int_lt) int_lt int_is_empty int_swap str_is_empty) (exec_dup_times (int_min int_sub))) bool_and exec_do_range (input_2 str_length exec_shove_dup (bool_is_empty exec_do_while (str_dup_times exec_rot (exec_yank_dup bool_yank exec_dup (bool_shove_dup int_dup_times str_insert_str str_eq) bool_and bool_pop input_2 str_length int_dup_times str_insert_str exec_do_range (int_flush int_lt exec_while (bool_shove_dup input_1 str_length str_remove_n_str) bool_and bool_shove_dup int_lt str_insert_str input_1 str_length exec_is_empty str_flush int_eq str_insert_str str_pop noop str_occurrences_of_str int_inc exec_eq)) () ()))))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 2000156.0
	Time:
	 00:32:27
