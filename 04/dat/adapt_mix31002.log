Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=3, push_config=PushConfig(step_limit=600, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, growth_cap=500, collection_size_cap=1000), output_stacks=['bool'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f16c92681c0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f16d543cd30>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f16c92683d0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f16c92fda80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f16c92fda00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7f16d5443820>]
========================================
Start Run
========================================
2021-12-08 23:01:31.713020 | GENERATION: 1 | ERRORS: best=28, median=100000000.0, diversity=0.015 | INDIVIDUALS: n=200, avg_genome_length=124.38
2021-12-08 23:01:41.557994 | GENERATION: 2 | ERRORS: best=28, median=28.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=131.19
2021-12-08 23:01:50.615461 | GENERATION: 3 | ERRORS: best=28, median=60.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=148.645
2021-12-08 23:01:59.771750 | GENERATION: 4 | ERRORS: best=28, median=54.5, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=169.91
2021-12-08 23:02:09.355940 | GENERATION: 5 | ERRORS: best=28, median=61.5, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=189.065
2021-12-08 23:02:18.259678 | GENERATION: 6 | ERRORS: best=28, median=61.5, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=198.055
2021-12-08 23:02:27.498930 | GENERATION: 7 | ERRORS: best=28, median=54.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=197.795
2021-12-08 23:02:38.619092 | GENERATION: 8 | ERRORS: best=22, median=69.5, diversity=0.47 | INDIVIDUALS: n=200, avg_genome_length=197.615
2021-12-08 23:02:49.075014 | GENERATION: 9 | ERRORS: best=21, median=40.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=198.645
2021-12-08 23:03:00.616861 | GENERATION: 10 | ERRORS: best=20, median=45.5, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=199.1
2021-12-08 23:03:11.854313 | GENERATION: 11 | ERRORS: best=20, median=55.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=200.32
2021-12-08 23:03:24.328555 | GENERATION: 12 | ERRORS: best=19, median=67.5, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=200.175
2021-12-08 23:03:36.463992 | GENERATION: 13 | ERRORS: best=19, median=64.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=201.21
2021-12-08 23:03:49.286193 | GENERATION: 14 | ERRORS: best=19, median=66.0, diversity=0.53 | INDIVIDUALS: n=200, avg_genome_length=202.145
2021-12-08 23:04:02.424529 | GENERATION: 15 | ERRORS: best=16, median=60.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=201.7
2021-12-08 23:04:15.457346 | GENERATION: 16 | ERRORS: best=16, median=72.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=201.77
2021-12-08 23:04:28.931669 | GENERATION: 17 | ERRORS: best=16, median=51.0, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=201.705
2021-12-08 23:04:41.707396 | GENERATION: 18 | ERRORS: best=16, median=42.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=202.38
2021-12-08 23:04:55.082966 | GENERATION: 19 | ERRORS: best=16, median=46.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=202.49
2021-12-08 23:05:08.519500 | GENERATION: 20 | ERRORS: best=16, median=47.0, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=201.58
2021-12-08 23:05:21.052534 | GENERATION: 21 | ERRORS: best=16, median=63.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=201.585
2021-12-08 23:05:33.863769 | GENERATION: 22 | ERRORS: best=16, median=62.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=201.685
2021-12-08 23:05:46.666923 | GENERATION: 23 | ERRORS: best=16, median=60.5, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=200.05
2021-12-08 23:05:59.546065 | GENERATION: 24 | ERRORS: best=16, median=38.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=200.985
2021-12-08 23:06:11.699816 | GENERATION: 25 | ERRORS: best=16, median=45.0, diversity=0.545 | INDIVIDUALS: n=200, avg_genome_length=200.82
2021-12-08 23:06:24.734678 | GENERATION: 26 | ERRORS: best=16, median=39.5, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=199.41
2021-12-08 23:06:36.758411 | GENERATION: 27 | ERRORS: best=16, median=39.5, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=199.63
2021-12-08 23:06:48.818141 | GENERATION: 28 | ERRORS: best=14, median=44.5, diversity=0.61 | INDIVIDUALS: n=200, avg_genome_length=199.315
2021-12-08 23:07:01.624620 | GENERATION: 29 | ERRORS: best=14, median=40.0, diversity=0.575 | INDIVIDUALS: n=200, avg_genome_length=197.83
2021-12-08 23:07:14.225726 | GENERATION: 30 | ERRORS: best=11, median=36.5, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=199.05
2021-12-08 23:07:26.866847 | GENERATION: 31 | ERRORS: best=11, median=43.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=198.115
2021-12-08 23:07:40.758465 | GENERATION: 32 | ERRORS: best=11, median=47.5, diversity=0.635 | INDIVIDUALS: n=200, avg_genome_length=198.32
2021-12-08 23:07:53.964982 | GENERATION: 33 | ERRORS: best=11, median=43.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=197.425
2021-12-08 23:08:08.002121 | GENERATION: 34 | ERRORS: best=11, median=44.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=197.145
2021-12-08 23:08:21.840053 | GENERATION: 35 | ERRORS: best=11, median=56.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=197.07
2021-12-08 23:08:35.609863 | GENERATION: 36 | ERRORS: best=11, median=43.0, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=196.32
2021-12-08 23:08:50.344396 | GENERATION: 37 | ERRORS: best=11, median=37.5, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=196.305
2021-12-08 23:09:05.790135 | GENERATION: 38 | ERRORS: best=11, median=43.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=196.835
2021-12-08 23:09:20.145358 | GENERATION: 39 | ERRORS: best=10, median=40.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=196.825
2021-12-08 23:09:34.131691 | GENERATION: 40 | ERRORS: best=10, median=45.5, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=194.565
2021-12-08 23:09:48.303460 | GENERATION: 41 | ERRORS: best=9, median=36.5, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=194.185
2021-12-08 23:10:03.020468 | GENERATION: 42 | ERRORS: best=9, median=36.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=194.22
2021-12-08 23:10:17.511639 | GENERATION: 43 | ERRORS: best=9, median=57.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=194.885
2021-12-08 23:10:31.835671 | GENERATION: 44 | ERRORS: best=8, median=36.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=193.385
2021-12-08 23:10:46.295109 | GENERATION: 45 | ERRORS: best=8, median=39.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=193.51
2021-12-08 23:11:00.669556 | GENERATION: 46 | ERRORS: best=8, median=51.5, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=193.36
2021-12-08 23:11:14.766949 | GENERATION: 47 | ERRORS: best=8, median=57.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=192.875
2021-12-08 23:11:28.914753 | GENERATION: 48 | ERRORS: best=8, median=46.5, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=192.8
2021-12-08 23:11:43.856592 | GENERATION: 49 | ERRORS: best=8, median=41.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=192.365
2021-12-08 23:11:58.081720 | GENERATION: 50 | ERRORS: best=8, median=43.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=193.26
2021-12-08 23:12:12.488644 | GENERATION: 51 | ERRORS: best=8, median=52.5, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=193.145
2021-12-08 23:12:26.596156 | GENERATION: 52 | ERRORS: best=7, median=45.5, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=192.6
2021-12-08 23:12:40.845192 | GENERATION: 53 | ERRORS: best=7, median=48.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=192.885
2021-12-08 23:12:55.097019 | GENERATION: 54 | ERRORS: best=7, median=54.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=192.32
2021-12-08 23:13:09.769216 | GENERATION: 55 | ERRORS: best=7, median=67.5, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=191.645
2021-12-08 23:13:24.390533 | GENERATION: 56 | ERRORS: best=7, median=55.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=192.335
2021-12-08 23:13:39.600573 | GENERATION: 57 | ERRORS: best=7, median=43.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=194.075
2021-12-08 23:13:54.682358 | GENERATION: 58 | ERRORS: best=7, median=60.5, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=193.67
2021-12-08 23:14:10.063071 | GENERATION: 59 | ERRORS: best=7, median=68.0, diversity=0.82 | INDIVIDUALS: n=200, avg_genome_length=193.8
2021-12-08 23:14:25.449699 | GENERATION: 60 | ERRORS: best=5, median=66.5, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=193.98
2021-12-08 23:14:40.017116 | GENERATION: 61 | ERRORS: best=5, median=64.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=194.975
2021-12-08 23:14:54.905550 | GENERATION: 62 | ERRORS: best=4, median=44.0, diversity=0.72 | INDIVIDUALS: n=200, avg_genome_length=194.965
2021-12-08 23:15:08.754116 | GENERATION: 63 | ERRORS: best=3, median=37.5, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=194.86
2021-12-08 23:15:23.363514 | GENERATION: 64 | ERRORS: best=2, median=50.5, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=195.725
2021-12-08 23:15:37.882999 | GENERATION: 65 | ERRORS: best=1, median=62.5, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=195.02
2021-12-08 23:15:52.647960 | GENERATION: 66 | ERRORS: best=1, median=63.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=195.61
2021-12-08 23:16:08.073569 | GENERATION: 67 | ERRORS: best=1, median=62.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=195.27
2021-12-08 23:16:21.977201 | GENERATION: 68 | ERRORS: best=1, median=46.5, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=195.11
2021-12-08 23:16:36.917457 | GENERATION: 69 | ERRORS: best=1, median=56.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=194.67
2021-12-08 23:16:51.651345 | GENERATION: 70 | ERRORS: best=1, median=71.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=195.015
2021-12-08 23:17:05.453801 | GENERATION: 71 | ERRORS: best=1, median=62.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=195.465
2021-12-08 23:17:19.633233 | GENERATION: 72 | ERRORS: best=1, median=59.5, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=194.84
2021-12-08 23:17:34.640438 | GENERATION: 73 | ERRORS: best=1, median=61.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=194.53
2021-12-08 23:17:49.401742 | GENERATION: 74 | ERRORS: best=1, median=59.5, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=195.21
2021-12-08 23:18:04.109969 | GENERATION: 75 | ERRORS: best=1, median=49.0, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=196.495
2021-12-08 23:18:18.697026 | GENERATION: 76 | ERRORS: best=1, median=39.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=195.225
2021-12-08 23:18:33.273704 | GENERATION: 77 | ERRORS: best=1, median=40.5, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=194.765
2021-12-08 23:18:48.047023 | GENERATION: 78 | ERRORS: best=1, median=51.5, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=194.995
2021-12-08 23:19:02.801263 | GENERATION: 79 | ERRORS: best=1, median=42.0, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=195.375
2021-12-08 23:19:17.882536 | GENERATION: 80 | ERRORS: best=1, median=58.5, diversity=0.755 | INDIVIDUALS: n=200, avg_genome_length=195.475
2021-12-08 23:19:33.209161 | GENERATION: 81 | ERRORS: best=1, median=72.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=195.225
2021-12-08 23:19:48.151158 | GENERATION: 82 | ERRORS: best=1, median=69.5, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=195.535
2021-12-08 23:20:03.555025 | GENERATION: 83 | ERRORS: best=1, median=46.5, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=194.72
2021-12-08 23:20:19.237404 | GENERATION: 84 | ERRORS: best=1, median=70.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=195.27
2021-12-08 23:20:35.286336 | GENERATION: 85 | ERRORS: best=1, median=59.5, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=194.91
2021-12-08 23:20:50.618854 | GENERATION: 86 | ERRORS: best=1, median=51.5, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=195.065
2021-12-08 23:21:06.759493 | GENERATION: 87 | ERRORS: best=1, median=62.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=195.58
2021-12-08 23:21:22.836588 | GENERATION: 88 | ERRORS: best=1, median=58.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=195.345
2021-12-08 23:21:37.528131 | GENERATION: 89 | ERRORS: best=1, median=72.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=195.28
2021-12-08 23:21:53.149926 | GENERATION: 90 | ERRORS: best=1, median=47.5, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=195.145
2021-12-08 23:22:09.925799 | GENERATION: 91 | ERRORS: best=1, median=51.5, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=195.18
2021-12-08 23:22:26.147350 | GENERATION: 92 | ERRORS: best=1, median=55.0, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=195.485
2021-12-08 23:22:40.833945 | GENERATION: 93 | ERRORS: best=1, median=69.0, diversity=0.75 | INDIVIDUALS: n=200, avg_genome_length=195.055
2021-12-08 23:22:56.509287 | GENERATION: 94 | ERRORS: best=1, median=59.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=194.84
2021-12-08 23:23:12.258426 | GENERATION: 95 | ERRORS: best=1, median=53.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=195.11
2021-12-08 23:23:27.998313 | GENERATION: 96 | ERRORS: best=1, median=51.5, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=194.825
2021-12-08 23:23:43.420728 | GENERATION: 97 | ERRORS: best=1, median=61.5, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=194.61
2021-12-08 23:23:58.825993 | GENERATION: 98 | ERRORS: best=1, median=53.5, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=195.53
2021-12-08 23:24:15.225411 | GENERATION: 99 | ERRORS: best=1, median=67.0, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=195.06
2021-12-08 23:24:31.947642 | GENERATION: 100 | ERRORS: best=1, median=55.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=195.235
2021-12-08 23:24:47.728126 | GENERATION: 101 | ERRORS: best=1, median=49.0, diversity=0.73 | INDIVIDUALS: n=200, avg_genome_length=195.295
2021-12-08 23:25:03.670002 | GENERATION: 102 | ERRORS: best=1, median=52.5, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=195.01
2021-12-08 23:25:19.640398 | GENERATION: 103 | ERRORS: best=1, median=62.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=194.815
2021-12-08 23:25:35.294355 | GENERATION: 104 | ERRORS: best=1, median=63.0, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=194.755
2021-12-08 23:25:50.581247 | GENERATION: 105 | ERRORS: best=1, median=72.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=195.005
2021-12-08 23:26:05.791113 | GENERATION: 106 | ERRORS: best=1, median=68.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=195.17
2021-12-08 23:26:21.724653 | GENERATION: 107 | ERRORS: best=1, median=64.0, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=195.405
2021-12-08 23:26:38.395870 | GENERATION: 108 | ERRORS: best=1, median=65.5, diversity=0.83 | INDIVIDUALS: n=200, avg_genome_length=194.44
Simplifying genome of length 197 with total error 0.
Simplified genome by 1 to length 196.
Simplified genome by 2 to length 194.
Simplified genome by 1 to length 193.
Simplified genome by 1 to length 192.
Simplified genome by 2 to length 190.
Simplified genome by 3 to length 187.
Simplified genome by 1 to length 186.
Simplified genome by 1 to length 185.
Simplified genome by 1 to length 184.
Simplified genome by 1 to length 183.
Simplified genome by 1 to length 182.
Simplified genome by 2 to length 180.
Simplified genome by 2 to length 178.
Simplified genome by 2 to length 176.
Simplified genome by 1 to length 175.
Simplified genome by 1 to length 174.
Simplified genome by 1 to length 173.
Simplified genome by 2 to length 171.
Simplified genome by 1 to length 170.
Simplified genome by 1 to length 169.
Simplified genome by 1 to length 168.
Simplified genome by 1 to length 167.
Simplified genome by 1 to length 166.
Simplified genome by 2 to length 164.
Simplified genome to length 164 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='str_dup', code_blocks=0), InstructionMeta(name='str_replace_first_str', code_blocks=0), InstructionMeta(name='str_tail', code_blocks=0), InstructionMeta(name='str_remove_nth', code_blocks=0), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='exec_do_count', code_blocks=1), InstructionMeta(name='str_split_on_str', code_blocks=0), InstructionMeta(name='str_shove', code_blocks=0), InstructionMeta(name='str_but_last', code_blocks=0), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), InstructionMeta(name='int_div', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_tail', code_blocks=0), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='str_stack_depth', code_blocks=0), Closer(), InstructionMeta(name='bool_yank', code_blocks=0), InstructionMeta(name='exec_do_while', code_blocks=1), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_dup_times', code_blocks=1), InstructionMeta(name='str_from_first_char', code_blocks=0), InstructionMeta(name='bool_eq', code_blocks=0), InstructionMeta(name='bool_rot', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='str_split_on_str', code_blocks=0), InstructionMeta(name='str_shove', code_blocks=0), InstructionMeta(name='str_but_last', code_blocks=0), Literal(value=True, push_type=<pyshgp.push.types.PushBoolType object at 0x7f16d421d910>), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='str_split_on_str', code_blocks=0), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='exec_do_range', code_blocks=1), Closer(), InstructionMeta(name='bool_is_empty', code_blocks=0), InstructionMeta(name='exec_rot', code_blocks=3), Input(input_index=1), InstructionMeta(name='str_from_int', code_blocks=0), InstructionMeta(name='exec_do_count', code_blocks=1), InstructionMeta(name='str_from_first_char', code_blocks=0), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='str_concat', code_blocks=0), InstructionMeta(name='bool_shove', code_blocks=0), InstructionMeta(name='str_remove_nth', code_blocks=0), Closer(), InstructionMeta(name='exec_yank_dup', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_index_of_str', code_blocks=0), InstructionMeta(name='exec_yank', code_blocks=0), InstructionMeta(name='bool_swap', code_blocks=0), Closer(), InstructionMeta(name='noop_open', code_blocks=1), InstructionMeta(name='bool_is_empty', code_blocks=0), InstructionMeta(name='str_yank', code_blocks=0), InstructionMeta(name='noop', code_blocks=0), Closer(), InstructionMeta(name='int_stack_depth', code_blocks=0), Closer(), InstructionMeta(name='bool_not', code_blocks=0), InstructionMeta(name='bool_not', code_blocks=0), InstructionMeta(name='exec_dup', code_blocks=1), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), InstructionMeta(name='int_shove', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_from_first_char', code_blocks=0), InstructionMeta(name='int_dec', code_blocks=0), InstructionMeta(name='str_remove_all_str', code_blocks=0), InstructionMeta(name='exec_eq', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_from_int', code_blocks=0), InstructionMeta(name='exec_do_count', code_blocks=1), InstructionMeta(name='str_from_first_char', code_blocks=0), Closer(), InstructionMeta(name='bool_and', code_blocks=0), InstructionMeta(name='int_sub', code_blocks=0), Input(input_index=1), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='print_int', code_blocks=0), InstructionMeta(name='int_lte', code_blocks=0), InstructionMeta(name='exec_yank_dup', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='str_shove_dup', code_blocks=0), InstructionMeta(name='println_bool', code_blocks=0), InstructionMeta(name='int_yank', code_blocks=0), Input(input_index=2), Closer(), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='bool_shove', code_blocks=0), InstructionMeta(name='str_remove_nth', code_blocks=0), Closer(), InstructionMeta(name='exec_yank_dup', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_is_empty', code_blocks=0), InstructionMeta(name='str_flush', code_blocks=0), InstructionMeta(name='print_str', code_blocks=0), InstructionMeta(name='str_from_first_char', code_blocks=0), InstructionMeta(name='str_occurrences_of_str', code_blocks=0), Input(input_index=0), Closer(), InstructionMeta(name='int_gt', code_blocks=0), InstructionMeta(name='str_concat', code_blocks=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_stack_depth', code_blocks=0), Closer(), InstructionMeta(name='bool_yank', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_replace_first_str', code_blocks=0), InstructionMeta(name='str_tail', code_blocks=0), InstructionMeta(name='str_remove_nth', code_blocks=0), InstructionMeta(name='bool_not', code_blocks=0), InstructionMeta(name='int_flush', code_blocks=0), Closer(), InstructionMeta(name='str_stack_depth', code_blocks=0), InstructionMeta(name='println_exec', code_blocks=0), InstructionMeta(name='exec_shove', code_blocks=1), InstructionMeta(name='str_remove_nth', code_blocks=0), InstructionMeta(name='bool_yank', code_blocks=0), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='int_rot', code_blocks=0), InstructionMeta(name='int_lte', code_blocks=0), InstructionMeta(name='exec_shove_dup', code_blocks=1), InstructionMeta(name='str_split_on_str', code_blocks=0), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='exec_dup_times', code_blocks=1), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_is_empty', code_blocks=0), InstructionMeta(name='bool_not', code_blocks=0), InstructionMeta(name='println_exec', code_blocks=0), InstructionMeta(name='int_pop', code_blocks=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_max', code_blocks=0), Input(input_index=0), InstructionMeta(name='println_bool', code_blocks=0), InstructionMeta(name='str_replace_first_str', code_blocks=0), InstructionMeta(name='str_tail', code_blocks=0), InstructionMeta(name='str_concat', code_blocks=0), InstructionMeta(name='str_remove_n_str', code_blocks=0), Input(input_index=0), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='bool_dup_times', code_blocks=0), InstructionMeta(name='exec_dup', code_blocks=1), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='str_shove', code_blocks=0), InstructionMeta(name='exec_shove', code_blocks=1), Input(input_index=1), InstructionMeta(name='int_yank_dup', code_blocks=0), InstructionMeta(name='exec_do_count', code_blocks=1), InstructionMeta(name='exec_eq', code_blocks=0)])
	Program:
	 (str_dup str_replace_first_str str_tail str_remove_nth bool_dup_times exec_do_range (bool_and exec_do_count (str_split_on_str str_shove str_but_last bool_dup_times exec_do_range (bool_dup_times exec_do_range (int_div str_length input_0 str_length str_tail exec_shove_dup (str_stack_depth) bool_yank exec_do_while (input_1 str_length input_2 str_length int_gte exec_dup_times (str_from_first_char bool_eq bool_rot bool_and str_split_on_str str_shove str_but_last True exec_shove_dup (str_split_on_str bool_dup_times exec_do_range () bool_is_empty exec_rot (input_1 str_from_int exec_do_count (str_from_first_char bool_and int_lt bool_dup_times str_concat bool_shove str_remove_nth) exec_yank_dup str_length str_index_of_str exec_yank bool_swap) (noop_open (bool_is_empty str_yank noop) int_stack_depth) (bool_not bool_not exec_dup (str_occurrences_of_str int_shove int_lt str_from_first_char int_dec str_remove_all_str exec_eq input_1 str_from_int exec_do_count (str_from_first_char) bool_and int_sub input_1 int_lt print_int int_lte exec_yank_dup int_lt str_shove_dup println_bool int_yank input_2) input_2 str_length bool_shove str_remove_nth) exec_yank_dup str_length str_is_empty str_flush print_str str_from_first_char str_occurrences_of_str input_0) int_gt str_concat input_1 str_length str_stack_depth) bool_yank str_length str_replace_first_str str_tail str_remove_nth bool_not int_flush) str_stack_depth println_exec exec_shove (str_remove_nth bool_yank exec_shove_dup (int_rot int_lte exec_shove_dup (str_split_on_str bool_dup_times exec_dup_times (input_0 str_length int_is_empty bool_not println_exec int_pop str_length int_max input_0 println_bool str_replace_first_str str_tail str_concat str_remove_n_str input_0 str_length bool_dup_times exec_dup (input_1 str_length str_shove exec_shove (input_1 int_yank_dup exec_do_count (exec_eq))))))))))))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 10000030.0
	Time:
	 00:27:58
