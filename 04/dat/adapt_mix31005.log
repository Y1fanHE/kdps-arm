Included 22 edge cases.
Included 78 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(runtime_limit=10, step_limit=600, collection_size_cap=1000, growth_cap=500, numeric_magnitude_limit=1000000000000.0), output_stacks=['bool'], arity=3)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fe9fa7982e0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fe9fa78db20>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (40, 200)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fe9fa798160>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fe9eec62080>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fe9eec62500>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[]
ERC Generators:
[<function rand_bool at 0x7fe9fa793820>]
========================================
Start Run
========================================
2021-12-09 03:30:22.237349 | GENERATION: 1 | ERRORS: best=26, median=100000000.0, diversity=0.02 | INDIVIDUALS: n=200, avg_genome_length=127.525
2021-12-09 03:30:28.632829 | GENERATION: 2 | ERRORS: best=26, median=26.0, diversity=0.055 | INDIVIDUALS: n=200, avg_genome_length=105.815
2021-12-09 03:30:36.029993 | GENERATION: 3 | ERRORS: best=25, median=26.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=103.345
2021-12-09 03:30:49.043319 | GENERATION: 4 | ERRORS: best=24, median=38.0, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=103.33
2021-12-09 03:31:05.632018 | GENERATION: 5 | ERRORS: best=23, median=36.5, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=102.13
2021-12-09 03:31:24.558993 | GENERATION: 6 | ERRORS: best=23, median=35.5, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=101.195
2021-12-09 03:31:45.228560 | GENERATION: 7 | ERRORS: best=20, median=35.0, diversity=0.715 | INDIVIDUALS: n=200, avg_genome_length=101.03
2021-12-09 03:32:07.346624 | GENERATION: 8 | ERRORS: best=17, median=41.5, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=99.5
2021-12-09 03:32:29.257165 | GENERATION: 9 | ERRORS: best=17, median=33.5, diversity=0.74 | INDIVIDUALS: n=200, avg_genome_length=100.1
2021-12-09 03:32:51.487993 | GENERATION: 10 | ERRORS: best=20, median=37.5, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=98.875
2021-12-09 03:33:13.429153 | GENERATION: 11 | ERRORS: best=17, median=32.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=97.365
2021-12-09 03:33:35.250736 | GENERATION: 12 | ERRORS: best=18, median=34.5, diversity=0.755 | INDIVIDUALS: n=200, avg_genome_length=96.635
2021-12-09 03:33:57.151125 | GENERATION: 13 | ERRORS: best=18, median=32.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=96.185
2021-12-09 03:34:18.014122 | GENERATION: 14 | ERRORS: best=17, median=33.5, diversity=0.78 | INDIVIDUALS: n=200, avg_genome_length=93.69
2021-12-09 03:34:39.117306 | GENERATION: 15 | ERRORS: best=18, median=36.0, diversity=0.765 | INDIVIDUALS: n=200, avg_genome_length=92.92
2021-12-09 03:35:01.125533 | GENERATION: 16 | ERRORS: best=19, median=35.0, diversity=0.8 | INDIVIDUALS: n=200, avg_genome_length=94.965
2021-12-09 03:35:23.121779 | GENERATION: 17 | ERRORS: best=18, median=33.0, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=93.52
2021-12-09 03:35:44.342277 | GENERATION: 18 | ERRORS: best=19, median=34.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=90.33
2021-12-09 03:36:05.706165 | GENERATION: 19 | ERRORS: best=19, median=31.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=89.55
2021-12-09 03:36:28.058310 | GENERATION: 20 | ERRORS: best=17, median=35.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=89.25
2021-12-09 03:36:50.178912 | GENERATION: 21 | ERRORS: best=17, median=43.0, diversity=0.775 | INDIVIDUALS: n=200, avg_genome_length=86.935
2021-12-09 03:37:12.542474 | GENERATION: 22 | ERRORS: best=15, median=70.0, diversity=0.845 | INDIVIDUALS: n=200, avg_genome_length=85.0
2021-12-09 03:37:36.432501 | GENERATION: 23 | ERRORS: best=14, median=65.0, diversity=0.865 | INDIVIDUALS: n=200, avg_genome_length=84.705
2021-12-09 03:38:01.533198 | GENERATION: 24 | ERRORS: best=14, median=1000023.0, diversity=0.88 | INDIVIDUALS: n=200, avg_genome_length=82.6
2021-12-09 03:38:27.617806 | GENERATION: 25 | ERRORS: best=12, median=1000036.0, diversity=0.885 | INDIVIDUALS: n=200, avg_genome_length=80.755
2021-12-09 03:38:53.990973 | GENERATION: 26 | ERRORS: best=12, median=34.0, diversity=0.855 | INDIVIDUALS: n=200, avg_genome_length=79.05
2021-12-09 03:39:18.339102 | GENERATION: 27 | ERRORS: best=10, median=36.5, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=76.89
2021-12-09 03:39:42.259688 | GENERATION: 28 | ERRORS: best=9, median=29.5, diversity=0.83 | INDIVIDUALS: n=200, avg_genome_length=75.505
2021-12-09 03:40:08.661834 | GENERATION: 29 | ERRORS: best=9, median=28.0, diversity=0.885 | INDIVIDUALS: n=200, avg_genome_length=74.545
2021-12-09 03:40:33.906083 | GENERATION: 30 | ERRORS: best=9, median=32.0, diversity=0.88 | INDIVIDUALS: n=200, avg_genome_length=74.21
2021-12-09 03:40:55.002034 | GENERATION: 31 | ERRORS: best=8, median=28.0, diversity=0.855 | INDIVIDUALS: n=200, avg_genome_length=73.805
2021-12-09 03:41:13.926345 | GENERATION: 32 | ERRORS: best=8, median=30.0, diversity=0.785 | INDIVIDUALS: n=200, avg_genome_length=74.6
2021-12-09 03:41:31.899122 | GENERATION: 33 | ERRORS: best=9, median=27.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=73.37
2021-12-09 03:41:49.697048 | GENERATION: 34 | ERRORS: best=9, median=27.5, diversity=0.8 | INDIVIDUALS: n=200, avg_genome_length=73.415
2021-12-09 03:42:06.192643 | GENERATION: 35 | ERRORS: best=10, median=31.5, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=73.03
2021-12-09 03:42:23.958436 | GENERATION: 36 | ERRORS: best=10, median=28.0, diversity=0.815 | INDIVIDUALS: n=200, avg_genome_length=71.335
2021-12-09 03:42:41.672364 | GENERATION: 37 | ERRORS: best=6, median=27.0, diversity=0.795 | INDIVIDUALS: n=200, avg_genome_length=72.225
2021-12-09 03:42:59.624591 | GENERATION: 38 | ERRORS: best=8, median=27.0, diversity=0.79 | INDIVIDUALS: n=200, avg_genome_length=71.98
2021-12-09 03:43:16.948246 | GENERATION: 39 | ERRORS: best=7, median=26.0, diversity=0.735 | INDIVIDUALS: n=200, avg_genome_length=72.06
2021-12-09 03:43:34.040371 | GENERATION: 40 | ERRORS: best=7, median=26.0, diversity=0.705 | INDIVIDUALS: n=200, avg_genome_length=71.81
2021-12-09 03:43:50.602746 | GENERATION: 41 | ERRORS: best=8, median=26.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=71.03
2021-12-09 03:44:08.131761 | GENERATION: 42 | ERRORS: best=7, median=26.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=71.945
2021-12-09 03:44:24.460022 | GENERATION: 43 | ERRORS: best=7, median=26.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=72.515
Simplifying genome of length 73 with total error 0.
Simplified genome by 2 to length 71.
Simplified genome by 1 to length 70.
Simplified genome by 1 to length 69.
Simplified genome by 1 to length 68.
Simplified genome by 1 to length 67.
Simplified genome by 1 to length 66.
Simplified genome by 1 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 1 to length 63.
Simplified genome by 1 to length 62.
Simplified genome by 2 to length 60.
Simplified genome by 3 to length 57.
Simplified genome by 2 to length 55.
Simplified genome by 3 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 2 to length 45.
Simplified genome by 1 to length 44.
Simplified genome by 1 to length 43.
Simplified genome by 3 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 2 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 3 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 3 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([InstructionMeta(name='exec_dup', code_blocks=1), InstructionMeta(name='str_length', code_blocks=0), Input(input_index=0), Input(input_index=1), InstructionMeta(name='str_length', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_when', code_blocks=1), InstructionMeta(name='exec_stack_depth', code_blocks=0), InstructionMeta(name='exec_yank', code_blocks=0), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=2), InstructionMeta(name='str_length', code_blocks=0), Literal(value=False, push_type=<pyshgp.push.types.PushBoolType object at 0x7fe9f894b6d0>)])
	Program:
	 (exec_dup (str_length input_0 input_1 str_length int_lt exec_when (exec_stack_depth exec_yank int_lt input_2 str_length False)))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:15:16
