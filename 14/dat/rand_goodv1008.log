Included 32 edge cases.
Included 168 random cases.
Included 200 cases in total.
Finished formatting.
Included 0 edge cases.
Included 2000 random cases.
Included 2000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=1, output_stacks=['int'], push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000, step_limit=1500, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f584efd2850>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f588e0af3d0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (50, 250)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f584efd21f0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f584f9ad600>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f584f9ad980>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, vector_int_concat, vector_int_conj, vector_int_take, vector_int_subvec, vector_int_first, vector_int_last, vector_int_nth, vector_int_rest, vector_int_but_last, vector_int_length, vector_int_reverse, vector_int_push_all, vector_int_empty_vector, vector_int_contains, vector_int_index_of, vector_int_occurrences_of, vector_int_set_nth, vector_int_replace, vector_int_replace_first, vector_int_remove, vector_int_iterate, print_bool, println_bool, print_int, println_int, print_vector_int, println_vector_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, vector_int_pop, vector_int_dup, vector_int_dup_times, vector_int_swap, vector_int_rot, vector_int_flush, vector_int_eq, vector_int_stack_depth, vector_int_yank, vector_int_yank_dup, vector_int_shove, vector_int_shove_dup, vector_int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7f588e16a730>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7f588e16a730>), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7f588e16a730>)]
ERC Generators:
[<function rand_int at 0x7f58501fe9d0>]
========================================
Start Run
========================================
2021-12-23 08:15:31.415203 | GENERATION: 1 | ERRORS: best=2173.0, median=98521383.5, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=127.81 | VIRUSES: gene_rate=0.000
2021-12-23 08:15:42.514892 | GENERATION: 2 | ERRORS: best=2003.0, median=3113.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=106.735 | VIRUSES: gene_rate=0.007
2021-12-23 08:16:01.171285 | GENERATION: 3 | ERRORS: best=1985.0, median=3113.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=116.27 | VIRUSES: gene_rate=0.014
2021-12-23 08:16:23.258245 | GENERATION: 4 | ERRORS: best=1738.0, median=3235.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=121.555 | VIRUSES: gene_rate=0.020
2021-12-23 08:16:41.518861 | GENERATION: 5 | ERRORS: best=1893.0, median=3369.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=124.36 | VIRUSES: gene_rate=0.026
2021-12-23 08:16:58.065887 | GENERATION: 6 | ERRORS: best=1807.0, median=3235.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=138.33 | VIRUSES: gene_rate=0.028
2021-12-23 08:17:17.653299 | GENERATION: 7 | ERRORS: best=1596.0, median=9135.0, diversity=0.485 | INDIVIDUALS: n=200, avg_genome_length=145.565 | VIRUSES: gene_rate=0.028
2021-12-23 08:17:35.430515 | GENERATION: 8 | ERRORS: best=145.0, median=27234.5, diversity=0.495 | INDIVIDUALS: n=200, avg_genome_length=164.1 | VIRUSES: gene_rate=0.027
Simplifying genome of length 70 with total error 0.0.
Simplified genome by 3 to length 67.
Simplified genome by 1 to length 66.
Simplified genome by 2 to length 64.
Simplified genome by 3 to length 61.
Simplified genome by 3 to length 58.
Simplified genome by 3 to length 55.
Simplified genome by 2 to length 53.
Simplified genome by 2 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 3 to length 47.
Simplified genome by 2 to length 45.
Simplified genome by 3 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 3 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 2 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 2 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 3 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 2 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 2 to length 11.
Simplified genome by 1 to length 10.
Simplified genome by 1 to length 9.
Simplified genome by 1 to length 8.
Simplified genome to length 8 and total error 0.0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([VirusInput(input_index=0), VirusInstructionMeta(name='vector_int_iterate', code_blocks=1), VirusLiteral(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7f584fb35280>), VirusInstructionMeta(name='int_mod', code_blocks=0), InstructionMeta(name='int_add', code_blocks=0), Closer(), Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7f584fb35e50>), InstructionMeta(name='int_yank', code_blocks=0)])
	Program:
	 (vinput_0 vvector_int_iterate (v2 vint_mod int_add) 0 int_yank)
	Error vector:
	 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0.]
	Total error:
	 0.0
	Test error:
	 0.0
	Time:
	 00:05:28
