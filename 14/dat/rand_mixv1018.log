Included 32 edge cases.
Included 168 random cases.
Included 200 cases in total.
Finished formatting.
Included 0 edge cases.
Included 2000 random cases.
Included 2000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=1, output_stacks=['int'], push_config=PushConfig(step_limit=1500, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7ff1ba9621f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7ff1f9a07520>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (50, 250)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7ff1ba962940>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7ff1bafc37c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7ff1bafc35c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, vector_int_concat, vector_int_conj, vector_int_take, vector_int_subvec, vector_int_first, vector_int_last, vector_int_nth, vector_int_rest, vector_int_but_last, vector_int_length, vector_int_reverse, vector_int_push_all, vector_int_empty_vector, vector_int_contains, vector_int_index_of, vector_int_occurrences_of, vector_int_set_nth, vector_int_replace, vector_int_replace_first, vector_int_remove, vector_int_iterate, print_bool, println_bool, print_int, println_int, print_vector_int, println_vector_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, vector_int_pop, vector_int_dup, vector_int_dup_times, vector_int_swap, vector_int_rot, vector_int_flush, vector_int_eq, vector_int_stack_depth, vector_int_yank, vector_int_yank_dup, vector_int_shove, vector_int_shove_dup, vector_int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7ff1f9ac2790>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7ff1f9ac2790>), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7ff1f9ac2790>)]
ERC Generators:
[<function rand_int at 0x7ff1bbb90ee0>]
========================================
Start Run
========================================
2021-12-24 18:12:47.044708 | GENERATION: 1 | ERRORS: best=1808.0, median=200000000.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=169.46 | VIRUSES: gene_rate=0.000
2021-12-24 18:12:56.999494 | GENERATION: 2 | ERRORS: best=1782.0, median=3174.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=173.255 | VIRUSES: gene_rate=0.002
2021-12-24 18:13:10.446377 | GENERATION: 3 | ERRORS: best=1778.0, median=36021258.5, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=184.845 | VIRUSES: gene_rate=0.004
2021-12-24 18:13:22.876194 | GENERATION: 4 | ERRORS: best=1778.0, median=1019590.5, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=191.025 | VIRUSES: gene_rate=0.006
2021-12-24 18:13:35.736226 | GENERATION: 5 | ERRORS: best=1778.0, median=1001997.5, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=191.365 | VIRUSES: gene_rate=0.008
2021-12-24 18:13:49.040285 | GENERATION: 6 | ERRORS: best=1778.0, median=5044.0, diversity=0.37 | INDIVIDUALS: n=200, avg_genome_length=188.695 | VIRUSES: gene_rate=0.009
2021-12-24 18:14:01.266878 | GENERATION: 7 | ERRORS: best=1566.0, median=3493.0, diversity=0.5 | INDIVIDUALS: n=200, avg_genome_length=190.44 | VIRUSES: gene_rate=0.010
2021-12-24 18:14:14.281375 | GENERATION: 8 | ERRORS: best=1584.0, median=4415.0, diversity=0.445 | INDIVIDUALS: n=200, avg_genome_length=188.555 | VIRUSES: gene_rate=0.013
2021-12-24 18:14:25.536285 | GENERATION: 9 | ERRORS: best=1628.0, median=2315.0, diversity=0.42 | INDIVIDUALS: n=200, avg_genome_length=192.23 | VIRUSES: gene_rate=0.013
2021-12-24 18:14:36.384537 | GENERATION: 10 | ERRORS: best=1579.0, median=2315.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=186.8 | VIRUSES: gene_rate=0.015
2021-12-24 18:14:47.295584 | GENERATION: 11 | ERRORS: best=1446.0, median=2315.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=181.92 | VIRUSES: gene_rate=0.017
2021-12-24 18:15:00.203771 | GENERATION: 12 | ERRORS: best=1446.0, median=3432.0, diversity=0.52 | INDIVIDUALS: n=200, avg_genome_length=170.13 | VIRUSES: gene_rate=0.020
2021-12-24 18:15:12.023200 | GENERATION: 13 | ERRORS: best=1408.0, median=5994.0, diversity=0.55 | INDIVIDUALS: n=200, avg_genome_length=170.815 | VIRUSES: gene_rate=0.021
2021-12-24 18:15:24.236787 | GENERATION: 14 | ERRORS: best=1645.0, median=4651.5, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=167.06 | VIRUSES: gene_rate=0.023
2021-12-24 18:15:36.674915 | GENERATION: 15 | ERRORS: best=1472.0, median=3120.0, diversity=0.535 | INDIVIDUALS: n=200, avg_genome_length=160.4 | VIRUSES: gene_rate=0.023
2021-12-24 18:15:53.330788 | GENERATION: 16 | ERRORS: best=1362.0, median=3573.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=158.845 | VIRUSES: gene_rate=0.025
2021-12-24 18:16:11.921366 | GENERATION: 17 | ERRORS: best=1323.0, median=5047.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=151.54 | VIRUSES: gene_rate=0.024
2021-12-24 18:16:30.180144 | GENERATION: 18 | ERRORS: best=1320.0, median=5513.0, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=145.25 | VIRUSES: gene_rate=0.030
2021-12-24 18:16:49.287854 | GENERATION: 19 | ERRORS: best=1000.0, median=2817.0, diversity=0.71 | INDIVIDUALS: n=200, avg_genome_length=149.515 | VIRUSES: gene_rate=0.030
Simplifying genome of length 180 with total error 0.0.
Simplified genome by 3 to length 177.
Simplified genome by 3 to length 174.
Simplified genome by 3 to length 171.
Simplified genome by 2 to length 169.
Simplified genome by 3 to length 166.
Simplified genome by 2 to length 164.
Simplified genome by 3 to length 161.
Simplified genome by 2 to length 159.
Simplified genome by 1 to length 158.
Simplified genome by 1 to length 157.
Simplified genome by 3 to length 154.
Simplified genome by 1 to length 153.
Simplified genome by 3 to length 150.
Simplified genome by 3 to length 147.
Simplified genome by 3 to length 144.
Simplified genome by 1 to length 143.
Simplified genome by 1 to length 142.
Simplified genome by 2 to length 140.
Simplified genome by 1 to length 139.
Simplified genome by 1 to length 138.
Simplified genome by 3 to length 135.
Simplified genome by 3 to length 132.
Simplified genome by 1 to length 131.
Simplified genome by 1 to length 130.
Simplified genome by 2 to length 128.
Simplified genome by 2 to length 126.
Simplified genome by 1 to length 125.
Simplified genome by 1 to length 124.
Simplified genome by 1 to length 123.
Simplified genome by 1 to length 122.
Simplified genome by 1 to length 121.
Simplified genome by 3 to length 118.
Simplified genome by 1 to length 117.
Simplified genome by 1 to length 116.
Simplified genome by 3 to length 113.
Simplified genome by 1 to length 112.
Simplified genome by 2 to length 110.
Simplified genome by 2 to length 108.
Simplified genome by 3 to length 105.
Simplified genome by 1 to length 104.
Simplified genome by 1 to length 103.
Simplified genome by 3 to length 100.
Simplified genome by 2 to length 98.
Simplified genome by 1 to length 97.
Simplified genome by 2 to length 95.
Simplified genome by 1 to length 94.
Simplified genome by 1 to length 93.
Simplified genome by 1 to length 92.
Simplified genome by 1 to length 91.
Simplified genome by 1 to length 90.
Simplified genome by 1 to length 89.
Simplified genome by 2 to length 87.
Simplified genome by 3 to length 84.
Simplified genome by 3 to length 81.
Simplified genome by 1 to length 80.
Simplified genome by 2 to length 78.
Simplified genome by 1 to length 77.
Simplified genome by 2 to length 75.
Simplified genome by 3 to length 72.
Simplified genome by 1 to length 71.
Simplified genome by 1 to length 70.
Simplified genome by 1 to length 69.
Simplified genome by 2 to length 67.
Simplified genome by 3 to length 64.
Simplified genome by 1 to length 63.
Simplified genome by 1 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 1 to length 60.
Simplified genome by 1 to length 59.
Simplified genome by 1 to length 58.
Simplified genome by 2 to length 56.
Simplified genome by 3 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 2 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 1 to length 46.
Simplified genome by 3 to length 43.
Simplified genome by 3 to length 40.
Simplified genome by 2 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 3 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 2 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 3 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 1 to length 11.
Simplified genome by 1 to length 10.
Simplified genome by 1 to length 9.
Simplified genome by 1 to length 8.
Simplified genome by 1 to length 7.
Simplified genome by 1 to length 6.
Simplified genome to length 6 and total error 0.0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7ff1bb17a640>), InstructionMeta(name='vector_int_iterate', code_blocks=1), VirusLiteral(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7ff1bb17a3a0>), VirusInstructionMeta(name='int_mod', code_blocks=0), InstructionMeta(name='int_add', code_blocks=0)])
	Program:
	 (input_0 0 vector_int_iterate (v2 vint_mod int_add))
	Error vector:
	 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0.]
	Total error:
	 0.0
	Test error:
	 0.0
	Time:
	 00:07:51
