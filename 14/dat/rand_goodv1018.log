Included 32 edge cases.
Included 168 random cases.
Included 200 cases in total.
Finished formatting.
Included 0 edge cases.
Included 2000 random cases.
Included 2000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['int'], arity=1, push_config=PushConfig(collection_size_cap=1000, numeric_magnitude_limit=1000000000000.0, growth_cap=500, runtime_limit=10, step_limit=1500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fca13244070>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fca52348460>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (50, 250)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fca132441c0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fca141ad980>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fca141ad200>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, vector_int_concat, vector_int_conj, vector_int_take, vector_int_subvec, vector_int_first, vector_int_last, vector_int_nth, vector_int_rest, vector_int_but_last, vector_int_length, vector_int_reverse, vector_int_push_all, vector_int_empty_vector, vector_int_contains, vector_int_index_of, vector_int_occurrences_of, vector_int_set_nth, vector_int_replace, vector_int_replace_first, vector_int_remove, vector_int_iterate, print_bool, println_bool, print_int, println_int, print_vector_int, println_vector_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, vector_int_pop, vector_int_dup, vector_int_dup_times, vector_int_swap, vector_int_rot, vector_int_flush, vector_int_eq, vector_int_stack_depth, vector_int_yank, vector_int_yank_dup, vector_int_shove, vector_int_shove_dup, vector_int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7fca52403730>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7fca52403730>), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7fca52403730>)]
ERC Generators:
[<function rand_int at 0x7fca1450eee0>]
========================================
Start Run
========================================
2021-12-23 22:41:49.974345 | GENERATION: 1 | ERRORS: best=1808.0, median=100097727.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=167.66 | VIRUSES: gene_rate=0.000
2021-12-23 22:41:58.770283 | GENERATION: 2 | ERRORS: best=1778.0, median=1942.0, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=177.66 | VIRUSES: gene_rate=0.005
2021-12-23 22:42:11.878950 | GENERATION: 3 | ERRORS: best=1778.0, median=2315.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=174.41 | VIRUSES: gene_rate=0.012
2021-12-23 22:42:23.896357 | GENERATION: 4 | ERRORS: best=1518.0, median=2400.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=180.235 | VIRUSES: gene_rate=0.013
2021-12-23 22:42:39.505719 | GENERATION: 5 | ERRORS: best=1329.0, median=5147.0, diversity=0.51 | INDIVIDUALS: n=200, avg_genome_length=179.335 | VIRUSES: gene_rate=0.016
2021-12-23 22:42:53.794627 | GENERATION: 6 | ERRORS: best=1497.0, median=6088.0, diversity=0.55 | INDIVIDUALS: n=200, avg_genome_length=179.715 | VIRUSES: gene_rate=0.019
2021-12-23 22:43:08.736463 | GENERATION: 7 | ERRORS: best=1248.0, median=43947.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=182.565 | VIRUSES: gene_rate=0.022
2021-12-23 22:43:23.513060 | GENERATION: 8 | ERRORS: best=1248.0, median=1001664.5, diversity=0.54 | INDIVIDUALS: n=200, avg_genome_length=175.735 | VIRUSES: gene_rate=0.025
2021-12-23 22:43:36.828243 | GENERATION: 9 | ERRORS: best=1248.0, median=5982.0, diversity=0.48 | INDIVIDUALS: n=200, avg_genome_length=172.645 | VIRUSES: gene_rate=0.028
2021-12-23 22:43:53.576124 | GENERATION: 10 | ERRORS: best=1248.0, median=9338.0, diversity=0.56 | INDIVIDUALS: n=200, avg_genome_length=175.02 | VIRUSES: gene_rate=0.033
2021-12-23 22:44:09.746903 | GENERATION: 11 | ERRORS: best=1248.0, median=8803.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=172.915 | VIRUSES: gene_rate=0.035
2021-12-23 22:44:25.874067 | GENERATION: 12 | ERRORS: best=1566.0, median=3654.0, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=173.445 | VIRUSES: gene_rate=0.039
2021-12-23 22:44:45.586954 | GENERATION: 13 | ERRORS: best=1265.0, median=1001994.0, diversity=0.69 | INDIVIDUALS: n=200, avg_genome_length=173.04 | VIRUSES: gene_rate=0.041
2021-12-23 22:45:01.919660 | GENERATION: 14 | ERRORS: best=1630.0, median=1001870.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=171.705 | VIRUSES: gene_rate=0.044
2021-12-23 22:45:16.666833 | GENERATION: 15 | ERRORS: best=1527.0, median=1001958.0, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=171.925 | VIRUSES: gene_rate=0.046
Simplifying genome of length 160 with total error 0.0.
Simplified genome by 1 to length 159.
Simplified genome by 1 to length 158.
Simplified genome by 3 to length 155.
Simplified genome by 1 to length 154.
Simplified genome by 1 to length 153.
Simplified genome by 3 to length 150.
Simplified genome by 3 to length 147.
Simplified genome by 3 to length 144.
Simplified genome by 3 to length 141.
Simplified genome by 2 to length 139.
Simplified genome by 2 to length 137.
Simplified genome by 1 to length 136.
Simplified genome by 3 to length 133.
Simplified genome by 1 to length 132.
Simplified genome by 3 to length 129.
Simplified genome by 2 to length 127.
Simplified genome by 2 to length 125.
Simplified genome by 2 to length 123.
Simplified genome by 2 to length 121.
Simplified genome by 1 to length 120.
Simplified genome by 3 to length 117.
Simplified genome by 2 to length 115.
Simplified genome by 1 to length 114.
Simplified genome by 3 to length 111.
Simplified genome by 3 to length 108.
Simplified genome by 2 to length 106.
Simplified genome by 1 to length 105.
Simplified genome by 2 to length 103.
Simplified genome by 1 to length 102.
Simplified genome by 3 to length 99.
Simplified genome by 2 to length 97.
Simplified genome by 3 to length 94.
Simplified genome by 3 to length 91.
Simplified genome by 1 to length 90.
Simplified genome by 1 to length 89.
Simplified genome by 1 to length 88.
Simplified genome by 1 to length 87.
Simplified genome by 1 to length 86.
Simplified genome by 1 to length 85.
Simplified genome by 1 to length 84.
Simplified genome by 3 to length 81.
Simplified genome by 1 to length 80.
Simplified genome by 1 to length 79.
Simplified genome by 1 to length 78.
Simplified genome by 2 to length 76.
Simplified genome by 2 to length 74.
Simplified genome by 1 to length 73.
Simplified genome by 3 to length 70.
Simplified genome by 1 to length 69.
Simplified genome by 3 to length 66.
Simplified genome by 2 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 3 to length 59.
Simplified genome by 1 to length 58.
Simplified genome by 3 to length 55.
Simplified genome by 3 to length 52.
Simplified genome by 1 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 1 to length 49.
Simplified genome by 1 to length 48.
Simplified genome by 2 to length 46.
Simplified genome by 3 to length 43.
Simplified genome by 3 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 2 to length 33.
Simplified genome by 3 to length 30.
Simplified genome by 2 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 2 to length 22.
Simplified genome by 3 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 2 to length 13.
Simplified genome by 2 to length 11.
Simplified genome by 1 to length 10.
Simplified genome by 1 to length 9.
Simplified genome by 1 to length 8.
Simplified genome by 1 to length 7.
Simplified genome by 1 to length 6.
Simplified genome to length 6 and total error 0.0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7fca142a5340>), VirusInput(input_index=0), VirusInstructionMeta(name='vector_int_iterate', code_blocks=1), VirusLiteral(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7fca142bfd60>), VirusInstructionMeta(name='int_mod', code_blocks=0), InstructionMeta(name='int_add', code_blocks=0)])
	Program:
	 (0 vinput_0 vvector_int_iterate (v2 vint_mod int_add))
	Error vector:
	 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0.]
	Total error:
	 0.0
	Test error:
	 0.0
	Time:
	 00:06:55
