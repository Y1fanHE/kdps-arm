Included 32 edge cases.
Included 168 random cases.
Included 200 cases in total.
Finished formatting.
Included 0 edge cases.
Included 2000 random cases.
Included 2000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, growth_cap=500, runtime_limit=10, step_limit=1500), output_stacks=['int'], arity=1)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f498dc34340>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f49ccc4ff70>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (50, 250)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f49ccc61af0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f498e370240>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f498e3709c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, vector_int_concat, vector_int_conj, vector_int_take, vector_int_subvec, vector_int_first, vector_int_last, vector_int_nth, vector_int_rest, vector_int_but_last, vector_int_length, vector_int_reverse, vector_int_push_all, vector_int_empty_vector, vector_int_contains, vector_int_index_of, vector_int_occurrences_of, vector_int_set_nth, vector_int_replace, vector_int_replace_first, vector_int_remove, vector_int_iterate, print_bool, println_bool, print_int, println_int, print_vector_int, println_vector_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, vector_int_pop, vector_int_dup, vector_int_dup_times, vector_int_swap, vector_int_rot, vector_int_flush, vector_int_eq, vector_int_stack_depth, vector_int_yank, vector_int_yank_dup, vector_int_shove, vector_int_shove_dup, vector_int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7f49ccd9d550>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7f49ccd9d550>), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7f49ccd9d550>)]
ERC Generators:
[<function rand_int at 0x7f498ee731f0>]
========================================
Start Run
========================================
2021-12-11 17:59:28.325574 | GENERATION: 1 | ERRORS: best=1833.0, median=98000968.0, diversity=0.045 | INDIVIDUALS: n=200, avg_genome_length=150.925
2021-12-11 17:59:38.229804 | GENERATION: 2 | ERRORS: best=1833.0, median=2093.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=126.675
2021-12-11 17:59:54.275826 | GENERATION: 3 | ERRORS: best=1833.0, median=2093.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=126.205
2021-12-11 18:00:06.470778 | GENERATION: 4 | ERRORS: best=1833.0, median=3968.0, diversity=0.41 | INDIVIDUALS: n=200, avg_genome_length=114.75
2021-12-11 18:00:21.136333 | GENERATION: 5 | ERRORS: best=1833.0, median=3439.0, diversity=0.475 | INDIVIDUALS: n=200, avg_genome_length=135.49
2021-12-11 18:00:39.237681 | GENERATION: 6 | ERRORS: best=1714.0, median=32129.0, diversity=0.64 | INDIVIDUALS: n=200, avg_genome_length=133.155
2021-12-11 18:00:54.471767 | GENERATION: 7 | ERRORS: best=1233.0, median=12914.5, diversity=0.625 | INDIVIDUALS: n=200, avg_genome_length=119.99
2021-12-11 18:01:11.824023 | GENERATION: 8 | ERRORS: best=1257.0, median=10368.0, diversity=0.675 | INDIVIDUALS: n=200, avg_genome_length=112.125
2021-12-11 18:01:27.912552 | GENERATION: 9 | ERRORS: best=1257.0, median=7413.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=109.105
2021-12-11 18:01:45.475678 | GENERATION: 10 | ERRORS: best=1200.0, median=4875.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=109.21
2021-12-11 18:02:02.033715 | GENERATION: 11 | ERRORS: best=1200.0, median=8959.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=114.47
2021-12-11 18:02:15.828791 | GENERATION: 12 | ERRORS: best=1200.0, median=10753.5, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=123.125
2021-12-11 18:02:30.463352 | GENERATION: 13 | ERRORS: best=1200.0, median=2255.0, diversity=0.755 | INDIVIDUALS: n=200, avg_genome_length=121.61
2021-12-11 18:02:42.856548 | GENERATION: 14 | ERRORS: best=1206.0, median=2213.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=122.05
2021-12-11 18:02:57.646788 | GENERATION: 15 | ERRORS: best=1225.0, median=2093.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=126.105
2021-12-11 18:03:12.911357 | GENERATION: 16 | ERRORS: best=1201.0, median=3034.0, diversity=0.76 | INDIVIDUALS: n=200, avg_genome_length=120.935
2021-12-11 18:03:27.683229 | GENERATION: 17 | ERRORS: best=1196.0, median=8007.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=125.33
2021-12-11 18:03:40.886090 | GENERATION: 18 | ERRORS: best=1196.0, median=3430.0, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=118.73
2021-12-11 18:03:54.565908 | GENERATION: 19 | ERRORS: best=1207.0, median=2135.0, diversity=0.695 | INDIVIDUALS: n=200, avg_genome_length=125.61
2021-12-11 18:04:08.026392 | GENERATION: 20 | ERRORS: best=1173.0, median=2093.0, diversity=0.645 | INDIVIDUALS: n=200, avg_genome_length=124.175
2021-12-11 18:04:20.979248 | GENERATION: 21 | ERRORS: best=1212.0, median=2093.0, diversity=0.67 | INDIVIDUALS: n=200, avg_genome_length=113.925
2021-12-11 18:04:34.791292 | GENERATION: 22 | ERRORS: best=1210.0, median=2444.5, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=109.775
2021-12-11 18:04:49.558260 | GENERATION: 23 | ERRORS: best=1146.0, median=6282.5, diversity=0.745 | INDIVIDUALS: n=200, avg_genome_length=109.885
2021-12-11 18:05:03.793837 | GENERATION: 24 | ERRORS: best=785.0, median=2093.0, diversity=0.685 | INDIVIDUALS: n=200, avg_genome_length=104.95
2021-12-11 18:05:19.633725 | GENERATION: 25 | ERRORS: best=785.0, median=2207.0, diversity=0.725 | INDIVIDUALS: n=200, avg_genome_length=94.065
2021-12-11 18:05:35.592591 | GENERATION: 26 | ERRORS: best=934.0, median=2093.0, diversity=0.77 | INDIVIDUALS: n=200, avg_genome_length=96.015
2021-12-11 18:05:53.095662 | GENERATION: 27 | ERRORS: best=902.0, median=2093.0, diversity=0.835 | INDIVIDUALS: n=200, avg_genome_length=86.245
2021-12-11 18:06:08.511860 | GENERATION: 28 | ERRORS: best=938.0, median=2093.0, diversity=0.855 | INDIVIDUALS: n=200, avg_genome_length=88.345
2021-12-11 18:06:25.685793 | GENERATION: 29 | ERRORS: best=884.0, median=3074.5, diversity=0.805 | INDIVIDUALS: n=200, avg_genome_length=91.31
2021-12-11 18:06:42.610042 | GENERATION: 30 | ERRORS: best=887.0, median=2093.5, diversity=0.815 | INDIVIDUALS: n=200, avg_genome_length=89.24
2021-12-11 18:07:00.556549 | GENERATION: 31 | ERRORS: best=863.0, median=2319.5, diversity=0.815 | INDIVIDUALS: n=200, avg_genome_length=83.06
2021-12-11 18:07:18.829909 | GENERATION: 32 | ERRORS: best=890.0, median=2093.0, diversity=0.815 | INDIVIDUALS: n=200, avg_genome_length=80.965
2021-12-11 18:07:34.059100 | GENERATION: 33 | ERRORS: best=853.0, median=2218.0, diversity=0.81 | INDIVIDUALS: n=200, avg_genome_length=78.945
Simplifying genome of length 90 with total error 0.0.
Simplified genome by 2 to length 88.
Simplified genome by 1 to length 87.
Simplified genome by 2 to length 85.
Simplified genome by 2 to length 83.
Simplified genome by 1 to length 82.
Simplified genome by 2 to length 80.
Simplified genome by 2 to length 78.
Simplified genome by 1 to length 77.
Simplified genome by 2 to length 75.
Simplified genome by 3 to length 72.
Simplified genome by 1 to length 71.
Simplified genome by 2 to length 69.
Simplified genome by 2 to length 67.
Simplified genome by 2 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 1 to length 61.
Simplified genome by 3 to length 58.
Simplified genome by 1 to length 57.
Simplified genome by 1 to length 56.
Simplified genome by 1 to length 55.
Simplified genome by 1 to length 54.
Simplified genome by 1 to length 53.
Simplified genome by 1 to length 52.
Simplified genome by 2 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 1 to length 47.
Simplified genome by 3 to length 44.
Simplified genome by 2 to length 42.
Simplified genome by 1 to length 41.
Simplified genome by 2 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 1 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 2 to length 30.
Simplified genome by 3 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome to length 14 and total error 0.0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7f498d8416a0>), Input(input_index=0), InstructionMeta(name='vector_int_iterate', code_blocks=1), InstructionMeta(name='int_inc', code_blocks=0), Literal(value=83, push_type=<pyshgp.push.types.PushIntType object at 0x7f498d841760>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7f498d8411f0>), InstructionMeta(name='int_gt', code_blocks=0), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7f498d841b50>), InstructionMeta(name='int_mod', code_blocks=0), InstructionMeta(name='int_mod', code_blocks=0), Closer(), InstructionMeta(name='bool_stack_depth', code_blocks=0), InstructionMeta(name='int_lte', code_blocks=0), InstructionMeta(name='int_stack_depth', code_blocks=0)])
	Program:
	 (1 input_0 vector_int_iterate (int_inc 83 1 int_gt 2 int_mod int_mod) bool_stack_depth int_lte int_stack_depth)
	Error vector:
	 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0.]
	Total error:
	 0.0
	Test error:
	 0.0
	Time:
	 00:13:45
