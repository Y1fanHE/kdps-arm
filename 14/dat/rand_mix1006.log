Included 32 edge cases.
Included 168 random cases.
Included 200 cases in total.
Finished formatting.
Included 0 edge cases.
Included 2000 random cases.
Included 2000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['int'], arity=1, push_config=PushConfig(runtime_limit=10, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, growth_cap=500, step_limit=1500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f82ed506970>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f832c017eb0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (50, 250)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f82ed5063a0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f832c169a00>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f82ec2e5d40>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, vector_int_concat, vector_int_conj, vector_int_take, vector_int_subvec, vector_int_first, vector_int_last, vector_int_nth, vector_int_rest, vector_int_but_last, vector_int_length, vector_int_reverse, vector_int_push_all, vector_int_empty_vector, vector_int_contains, vector_int_index_of, vector_int_occurrences_of, vector_int_set_nth, vector_int_replace, vector_int_replace_first, vector_int_remove, vector_int_iterate, print_bool, println_bool, print_int, println_int, print_vector_int, println_vector_int, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, vector_int_pop, vector_int_dup, vector_int_dup_times, vector_int_swap, vector_int_rot, vector_int_flush, vector_int_eq, vector_int_stack_depth, vector_int_yank, vector_int_yank_dup, vector_int_shove, vector_int_shove_dup, vector_int_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7f832c165550>), Literal(value=1, push_type=<pyshgp.push.types.PushIntType object at 0x7f832c165550>), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7f832c165550>)]
ERC Generators:
[<function rand_int at 0x7f82ee27b3a0>]
========================================
Start Run
========================================
2021-12-11 04:33:20.540029 | GENERATION: 1 | ERRORS: best=2081.0, median=28526161.5, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=161.525
2021-12-11 04:33:30.301512 | GENERATION: 2 | ERRORS: best=1911.0, median=2359.0, diversity=0.355 | INDIVIDUALS: n=200, avg_genome_length=139.81
2021-12-11 04:33:37.879126 | GENERATION: 3 | ERRORS: best=1905.0, median=2211.0, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=93.98
2021-12-11 04:33:52.665697 | GENERATION: 4 | ERRORS: best=1911.0, median=2359.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=104.675
2021-12-11 04:34:02.183978 | GENERATION: 5 | ERRORS: best=1905.0, median=2399.0, diversity=0.43 | INDIVIDUALS: n=200, avg_genome_length=106.675
2021-12-11 04:34:12.868841 | GENERATION: 6 | ERRORS: best=1905.0, median=8304.5, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=124.65
2021-12-11 04:34:24.788979 | GENERATION: 7 | ERRORS: best=1789.0, median=3889.0, diversity=0.565 | INDIVIDUALS: n=200, avg_genome_length=119.21
2021-12-11 04:34:34.567793 | GENERATION: 8 | ERRORS: best=1846.0, median=2931.0, diversity=0.585 | INDIVIDUALS: n=200, avg_genome_length=119.485
2021-12-11 04:34:45.322896 | GENERATION: 9 | ERRORS: best=1798.0, median=2516.0, diversity=0.595 | INDIVIDUALS: n=200, avg_genome_length=105.68
2021-12-11 04:34:58.641610 | GENERATION: 10 | ERRORS: best=1825.0, median=3124.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=94.415
2021-12-11 04:35:08.283279 | GENERATION: 11 | ERRORS: best=1866.0, median=135211.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=91.27
2021-12-11 04:35:18.251299 | GENERATION: 12 | ERRORS: best=1780.0, median=3124.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=75.655
2021-12-11 04:35:26.521275 | GENERATION: 13 | ERRORS: best=1617.0, median=2740.0, diversity=0.68 | INDIVIDUALS: n=200, avg_genome_length=66.225
2021-12-11 04:35:34.440844 | GENERATION: 14 | ERRORS: best=1371.0, median=3060.0, diversity=0.7 | INDIVIDUALS: n=200, avg_genome_length=69.74
2021-12-11 04:35:41.973530 | GENERATION: 15 | ERRORS: best=1371.0, median=4738.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=62.415
2021-12-11 04:35:50.060963 | GENERATION: 16 | ERRORS: best=1371.0, median=2445.0, diversity=0.66 | INDIVIDUALS: n=200, avg_genome_length=60.625
2021-12-11 04:35:57.586937 | GENERATION: 17 | ERRORS: best=1371.0, median=2933.0, diversity=0.655 | INDIVIDUALS: n=200, avg_genome_length=59.55
2021-12-11 04:36:05.886528 | GENERATION: 18 | ERRORS: best=1421.0, median=2749.0, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=60.045
2021-12-11 04:36:14.301329 | GENERATION: 19 | ERRORS: best=1657.0, median=2489.0, diversity=0.665 | INDIVIDUALS: n=200, avg_genome_length=55.84
2021-12-11 04:36:21.707438 | GENERATION: 20 | ERRORS: best=1673.0, median=2638.0, diversity=0.62 | INDIVIDUALS: n=200, avg_genome_length=56.19
2021-12-11 04:36:36.426033 | GENERATION: 21 | ERRORS: best=1489.0, median=2251.0, diversity=0.58 | INDIVIDUALS: n=200, avg_genome_length=56.44
2021-12-11 04:36:44.566687 | GENERATION: 22 | ERRORS: best=1583.0, median=2399.0, diversity=0.65 | INDIVIDUALS: n=200, avg_genome_length=52.695
2021-12-11 04:36:50.744251 | GENERATION: 23 | ERRORS: best=1626.0, median=2228.5, diversity=0.605 | INDIVIDUALS: n=200, avg_genome_length=50.24
2021-12-11 04:37:09.541785 | GENERATION: 24 | ERRORS: best=1369.0, median=2211.0, diversity=0.63 | INDIVIDUALS: n=200, avg_genome_length=52.95
2021-12-11 04:37:28.439303 | GENERATION: 25 | ERRORS: best=1404.0, median=2319.0, diversity=0.615 | INDIVIDUALS: n=200, avg_genome_length=51.245
2021-12-11 04:37:35.126148 | GENERATION: 26 | ERRORS: best=2.0, median=1000000.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=35.845
2021-12-11 04:37:48.613535 | GENERATION: 27 | ERRORS: best=1.0, median=33174.0, diversity=0.515 | INDIVIDUALS: n=200, avg_genome_length=32.455
2021-12-11 04:37:58.257558 | GENERATION: 28 | ERRORS: best=1.0, median=2211.0, diversity=0.425 | INDIVIDUALS: n=200, avg_genome_length=31.5
2021-12-11 04:38:08.083693 | GENERATION: 29 | ERRORS: best=1.0, median=2211.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=30.255
2021-12-11 04:38:27.121958 | GENERATION: 30 | ERRORS: best=1.0, median=2212.0, diversity=0.435 | INDIVIDUALS: n=200, avg_genome_length=29.0
Simplifying genome of length 29 with total error 0.0.
Simplified genome by 1 to length 28.
Simplified genome by 2 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 2 to length 14.
Simplified genome by 1 to length 13.
Simplified genome by 1 to length 12.
Simplified genome by 2 to length 10.
Simplified genome by 1 to length 9.
Simplified genome by 1 to length 8.
Simplified genome to length 8 and total error 0.0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), InstructionMeta(name='vector_int_iterate', code_blocks=1), Literal(value=2, push_type=<pyshgp.push.types.PushIntType object at 0x7f82ec5fd430>), InstructionMeta(name='int_mod', code_blocks=0), InstructionMeta(name='int_add', code_blocks=0), Closer(), Literal(value=0, push_type=<pyshgp.push.types.PushIntType object at 0x7f82ec5fddf0>), InstructionMeta(name='int_yank', code_blocks=0)])
	Program:
	 (input_0 vector_int_iterate (2 int_mod int_add) 0 int_yank)
	Error vector:
	 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0.]
	Total error:
	 0.0
	Test error:
	 0.0
	Time:
	 00:08:10
