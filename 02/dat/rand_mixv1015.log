Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(collection_size_cap=1000, step_limit=300, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, growth_cap=500), arity=1, output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f7535702f70>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f7535702880>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f75333af070>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f7533492bc0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f753584acc0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f7535849c10>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f7535849c10>)]
ERC Generators:
[<function rand_int at 0x7f7533406670>]
========================================
Start Run
========================================
2021-12-22 21:15:26.553829 | GENERATION: 1 | ERRORS: best=395, median=395.0, diversity=0.025 | INDIVIDUALS: n=200, avg_genome_length=63.005 | VIRUSES: gene_rate=0.000
2021-12-22 21:15:28.216415 | GENERATION: 2 | ERRORS: best=250, median=395.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=61.33 | VIRUSES: gene_rate=0.011
2021-12-22 21:15:29.850488 | GENERATION: 3 | ERRORS: best=250, median=395.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=56.585 | VIRUSES: gene_rate=0.029
2021-12-22 21:15:31.286382 | GENERATION: 4 | ERRORS: best=250, median=395.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=54.175 | VIRUSES: gene_rate=0.032
2021-12-22 21:15:32.860726 | GENERATION: 5 | ERRORS: best=195, median=395.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=53.215 | VIRUSES: gene_rate=0.041
2021-12-22 21:15:35.305172 | GENERATION: 6 | ERRORS: best=185, median=395.0, diversity=0.28 | INDIVIDUALS: n=200, avg_genome_length=68.45 | VIRUSES: gene_rate=0.035
2021-12-22 21:15:37.787444 | GENERATION: 7 | ERRORS: best=185, median=395.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=71.035 | VIRUSES: gene_rate=0.037
2021-12-22 21:15:40.201461 | GENERATION: 8 | ERRORS: best=185, median=395.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=73.775 | VIRUSES: gene_rate=0.039
2021-12-22 21:15:42.627616 | GENERATION: 9 | ERRORS: best=185, median=395.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=70.16 | VIRUSES: gene_rate=0.047
2021-12-22 21:15:45.918362 | GENERATION: 10 | ERRORS: best=105, median=366.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=64.575 | VIRUSES: gene_rate=0.057
2021-12-22 21:15:48.108001 | GENERATION: 11 | ERRORS: best=105, median=355.0, diversity=0.31 | INDIVIDUALS: n=200, avg_genome_length=68.415 | VIRUSES: gene_rate=0.059
2021-12-22 21:15:50.395742 | GENERATION: 12 | ERRORS: best=105, median=366.0, diversity=0.325 | INDIVIDUALS: n=200, avg_genome_length=70.34 | VIRUSES: gene_rate=0.077
2021-12-22 21:15:52.851695 | GENERATION: 13 | ERRORS: best=105, median=395.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=71.525 | VIRUSES: gene_rate=0.076
2021-12-22 21:15:55.379508 | GENERATION: 14 | ERRORS: best=105, median=395.0, diversity=0.39 | INDIVIDUALS: n=200, avg_genome_length=68.87 | VIRUSES: gene_rate=0.098
2021-12-22 21:15:57.834645 | GENERATION: 15 | ERRORS: best=105, median=395.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=66.515 | VIRUSES: gene_rate=0.096
2021-12-22 21:16:00.086681 | GENERATION: 16 | ERRORS: best=105, median=395.0, diversity=0.38 | INDIVIDUALS: n=200, avg_genome_length=66.7 | VIRUSES: gene_rate=0.108
Simplifying genome of length 66 with total error 0.
Simplified genome by 1 to length 65.
Simplified genome by 1 to length 64.
Simplified genome by 2 to length 62.
Simplified genome by 3 to length 59.
Simplified genome by 2 to length 57.
Simplified genome by 3 to length 54.
Simplified genome by 3 to length 51.
Simplified genome by 1 to length 50.
Simplified genome by 2 to length 48.
Simplified genome by 2 to length 46.
Simplified genome by 1 to length 45.
Simplified genome by 2 to length 43.
Simplified genome by 3 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 2 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 3 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 3 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome to length 14 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([VirusInput(input_index=0), VirusLiteral(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f7533157310>), VirusInstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_when', code_blocks=1), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f7533157d30>), Closer(), VirusInput(input_index=0), VirusLiteral(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f7533157af0>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), VirusLiteral(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f75331578b0>), Closer(), Closer(), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (vinput_0 v1000 vint_lt exec_when ("small") vinput_0 v2000 int_gte exec_if (v"large") () print_str)
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:53
