Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=1, output_stacks=['stdout'], push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000, step_limit=300, growth_cap=500, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f56b3a1f1f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f56b3a1f160>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f56b3a1f820>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f56b5cee7c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f56b3a4ccc0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f56b5dda790>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f56b5dda790>)]
ERC Generators:
[<function rand_int at 0x7f56b5c92f70>]
========================================
Start Run
========================================
2021-12-07 14:37:00.725386 | GENERATION: 1 | ERRORS: best=430, median=2478.0, diversity=0.03 | INDIVIDUALS: n=200, avg_genome_length=71.825
2021-12-07 14:37:03.386907 | GENERATION: 2 | ERRORS: best=260, median=462.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=86.74
2021-12-07 14:37:05.238292 | GENERATION: 3 | ERRORS: best=260, median=426.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=60.575
2021-12-07 14:37:06.957282 | GENERATION: 4 | ERRORS: best=260, median=430.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=56.265
2021-12-07 14:37:08.592098 | GENERATION: 5 | ERRORS: best=240, median=322.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=53.325
2021-12-07 14:37:10.782100 | GENERATION: 6 | ERRORS: best=238, median=430.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=41.565
2021-12-07 14:37:12.405904 | GENERATION: 7 | ERRORS: best=238, median=430.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=43.53
2021-12-07 14:37:14.018544 | GENERATION: 8 | ERRORS: best=70, median=323.5, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=41.795
2021-12-07 14:37:15.920832 | GENERATION: 9 | ERRORS: best=70, median=430.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=26.985
2021-12-07 14:37:17.654099 | GENERATION: 10 | ERRORS: best=70, median=430.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=24.9
2021-12-07 14:37:19.048853 | GENERATION: 11 | ERRORS: best=70, median=410.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=25.735
2021-12-07 14:37:20.181665 | GENERATION: 12 | ERRORS: best=70, median=430.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=24.415
2021-12-07 14:37:21.409625 | GENERATION: 13 | ERRORS: best=38, median=430.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=23.635
2021-12-07 14:37:22.491169 | GENERATION: 14 | ERRORS: best=38, median=430.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=24.225
Simplifying genome of length 35 with total error 0.
Simplified genome by 2 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 2 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 3 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f56b3a677c0>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f56b3a677f0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f56b3a67940>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_while', code_blocks=1), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f56b3a67a00>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte exec_if ("large" print_str) (input_0 1000 int_lt exec_while ("small" print_str)))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:38
