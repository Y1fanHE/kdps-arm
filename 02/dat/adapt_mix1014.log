Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=1, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000, growth_cap=500, step_limit=300), output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f1be69851f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f1be6985130>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f1be6985820>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f1be6857b80>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f1be6996b00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f1be8d3f790>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f1be8d3f790>)]
ERC Generators:
[<function rand_int at 0x7f1be8bf7f70>]
========================================
Start Run
========================================
2021-12-07 17:21:28.125729 | GENERATION: 1 | ERRORS: best=405, median=4903.0, diversity=0.04 | INDIVIDUALS: n=200, avg_genome_length=55.32
2021-12-07 17:21:29.481040 | GENERATION: 2 | ERRORS: best=230, median=405.0, diversity=0.075 | INDIVIDUALS: n=200, avg_genome_length=40.795
2021-12-07 17:21:30.427036 | GENERATION: 3 | ERRORS: best=230, median=365.0, diversity=0.085 | INDIVIDUALS: n=200, avg_genome_length=40.625
2021-12-07 17:21:31.328338 | GENERATION: 4 | ERRORS: best=230, median=365.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=39.38
2021-12-07 17:21:32.259897 | GENERATION: 5 | ERRORS: best=230, median=365.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=38.205
2021-12-07 17:21:33.363692 | GENERATION: 6 | ERRORS: best=230, median=365.0, diversity=0.07 | INDIVIDUALS: n=200, avg_genome_length=36.62
2021-12-07 17:21:34.206855 | GENERATION: 7 | ERRORS: best=230, median=365.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=35.35
2021-12-07 17:21:35.044702 | GENERATION: 8 | ERRORS: best=230, median=270.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=34.48
2021-12-07 17:21:35.863918 | GENERATION: 9 | ERRORS: best=230, median=270.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=33.43
2021-12-07 17:21:36.680353 | GENERATION: 10 | ERRORS: best=230, median=385.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=32.625
2021-12-07 17:21:37.610205 | GENERATION: 11 | ERRORS: best=230, median=405.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=32.055
2021-12-07 17:21:38.677676 | GENERATION: 12 | ERRORS: best=230, median=270.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=31.875
2021-12-07 17:21:39.618523 | GENERATION: 13 | ERRORS: best=230, median=365.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=30.965
2021-12-07 17:21:40.389691 | GENERATION: 14 | ERRORS: best=230, median=365.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=29.33
2021-12-07 17:21:41.181825 | GENERATION: 15 | ERRORS: best=230, median=320.5, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=29.01
2021-12-07 17:21:41.938372 | GENERATION: 16 | ERRORS: best=230, median=270.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=28.225
2021-12-07 17:21:42.637342 | GENERATION: 17 | ERRORS: best=230, median=270.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=27.63
2021-12-07 17:21:43.371158 | GENERATION: 18 | ERRORS: best=230, median=365.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=27.81
2021-12-07 17:21:44.337745 | GENERATION: 19 | ERRORS: best=230, median=365.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=27.22
2021-12-07 17:21:45.292798 | GENERATION: 20 | ERRORS: best=230, median=365.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=27.87
2021-12-07 17:21:46.160756 | GENERATION: 21 | ERRORS: best=230, median=270.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=26.865
2021-12-07 17:21:47.013976 | GENERATION: 22 | ERRORS: best=230, median=331.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=26.69
2021-12-07 17:21:47.836526 | GENERATION: 23 | ERRORS: best=230, median=365.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=25.425
2021-12-07 17:21:48.681857 | GENERATION: 24 | ERRORS: best=230, median=365.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=23.58
2021-12-07 17:21:49.654177 | GENERATION: 25 | ERRORS: best=230, median=270.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=24.16
2021-12-07 17:21:50.714056 | GENERATION: 26 | ERRORS: best=95, median=365.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=24.855
2021-12-07 17:21:51.660426 | GENERATION: 27 | ERRORS: best=95, median=405.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=31.995
2021-12-07 17:21:52.628475 | GENERATION: 28 | ERRORS: best=95, median=405.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=31.985
2021-12-07 17:21:53.844617 | GENERATION: 29 | ERRORS: best=95, median=405.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=32.235
2021-12-07 17:21:54.770332 | GENERATION: 30 | ERRORS: best=95, median=405.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=30.855
2021-12-07 17:21:55.763245 | GENERATION: 31 | ERRORS: best=95, median=405.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=30.845
Simplifying genome of length 31 with total error 0.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 2 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 3 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f1be69323a0>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f1be6932ee0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f1be69328e0>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f1be6932e80>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte exec_if ("large" print_str) (input_0 1000 int_lt exec_if ("small" print_str) ()))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:44
