Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(step_limit=300, numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f3c4984a400>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f3c4984a670>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f3c4984a7f0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f3c4986a080>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f3c4986ab80>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f3c4bc13760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f3c4bc13760>)]
ERC Generators:
[<function rand_int at 0x7f3c4bacbf70>]
========================================
Start Run
========================================
2021-12-09 17:22:06.661092 | GENERATION: 1 | ERRORS: best=430, median=430.0, diversity=0.03 | INDIVIDUALS: n=200, avg_genome_length=55.825
2021-12-09 17:22:08.194733 | GENERATION: 2 | ERRORS: best=250, median=430.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=48.18
2021-12-09 17:22:10.085719 | GENERATION: 3 | ERRORS: best=245, median=430.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=55.15
2021-12-09 17:22:12.569884 | GENERATION: 4 | ERRORS: best=230, median=320.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=53.92
2021-12-09 17:22:14.835346 | GENERATION: 5 | ERRORS: best=230, median=425.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=52.73
2021-12-09 17:22:17.100066 | GENERATION: 6 | ERRORS: best=230, median=320.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=50.795
2021-12-09 17:22:19.717713 | GENERATION: 7 | ERRORS: best=230, median=320.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=48.68
2021-12-09 17:22:22.344595 | GENERATION: 8 | ERRORS: best=230, median=320.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=43.335
2021-12-09 17:22:24.803576 | GENERATION: 9 | ERRORS: best=230, median=320.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=43.75
2021-12-09 17:22:27.164377 | GENERATION: 10 | ERRORS: best=230, median=320.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=40.8
2021-12-09 17:22:29.735481 | GENERATION: 11 | ERRORS: best=230, median=320.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=41.33
2021-12-09 17:22:32.235901 | GENERATION: 12 | ERRORS: best=230, median=320.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=39.205
2021-12-09 17:22:34.730553 | GENERATION: 13 | ERRORS: best=225, median=320.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=37.045
2021-12-09 17:22:36.710885 | GENERATION: 14 | ERRORS: best=225, median=320.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=29.645
2021-12-09 17:22:38.868104 | GENERATION: 15 | ERRORS: best=70, median=430.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=25.635
2021-12-09 17:22:40.471155 | GENERATION: 16 | ERRORS: best=70, median=430.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=21.48
2021-12-09 17:22:42.048964 | GENERATION: 17 | ERRORS: best=70, median=430.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=21.35
2021-12-09 17:22:43.571316 | GENERATION: 18 | ERRORS: best=70, median=430.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=19.92
2021-12-09 17:22:44.851081 | GENERATION: 19 | ERRORS: best=70, median=430.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=19.62
2021-12-09 17:22:46.120096 | GENERATION: 20 | ERRORS: best=70, median=430.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=19.085
2021-12-09 17:22:47.573614 | GENERATION: 21 | ERRORS: best=70, median=430.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=19.22
2021-12-09 17:22:48.732646 | GENERATION: 22 | ERRORS: best=70, median=430.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=17.9
Simplifying genome of length 21 with total error 0.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f3c494f9190>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f3c494f9940>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f3c494f98e0>), InstructionMeta(name='int_lt', code_blocks=0), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f3c498f2190>), InstructionMeta(name='exec_if', code_blocks=2), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte exec_if ("large" print_str) (input_0 1000 int_lt "small" exec_if (print_str) ()))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:59
