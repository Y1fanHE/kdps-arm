Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, growth_cap=500, step_limit=300, collection_size_cap=1000, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f9d23a77a60>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f9d23a77370>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f9d23a77af0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f9d216ca5c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f9d216ca4c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f9d23bb59a0>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f9d23bb59a0>)]
ERC Generators:
[<function rand_int at 0x7f9d23a83280>]
========================================
Start Run
========================================
2021-12-15 00:04:14.614377 | GENERATION: 1 | ERRORS: best=406, median=435.0, diversity=0.03 | INDIVIDUALS: n=200, avg_genome_length=71.28
2021-12-15 00:04:16.856381 | GENERATION: 2 | ERRORS: best=270, median=435.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=79.355
2021-12-15 00:04:19.392382 | GENERATION: 3 | ERRORS: best=262, median=295.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=86.74
2021-12-15 00:04:22.189092 | GENERATION: 4 | ERRORS: best=260, median=295.0, diversity=0.29 | INDIVIDUALS: n=200, avg_genome_length=81.015
2021-12-15 00:04:25.108222 | GENERATION: 5 | ERRORS: best=260, median=295.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=75.66
2021-12-15 00:04:28.090831 | GENERATION: 6 | ERRORS: best=260, median=406.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=74.6
2021-12-15 00:04:30.823662 | GENERATION: 7 | ERRORS: best=260, median=386.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=72.715
2021-12-15 00:04:33.588836 | GENERATION: 8 | ERRORS: best=260, median=295.0, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=70.855
2021-12-15 00:04:36.157128 | GENERATION: 9 | ERRORS: best=260, median=295.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=70.225
2021-12-15 00:04:39.864655 | GENERATION: 10 | ERRORS: best=260, median=314.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=67.225
2021-12-15 00:04:42.523832 | GENERATION: 11 | ERRORS: best=260, median=295.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=66.775
2021-12-15 00:04:44.982587 | GENERATION: 12 | ERRORS: best=260, median=295.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=62.96
2021-12-15 00:04:47.385308 | GENERATION: 13 | ERRORS: best=260, median=295.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=61.51
2021-12-15 00:04:49.656463 | GENERATION: 14 | ERRORS: best=260, median=295.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=60.17
2021-12-15 00:04:51.775924 | GENERATION: 15 | ERRORS: best=255, median=295.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=55.965
2021-12-15 00:04:53.988635 | GENERATION: 16 | ERRORS: best=255, median=295.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=49.595
2021-12-15 00:04:56.151524 | GENERATION: 17 | ERRORS: best=255, median=295.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=47.52
2021-12-15 00:04:58.226085 | GENERATION: 18 | ERRORS: best=240, median=295.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=46.335
2021-12-15 00:05:00.500851 | GENERATION: 19 | ERRORS: best=235, median=295.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=45.65
2021-12-15 00:05:02.801004 | GENERATION: 20 | ERRORS: best=235, median=295.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=45.71
2021-12-15 00:05:05.345734 | GENERATION: 21 | ERRORS: best=235, median=295.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=45.455
2021-12-15 00:05:07.697100 | GENERATION: 22 | ERRORS: best=235, median=295.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=42.535
2021-12-15 00:05:09.983742 | GENERATION: 23 | ERRORS: best=230, median=295.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=41.97
2021-12-15 00:05:12.150141 | GENERATION: 24 | ERRORS: best=230, median=295.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=39.32
2021-12-15 00:05:14.468991 | GENERATION: 25 | ERRORS: best=230, median=435.0, diversity=0.335 | INDIVIDUALS: n=200, avg_genome_length=38.62
2021-12-15 00:05:16.617635 | GENERATION: 26 | ERRORS: best=231, median=328.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=36.855
2021-12-15 00:05:19.308757 | GENERATION: 27 | ERRORS: best=235, median=295.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=34.26
2021-12-15 00:05:21.473934 | GENERATION: 28 | ERRORS: best=230, median=350.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=32.505
2021-12-15 00:05:23.573425 | GENERATION: 29 | ERRORS: best=210, median=416.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=32.945
2021-12-15 00:05:25.669937 | GENERATION: 30 | ERRORS: best=210, median=409.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=31.845
2021-12-15 00:05:27.749450 | GENERATION: 31 | ERRORS: best=210, median=435.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=28.525
2021-12-15 00:05:29.745631 | GENERATION: 32 | ERRORS: best=210, median=435.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=26.67
2021-12-15 00:05:31.617997 | GENERATION: 33 | ERRORS: best=210, median=435.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=24.035
2021-12-15 00:05:33.392607 | GENERATION: 34 | ERRORS: best=210, median=295.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=23.095
2021-12-15 00:05:35.208063 | GENERATION: 35 | ERRORS: best=210, median=435.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=23.425
2021-12-15 00:05:37.590753 | GENERATION: 36 | ERRORS: best=205, median=435.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=21.91
2021-12-15 00:05:39.393011 | GENERATION: 37 | ERRORS: best=205, median=435.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=23.68
2021-12-15 00:05:41.233267 | GENERATION: 38 | ERRORS: best=205, median=435.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=24.305
2021-12-15 00:05:42.891622 | GENERATION: 39 | ERRORS: best=205, median=385.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=22.655
2021-12-15 00:05:46.656356 | GENERATION: 40 | ERRORS: best=205, median=435.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=23.155
2021-12-15 00:05:47.958573 | GENERATION: 41 | ERRORS: best=205, median=401.5, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=21.595
2021-12-15 00:05:49.035686 | GENERATION: 42 | ERRORS: best=205, median=359.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=20.76
2021-12-15 00:05:50.160408 | GENERATION: 43 | ERRORS: best=164, median=435.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=22.89
2021-12-15 00:05:51.535353 | GENERATION: 44 | ERRORS: best=164, median=435.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=28.275
2021-12-15 00:05:52.809502 | GENERATION: 45 | ERRORS: best=164, median=435.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=26.55
2021-12-15 00:05:54.109179 | GENERATION: 46 | ERRORS: best=164, median=435.0, diversity=0.265 | INDIVIDUALS: n=200, avg_genome_length=25.595
2021-12-15 00:05:55.892158 | GENERATION: 47 | ERRORS: best=164, median=435.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=26.93
2021-12-15 00:05:57.125128 | GENERATION: 48 | ERRORS: best=164, median=435.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=26.57
Simplifying genome of length 28 with total error 0.
Simplified genome by 2 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f9d214f3910>), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f9d214f3130>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f9d214f30a0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), InstructionMeta(name='exec_while', code_blocks=1), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f9d214f3400>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 1000 int_lt input_0 2000 int_gte exec_if ("large" print_str) (exec_while ("small" print_str)))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:59
