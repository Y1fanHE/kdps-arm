Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(growth_cap=500, runtime_limit=10, step_limit=300, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000), output_stacks=['stdout'], arity=1)
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f358af56430>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f358af566a0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f358af56490>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f3588cfba00>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f3588cfb100>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f358b099790>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f358b099790>)]
ERC Generators:
[<function rand_int at 0x7f358af50f70>]
========================================
Start Run
========================================
2021-12-07 15:43:27.551920 | GENERATION: 1 | ERRORS: best=304, median=469.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=57.815
2021-12-07 15:43:28.977222 | GENERATION: 2 | ERRORS: best=304, median=420.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=60.48
2021-12-07 15:43:31.341027 | GENERATION: 3 | ERRORS: best=235, median=345.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=35.835
2021-12-07 15:43:34.434520 | GENERATION: 4 | ERRORS: best=235, median=412.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=34.035
2021-12-07 15:43:35.980310 | GENERATION: 5 | ERRORS: best=235, median=345.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=32.135
2021-12-07 15:43:38.842008 | GENERATION: 6 | ERRORS: best=200, median=364.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=30.28
2021-12-07 15:43:40.125410 | GENERATION: 7 | ERRORS: best=200, median=345.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=28.945
2021-12-07 15:43:41.499410 | GENERATION: 8 | ERRORS: best=200, median=345.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=27.28
2021-12-07 15:43:42.880495 | GENERATION: 9 | ERRORS: best=200, median=345.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=25.91
2021-12-07 15:43:44.184819 | GENERATION: 10 | ERRORS: best=80, median=345.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=21.035
2021-12-07 15:43:45.268483 | GENERATION: 11 | ERRORS: best=80, median=345.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=17.71
2021-12-07 15:43:46.342411 | GENERATION: 12 | ERRORS: best=80, median=420.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=18.525
2021-12-07 15:43:47.525423 | GENERATION: 13 | ERRORS: best=80, median=420.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=19.35
2021-12-07 15:43:48.694475 | GENERATION: 14 | ERRORS: best=80, median=420.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=18.59
2021-12-07 15:43:49.792914 | GENERATION: 15 | ERRORS: best=80, median=406.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=19.55
2021-12-07 15:43:50.762707 | GENERATION: 16 | ERRORS: best=80, median=345.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=19.39
2021-12-07 15:43:51.814482 | GENERATION: 17 | ERRORS: best=80, median=345.0, diversity=0.105 | INDIVIDUALS: n=200, avg_genome_length=17.67
2021-12-07 15:43:52.823581 | GENERATION: 18 | ERRORS: best=80, median=345.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=17.74
2021-12-07 15:43:53.785523 | GENERATION: 19 | ERRORS: best=80, median=420.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=16.655
2021-12-07 15:43:54.982201 | GENERATION: 20 | ERRORS: best=80, median=349.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=18.14
2021-12-07 15:43:56.121933 | GENERATION: 21 | ERRORS: best=80, median=345.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=19.82
2021-12-07 15:43:57.037452 | GENERATION: 22 | ERRORS: best=80, median=420.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=19.59
2021-12-07 15:43:58.170511 | GENERATION: 23 | ERRORS: best=80, median=345.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=19.345
2021-12-07 15:43:59.408655 | GENERATION: 24 | ERRORS: best=80, median=420.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=19.835
2021-12-07 15:44:00.516090 | GENERATION: 25 | ERRORS: best=80, median=378.5, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=21.24
2021-12-07 15:44:01.626365 | GENERATION: 26 | ERRORS: best=80, median=345.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=21.875
2021-12-07 15:44:02.860654 | GENERATION: 27 | ERRORS: best=80, median=345.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=22.865
2021-12-07 15:44:03.736918 | GENERATION: 28 | ERRORS: best=80, median=364.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=22.485
2021-12-07 15:44:04.602331 | GENERATION: 29 | ERRORS: best=80, median=345.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=23.23
2021-12-07 15:44:05.780638 | GENERATION: 30 | ERRORS: best=80, median=356.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=22.755
2021-12-07 15:44:07.002699 | GENERATION: 31 | ERRORS: best=80, median=420.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=21.73
2021-12-07 15:44:08.368100 | GENERATION: 32 | ERRORS: best=80, median=420.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=22.2
2021-12-07 15:44:09.815368 | GENERATION: 33 | ERRORS: best=80, median=345.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=22.72
2021-12-07 15:44:11.205422 | GENERATION: 34 | ERRORS: best=80, median=420.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=23.535
2021-12-07 15:44:12.261711 | GENERATION: 35 | ERRORS: best=80, median=345.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=24.02
Simplifying genome of length 42 with total error 0.
Simplified genome by 3 to length 39.
Simplified genome by 1 to length 38.
Simplified genome by 2 to length 36.
Simplified genome by 2 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 3 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f3588d4a7f0>), InstructionMeta(name='int_gte', code_blocks=0), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f3588d4ae80>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f3588d4adc0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f3588d4ac70>), InstructionMeta(name='exec_while', code_blocks=1), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte input_0 1000 int_lt exec_if ("small" print_str) ("large" exec_while (print_str)))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:01
