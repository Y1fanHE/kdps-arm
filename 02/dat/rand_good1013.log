Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(push_config=PushConfig(runtime_limit=10, numeric_magnitude_limit=1000000000000.0, growth_cap=500, step_limit=300, collection_size_cap=1000), arity=1, output_stacks=['stdout'])
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f26799825b0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f2679982670>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f2679982760>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f2679a3acc0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f2679a3a300>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f267bda2760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f267bda2760>)]
ERC Generators:
[<function rand_int at 0x7f267bc59f70>]
========================================
Start Run
========================================
2021-12-07 16:55:49.776395 | GENERATION: 1 | ERRORS: best=370, median=435.0, diversity=0.045 | INDIVIDUALS: n=200, avg_genome_length=66.975
2021-12-07 16:55:51.079004 | GENERATION: 2 | ERRORS: best=280, median=435.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=53.865
2021-12-07 16:55:52.638512 | GENERATION: 3 | ERRORS: best=280, median=349.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=49.0
2021-12-07 16:55:54.211910 | GENERATION: 4 | ERRORS: best=220, median=435.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=46.93
2021-12-07 16:55:56.090707 | GENERATION: 5 | ERRORS: best=220, median=435.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=43.32
2021-12-07 16:55:57.954357 | GENERATION: 6 | ERRORS: best=220, median=435.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=44.355
2021-12-07 16:55:59.748419 | GENERATION: 7 | ERRORS: best=220, median=435.0, diversity=0.26 | INDIVIDUALS: n=200, avg_genome_length=42.01
2021-12-07 16:56:01.603942 | GENERATION: 8 | ERRORS: best=220, median=435.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=39.59
2021-12-07 16:56:03.435969 | GENERATION: 9 | ERRORS: best=220, median=435.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=37.815
2021-12-07 16:56:05.057247 | GENERATION: 10 | ERRORS: best=220, median=435.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=36.775
2021-12-07 16:56:06.497712 | GENERATION: 11 | ERRORS: best=215, median=431.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=36.52
2021-12-07 16:56:08.031330 | GENERATION: 12 | ERRORS: best=215, median=435.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=41.595
2021-12-07 16:56:09.815391 | GENERATION: 13 | ERRORS: best=215, median=435.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=39.655
2021-12-07 16:56:11.580427 | GENERATION: 14 | ERRORS: best=215, median=435.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=39.735
2021-12-07 16:56:13.089835 | GENERATION: 15 | ERRORS: best=215, median=435.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=38.435
2021-12-07 16:56:15.158620 | GENERATION: 16 | ERRORS: best=215, median=435.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=39.71
2021-12-07 16:56:16.917623 | GENERATION: 17 | ERRORS: best=215, median=435.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=36.82
2021-12-07 16:56:18.588821 | GENERATION: 18 | ERRORS: best=215, median=435.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=37.195
2021-12-07 16:56:20.116692 | GENERATION: 19 | ERRORS: best=215, median=285.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=32.93
2021-12-07 16:56:21.574407 | GENERATION: 20 | ERRORS: best=215, median=435.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=35.025
2021-12-07 16:56:23.108088 | GENERATION: 21 | ERRORS: best=215, median=322.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=34.155
2021-12-07 16:56:24.451333 | GENERATION: 22 | ERRORS: best=215, median=285.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=32.32
2021-12-07 16:56:25.985790 | GENERATION: 23 | ERRORS: best=215, median=415.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=32.67
2021-12-07 16:56:27.406419 | GENERATION: 24 | ERRORS: best=215, median=285.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=31.49
2021-12-07 16:56:29.031795 | GENERATION: 25 | ERRORS: best=215, median=285.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=31.8
2021-12-07 16:56:30.541054 | GENERATION: 26 | ERRORS: best=215, median=435.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=33.81
2021-12-07 16:56:32.111834 | GENERATION: 27 | ERRORS: best=215, median=285.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=31.63
2021-12-07 16:56:33.338874 | GENERATION: 28 | ERRORS: best=215, median=411.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=30.495
2021-12-07 16:56:35.120110 | GENERATION: 29 | ERRORS: best=65, median=365.5, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=30.16
2021-12-07 16:56:37.275390 | GENERATION: 30 | ERRORS: best=65, median=285.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=35.62
Simplifying genome of length 40 with total error 0.
Simplified genome by 3 to length 37.
Simplified genome by 1 to length 36.
Simplified genome by 1 to length 35.
Simplified genome by 2 to length 33.
Simplified genome by 1 to length 32.
Simplified genome by 1 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 2 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 3 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 2 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 2 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f2679b38040>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_when', code_blocks=1), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f2679b38ee0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f2679b38eb0>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_when', code_blocks=1), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f2679b38fa0>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 1000 int_lt exec_when ("small" print_str) input_0 2000 int_gte exec_when ("large" print_str))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:11
