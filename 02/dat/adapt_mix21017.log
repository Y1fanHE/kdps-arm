Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(numeric_magnitude_limit=1000000000000.0, runtime_limit=10, collection_size_cap=1000, growth_cap=500, step_limit=300))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fb8db731400>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fb8db731670>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fb8db731460>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fb8db774400>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fb8db774a00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7fb8ddb17760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7fb8ddb17760>)]
ERC Generators:
[<function rand_int at 0x7fb8dd9cff70>]
========================================
Start Run
========================================
2021-12-09 19:21:12.489834 | GENERATION: 1 | ERRORS: best=406, median=435.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=71.25
2021-12-09 19:21:14.408143 | GENERATION: 2 | ERRORS: best=270, median=435.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=81.035
2021-12-09 19:21:16.085288 | GENERATION: 3 | ERRORS: best=270, median=295.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=69.755
2021-12-09 19:21:17.916517 | GENERATION: 4 | ERRORS: best=270, median=435.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=66.945
2021-12-09 19:21:19.494015 | GENERATION: 5 | ERRORS: best=270, median=332.5, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=66.145
2021-12-09 19:21:21.129403 | GENERATION: 6 | ERRORS: best=270, median=295.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=63.08
2021-12-09 19:21:22.706325 | GENERATION: 7 | ERRORS: best=270, median=295.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=61.605
2021-12-09 19:21:24.342648 | GENERATION: 8 | ERRORS: best=270, median=295.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=58.315
2021-12-09 19:21:26.345727 | GENERATION: 9 | ERRORS: best=265, median=295.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=60.045
2021-12-09 19:21:28.167787 | GENERATION: 10 | ERRORS: best=265, median=295.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=54.82
2021-12-09 19:21:30.076798 | GENERATION: 11 | ERRORS: best=265, median=295.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=52.56
2021-12-09 19:21:35.184442 | GENERATION: 12 | ERRORS: best=265, median=295.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=50.34
2021-12-09 19:21:37.272021 | GENERATION: 13 | ERRORS: best=265, median=295.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=48.85
2021-12-09 19:21:39.288608 | GENERATION: 14 | ERRORS: best=265, median=295.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=47.125
2021-12-09 19:21:41.661100 | GENERATION: 15 | ERRORS: best=255, median=295.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=50.4
2021-12-09 19:21:44.966542 | GENERATION: 16 | ERRORS: best=255, median=295.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=52.65
2021-12-09 19:21:46.923025 | GENERATION: 17 | ERRORS: best=245, median=351.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=51.705
2021-12-09 19:21:48.878626 | GENERATION: 18 | ERRORS: best=65, median=314.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=52.685
2021-12-09 19:21:50.614585 | GENERATION: 19 | ERRORS: best=65, median=398.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=53.79
2021-12-09 19:21:52.162225 | GENERATION: 20 | ERRORS: best=65, median=314.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=48.685
2021-12-09 19:21:53.722074 | GENERATION: 21 | ERRORS: best=65, median=435.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=47.475
2021-12-09 19:21:55.282870 | GENERATION: 22 | ERRORS: best=65, median=411.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=47.145
2021-12-09 19:21:56.726335 | GENERATION: 23 | ERRORS: best=65, median=389.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=47.635
2021-12-09 19:21:58.224435 | GENERATION: 24 | ERRORS: best=65, median=424.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=45.685
2021-12-09 19:21:59.606330 | GENERATION: 25 | ERRORS: best=65, median=435.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=45.605
2021-12-09 19:22:01.168522 | GENERATION: 26 | ERRORS: best=65, median=343.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=44.675
2021-12-09 19:22:02.441884 | GENERATION: 27 | ERRORS: best=65, median=389.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=44.23
2021-12-09 19:22:04.016717 | GENERATION: 28 | ERRORS: best=65, median=435.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=45.165
2021-12-09 19:22:05.160362 | GENERATION: 29 | ERRORS: best=65, median=435.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=44.03
2021-12-09 19:22:06.481610 | GENERATION: 30 | ERRORS: best=65, median=435.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=42.67
2021-12-09 19:22:07.615288 | GENERATION: 31 | ERRORS: best=65, median=435.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=41.96
2021-12-09 19:22:09.051482 | GENERATION: 32 | ERRORS: best=65, median=435.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=41.215
2021-12-09 19:22:10.354412 | GENERATION: 33 | ERRORS: best=65, median=435.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=41.005
2021-12-09 19:22:11.451770 | GENERATION: 34 | ERRORS: best=65, median=335.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=40.645
2021-12-09 19:22:12.734055 | GENERATION: 35 | ERRORS: best=65, median=425.5, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=40.4
2021-12-09 19:22:14.124572 | GENERATION: 36 | ERRORS: best=65, median=394.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=38.34
2021-12-09 19:22:15.075801 | GENERATION: 37 | ERRORS: best=65, median=335.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=38.065
2021-12-09 19:22:16.013780 | GENERATION: 38 | ERRORS: best=65, median=335.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=38.155
2021-12-09 19:22:16.978166 | GENERATION: 39 | ERRORS: best=65, median=295.0, diversity=0.105 | INDIVIDUALS: n=200, avg_genome_length=38.455
2021-12-09 19:22:17.975830 | GENERATION: 40 | ERRORS: best=65, median=295.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=38.84
2021-12-09 19:22:19.001716 | GENERATION: 41 | ERRORS: best=65, median=295.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=38.235
2021-12-09 19:22:19.988210 | GENERATION: 42 | ERRORS: best=65, median=295.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=37.745
2021-12-09 19:22:21.049018 | GENERATION: 43 | ERRORS: best=65, median=295.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=36.875
2021-12-09 19:22:21.969159 | GENERATION: 44 | ERRORS: best=65, median=295.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=36.99
2021-12-09 19:22:23.784125 | GENERATION: 45 | ERRORS: best=65, median=295.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=38.22
2021-12-09 19:22:24.701033 | GENERATION: 46 | ERRORS: best=65, median=295.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=38.005
2021-12-09 19:22:25.704727 | GENERATION: 47 | ERRORS: best=65, median=295.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=38.205
2021-12-09 19:22:26.655437 | GENERATION: 48 | ERRORS: best=65, median=295.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=37.295
2021-12-09 19:22:27.535536 | GENERATION: 49 | ERRORS: best=65, median=295.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=38.265
2021-12-09 19:22:28.883539 | GENERATION: 50 | ERRORS: best=65, median=295.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=39.155
2021-12-09 19:22:29.751855 | GENERATION: 51 | ERRORS: best=65, median=295.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=38.775
2021-12-09 19:22:30.719708 | GENERATION: 52 | ERRORS: best=65, median=295.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=38.705
2021-12-09 19:22:31.905352 | GENERATION: 53 | ERRORS: best=65, median=295.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=38.73
2021-12-09 19:22:32.941307 | GENERATION: 54 | ERRORS: best=65, median=295.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=38.97
2021-12-09 19:22:34.021633 | GENERATION: 55 | ERRORS: best=65, median=295.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=39.215
Simplifying genome of length 45 with total error 0.
Simplified genome by 1 to length 44.
Simplified genome by 2 to length 42.
Simplified genome by 2 to length 40.
Simplified genome by 1 to length 39.
Simplified genome by 2 to length 37.
Simplified genome by 2 to length 35.
Simplified genome by 1 to length 34.
Simplified genome by 1 to length 33.
Simplified genome by 2 to length 31.
Simplified genome by 1 to length 30.
Simplified genome by 1 to length 29.
Simplified genome by 1 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 1 to length 25.
Simplified genome by 3 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 2 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7fb8db53f520>), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7fb8db53fe20>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7fb8db53f610>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7fb8db53f670>), InstructionMeta(name='exec_if', code_blocks=2), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 1000 int_lt input_0 2000 int_gte exec_if ("large" print_str) ("small" exec_if (print_str) ()))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:38
