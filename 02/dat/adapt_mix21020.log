Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=1, output_stacks=['stdout'], push_config=PushConfig(runtime_limit=10, growth_cap=500, step_limit=300, collection_size_cap=1000, numeric_magnitude_limit=1000000000000.0))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f46a3e36400>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f46a3e36670>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f46a3e36460>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f46a3e86740>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f46a3e869c0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f46a621d760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f46a621d760>)]
ERC Generators:
[<function rand_int at 0x7f46a60d4f70>]
========================================
Start Run
========================================
2021-12-09 19:50:28.812068 | GENERATION: 1 | ERRORS: best=420, median=479.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=62.735
2021-12-09 19:50:30.385582 | GENERATION: 2 | ERRORS: best=420, median=479.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=73.96
2021-12-09 19:50:31.908961 | GENERATION: 3 | ERRORS: best=315, median=463.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=71.525
2021-12-09 19:50:33.541989 | GENERATION: 4 | ERRORS: best=265, median=420.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=71.4
2021-12-09 19:50:34.788750 | GENERATION: 5 | ERRORS: best=265, median=315.0, diversity=0.09 | INDIVIDUALS: n=200, avg_genome_length=71.815
2021-12-09 19:50:36.322718 | GENERATION: 6 | ERRORS: best=265, median=315.0, diversity=0.1 | INDIVIDUALS: n=200, avg_genome_length=69.6
2021-12-09 19:50:37.952050 | GENERATION: 7 | ERRORS: best=265, median=315.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=67.715
2021-12-09 19:50:39.489817 | GENERATION: 8 | ERRORS: best=265, median=315.0, diversity=0.105 | INDIVIDUALS: n=200, avg_genome_length=66.8
2021-12-09 19:50:41.084253 | GENERATION: 9 | ERRORS: best=265, median=315.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=66.35
2021-12-09 19:50:42.577789 | GENERATION: 10 | ERRORS: best=265, median=315.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=65.16
2021-12-09 19:50:44.000386 | GENERATION: 11 | ERRORS: best=259, median=315.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=64.82
2021-12-09 19:50:45.531675 | GENERATION: 12 | ERRORS: best=265, median=315.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=63.015
2021-12-09 19:50:47.058443 | GENERATION: 13 | ERRORS: best=265, median=315.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=62.195
2021-12-09 19:50:48.366429 | GENERATION: 14 | ERRORS: best=265, median=315.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=61.125
2021-12-09 19:50:49.789254 | GENERATION: 15 | ERRORS: best=265, median=315.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=59.235
2021-12-09 19:50:51.266050 | GENERATION: 16 | ERRORS: best=265, median=315.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=59.7
2021-12-09 19:50:52.827895 | GENERATION: 17 | ERRORS: best=265, median=315.0, diversity=0.08 | INDIVIDUALS: n=200, avg_genome_length=57.2
2021-12-09 19:50:54.063730 | GENERATION: 18 | ERRORS: best=265, median=315.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=56.355
2021-12-09 19:50:55.527522 | GENERATION: 19 | ERRORS: best=265, median=315.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=55.955
2021-12-09 19:50:56.896950 | GENERATION: 20 | ERRORS: best=265, median=315.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=54.425
2021-12-09 19:50:57.872340 | GENERATION: 21 | ERRORS: best=265, median=315.0, diversity=0.1 | INDIVIDUALS: n=200, avg_genome_length=51.935
2021-12-09 19:50:58.864346 | GENERATION: 22 | ERRORS: best=265, median=315.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=50.335
2021-12-09 19:50:59.879067 | GENERATION: 23 | ERRORS: best=265, median=315.0, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=49.38
2021-12-09 19:51:00.860878 | GENERATION: 24 | ERRORS: best=265, median=315.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=48.43
2021-12-09 19:51:02.209408 | GENERATION: 25 | ERRORS: best=265, median=315.0, diversity=0.1 | INDIVIDUALS: n=200, avg_genome_length=47.96
2021-12-09 19:51:03.330532 | GENERATION: 26 | ERRORS: best=265, median=315.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=47.69
2021-12-09 19:51:04.563045 | GENERATION: 27 | ERRORS: best=265, median=315.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=46.27
2021-12-09 19:51:05.834835 | GENERATION: 28 | ERRORS: best=265, median=315.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=44.105
2021-12-09 19:51:07.072516 | GENERATION: 29 | ERRORS: best=235, median=315.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=43.165
2021-12-09 19:51:07.975498 | GENERATION: 30 | ERRORS: best=235, median=265.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=43.255
2021-12-09 19:51:08.918587 | GENERATION: 31 | ERRORS: best=235, median=265.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=42.1
2021-12-09 19:51:09.896059 | GENERATION: 32 | ERRORS: best=235, median=265.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=41.47
2021-12-09 19:51:10.732814 | GENERATION: 33 | ERRORS: best=80, median=265.0, diversity=0.12 | INDIVIDUALS: n=200, avg_genome_length=40.19
2021-12-09 19:51:11.875224 | GENERATION: 34 | ERRORS: best=80, median=265.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=39.73
2021-12-09 19:51:12.873323 | GENERATION: 35 | ERRORS: best=80, median=235.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=39.27
2021-12-09 19:51:13.708251 | GENERATION: 36 | ERRORS: best=80, median=250.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=37.47
2021-12-09 19:51:14.525102 | GENERATION: 37 | ERRORS: best=80, median=265.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=36.31
2021-12-09 19:51:15.373093 | GENERATION: 38 | ERRORS: best=80, median=265.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=35.835
2021-12-09 19:51:16.216151 | GENERATION: 39 | ERRORS: best=80, median=315.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=34.64
2021-12-09 19:51:17.012067 | GENERATION: 40 | ERRORS: best=80, median=265.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=34.085
2021-12-09 19:51:17.826202 | GENERATION: 41 | ERRORS: best=80, median=265.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=33.36
2021-12-09 19:51:18.673026 | GENERATION: 42 | ERRORS: best=80, median=315.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=32.695
2021-12-09 19:51:19.456944 | GENERATION: 43 | ERRORS: best=80, median=265.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=31.14
2021-12-09 19:51:20.199460 | GENERATION: 44 | ERRORS: best=80, median=265.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=31.035
2021-12-09 19:51:21.014500 | GENERATION: 45 | ERRORS: best=80, median=280.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=29.96
2021-12-09 19:51:21.804276 | GENERATION: 46 | ERRORS: best=80, median=305.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=29.66
2021-12-09 19:51:22.543583 | GENERATION: 47 | ERRORS: best=80, median=315.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=28.795
2021-12-09 19:51:23.515481 | GENERATION: 48 | ERRORS: best=80, median=315.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=27.825
2021-12-09 19:51:24.320240 | GENERATION: 49 | ERRORS: best=80, median=315.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=27.34
Simplifying genome of length 25 with total error 0.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 3 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f46a3add400>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_when', code_blocks=1), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f46a3add2b0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f46a3add910>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f46a3add5b0>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte exec_when ("large" print_str) input_0 1000 int_lt exec_if ("small" print_str) ())
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:11
