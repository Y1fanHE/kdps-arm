Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(collection_size_cap=1000, growth_cap=500, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, step_limit=300))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7fd9ea7ac760>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7fd9ea7ac460>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7fd9ea7ac880>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7fd9ea7eec00>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7fd9ea7ee840>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7fd9ecb6f790>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7fd9ecb6f790>)]
ERC Generators:
[<function rand_int at 0x7fd9eca27f70>]
========================================
Start Run
========================================
2021-12-07 16:14:58.421395 | GENERATION: 1 | ERRORS: best=415, median=4438.0, diversity=0.03 | INDIVIDUALS: n=200, avg_genome_length=55.865
2021-12-07 16:15:00.491201 | GENERATION: 2 | ERRORS: best=260, median=415.0, diversity=0.095 | INDIVIDUALS: n=200, avg_genome_length=42.57
2021-12-07 16:15:02.187578 | GENERATION: 3 | ERRORS: best=260, median=415.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=38.305
2021-12-07 16:15:03.659809 | GENERATION: 4 | ERRORS: best=175, median=397.5, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=37.845
2021-12-07 16:15:05.063097 | GENERATION: 5 | ERRORS: best=175, median=325.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=31.475
2021-12-07 16:15:06.568879 | GENERATION: 6 | ERRORS: best=175, median=415.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=29.305
2021-12-07 16:15:07.905118 | GENERATION: 7 | ERRORS: best=175, median=415.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=28.325
2021-12-07 16:15:09.054711 | GENERATION: 8 | ERRORS: best=175, median=325.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=27.895
2021-12-07 16:15:10.522532 | GENERATION: 9 | ERRORS: best=175, median=325.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=27.415
2021-12-07 16:15:11.819759 | GENERATION: 10 | ERRORS: best=175, median=414.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=26.11
2021-12-07 16:15:13.073797 | GENERATION: 11 | ERRORS: best=175, median=325.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=25.835
2021-12-07 16:15:14.386864 | GENERATION: 12 | ERRORS: best=175, median=325.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=24.215
2021-12-07 16:15:15.392842 | GENERATION: 13 | ERRORS: best=175, median=353.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=22.895
2021-12-07 16:15:16.532777 | GENERATION: 14 | ERRORS: best=175, median=399.5, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=21.715
2021-12-07 16:15:17.559175 | GENERATION: 15 | ERRORS: best=175, median=370.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=20.845
2021-12-07 16:15:18.595263 | GENERATION: 16 | ERRORS: best=175, median=325.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=20.185
2021-12-07 16:15:19.699790 | GENERATION: 17 | ERRORS: best=175, median=325.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=18.995
2021-12-07 16:15:20.487848 | GENERATION: 18 | ERRORS: best=175, median=415.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=17.475
2021-12-07 16:15:21.530505 | GENERATION: 19 | ERRORS: best=175, median=415.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=17.78
2021-12-07 16:15:22.263087 | GENERATION: 20 | ERRORS: best=175, median=350.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=15.985
2021-12-07 16:15:22.957176 | GENERATION: 21 | ERRORS: best=85, median=415.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=13.125
2021-12-07 16:15:23.978877 | GENERATION: 22 | ERRORS: best=85, median=415.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=18.67
2021-12-07 16:15:25.215568 | GENERATION: 23 | ERRORS: best=85, median=375.5, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=17.17
2021-12-07 16:15:26.189358 | GENERATION: 24 | ERRORS: best=85, median=325.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=16.805
2021-12-07 16:15:27.031493 | GENERATION: 25 | ERRORS: best=85, median=384.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=15.245
2021-12-07 16:15:27.775993 | GENERATION: 26 | ERRORS: best=85, median=391.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=15.41
2021-12-07 16:15:28.700631 | GENERATION: 27 | ERRORS: best=85, median=384.5, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=16.6
2021-12-07 16:15:29.522551 | GENERATION: 28 | ERRORS: best=85, median=415.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=16.19
2021-12-07 16:15:30.224619 | GENERATION: 29 | ERRORS: best=85, median=325.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=16.51
Simplifying genome of length 21 with total error 0.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 2 to length 13.
Simplified genome by 1 to length 12.
Simplified genome to length 12 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7fd9ea5ee100>), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7fd9ea5ee400>), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7fd9ea5ee460>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_while', code_blocks=1), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7fd9ea5ee4c0>), Closer(), InstructionMeta(name='exec_if', code_blocks=2), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 ("small" input_0 1000 int_lt input_0 2000 int_gte exec_while ("large") exec_if (print_str) ())
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:48
