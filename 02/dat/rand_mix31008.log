Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(arity=1, output_stacks=['stdout'], push_config=PushConfig(collection_size_cap=1000, step_limit=300, growth_cap=500, numeric_magnitude_limit=1000000000000.0, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f8a7b7a9400>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f8a7b7a94f0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f8a7b7a9730>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8a7db84b00>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f8a8c9ed540>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f8a7db839a0>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f8a7db839a0>)]
ERC Generators:
[<function rand_int at 0x7f8a7da50280>]
========================================
Start Run
========================================
2021-12-14 21:44:56.941822 | GENERATION: 1 | ERRORS: best=250, median=425.0, diversity=0.035 | INDIVIDUALS: n=200, avg_genome_length=52.245
2021-12-14 21:44:58.522846 | GENERATION: 2 | ERRORS: best=250, median=425.0, diversity=0.285 | INDIVIDUALS: n=200, avg_genome_length=52.245
2021-12-14 21:44:59.980526 | GENERATION: 3 | ERRORS: best=250, median=425.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=52.18
2021-12-14 21:45:01.622727 | GENERATION: 4 | ERRORS: best=250, median=425.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=50.75
2021-12-14 21:45:03.168920 | GENERATION: 5 | ERRORS: best=250, median=425.0, diversity=0.27 | INDIVIDUALS: n=200, avg_genome_length=47.7
2021-12-14 21:45:04.769783 | GENERATION: 6 | ERRORS: best=250, median=425.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=46.525
2021-12-14 21:45:06.276683 | GENERATION: 7 | ERRORS: best=250, median=425.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=45.205
2021-12-14 21:45:07.622113 | GENERATION: 8 | ERRORS: best=180, median=377.5, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=43.955
2021-12-14 21:45:09.075091 | GENERATION: 9 | ERRORS: best=175, median=425.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=51.84
2021-12-14 21:45:10.846205 | GENERATION: 10 | ERRORS: best=170, median=425.0, diversity=0.33 | INDIVIDUALS: n=200, avg_genome_length=54.07
2021-12-14 21:45:12.365939 | GENERATION: 11 | ERRORS: best=170, median=425.0, diversity=0.36 | INDIVIDUALS: n=200, avg_genome_length=49.185
2021-12-14 21:45:13.829771 | GENERATION: 12 | ERRORS: best=170, median=425.0, diversity=0.385 | INDIVIDUALS: n=200, avg_genome_length=52.325
2021-12-14 21:45:15.155529 | GENERATION: 13 | ERRORS: best=170, median=415.0, diversity=0.295 | INDIVIDUALS: n=200, avg_genome_length=46.08
2021-12-14 21:45:16.635324 | GENERATION: 14 | ERRORS: best=165, median=415.0, diversity=0.3 | INDIVIDUALS: n=200, avg_genome_length=44.595
2021-12-14 21:45:18.140739 | GENERATION: 15 | ERRORS: best=165, median=420.0, diversity=0.25 | INDIVIDUALS: n=200, avg_genome_length=39.245
2021-12-14 21:45:19.448089 | GENERATION: 16 | ERRORS: best=165, median=325.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=35.47
2021-12-14 21:45:20.672408 | GENERATION: 17 | ERRORS: best=165, median=365.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=32.68
2021-12-14 21:45:22.030737 | GENERATION: 18 | ERRORS: best=75, median=425.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=32.085
2021-12-14 21:45:23.036900 | GENERATION: 19 | ERRORS: best=75, median=325.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=32.25
2021-12-14 21:45:24.493440 | GENERATION: 20 | ERRORS: best=75, median=425.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=31.325
2021-12-14 21:45:25.621926 | GENERATION: 21 | ERRORS: best=75, median=425.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=30.39
2021-12-14 21:45:26.799212 | GENERATION: 22 | ERRORS: best=75, median=425.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=29.73
2021-12-14 21:45:27.865436 | GENERATION: 23 | ERRORS: best=75, median=425.0, diversity=0.255 | INDIVIDUALS: n=200, avg_genome_length=26.955
2021-12-14 21:45:28.883948 | GENERATION: 24 | ERRORS: best=75, median=425.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=27.035
2021-12-14 21:45:29.863803 | GENERATION: 25 | ERRORS: best=75, median=425.0, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=26.715
2021-12-14 21:45:30.848045 | GENERATION: 26 | ERRORS: best=75, median=325.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=24.225
2021-12-14 21:45:31.744058 | GENERATION: 27 | ERRORS: best=75, median=425.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=23.995
Simplifying genome of length 28 with total error 0.
Simplified genome by 1 to length 27.
Simplified genome by 2 to length 25.
Simplified genome by 3 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 2 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f8a7b499e20>), InstructionMeta(name='int_gte', code_blocks=0), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f8a7b499af0>), InstructionMeta(name='int_lt', code_blocks=0), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f8a7b499160>), InstructionMeta(name='exec_if', code_blocks=2), InstructionMeta(name='print_str', code_blocks=0), Closer(), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f8a7b499ac0>), InstructionMeta(name='exec_when', code_blocks=1), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte input_0 1000 int_lt "small" exec_if (print_str) ("large" exec_when (print_str)))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:00:52
