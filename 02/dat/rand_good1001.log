Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(collection_size_cap=1000, step_limit=300, numeric_magnitude_limit=1000000000000.0, growth_cap=500, runtime_limit=10))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f6674be41f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f6674be40d0>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f6674be4850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f6674b884c0>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f6674b88dc0>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f6676fa9760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f6676fa9760>)]
ERC Generators:
[<function rand_int at 0x7f6676e61f70>]
========================================
Start Run
========================================
2021-12-07 12:32:49.554101 | GENERATION: 1 | ERRORS: best=418, median=420.0, diversity=0.03 | INDIVIDUALS: n=200, avg_genome_length=63.31
2021-12-07 12:32:50.903505 | GENERATION: 2 | ERRORS: best=245, median=420.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=60.885
2021-12-07 12:32:52.086324 | GENERATION: 3 | ERRORS: best=245, median=335.0, diversity=0.075 | INDIVIDUALS: n=200, avg_genome_length=46.02
2021-12-07 12:32:53.438859 | GENERATION: 4 | ERRORS: best=245, median=335.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=43.695
2021-12-07 12:32:54.578960 | GENERATION: 5 | ERRORS: best=245, median=335.0, diversity=0.105 | INDIVIDUALS: n=200, avg_genome_length=39.73
2021-12-07 12:32:55.839865 | GENERATION: 6 | ERRORS: best=245, median=335.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=38.355
2021-12-07 12:32:57.343059 | GENERATION: 7 | ERRORS: best=245, median=335.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=39.235
2021-12-07 12:32:59.043407 | GENERATION: 8 | ERRORS: best=200, median=335.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=44.505
2021-12-07 12:33:00.484634 | GENERATION: 9 | ERRORS: best=115, median=335.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=44.535
2021-12-07 12:33:01.997936 | GENERATION: 10 | ERRORS: best=115, median=402.5, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=49.875
2021-12-07 12:33:03.250618 | GENERATION: 11 | ERRORS: best=115, median=313.5, diversity=0.275 | INDIVIDUALS: n=200, avg_genome_length=50.225
2021-12-07 12:33:04.774376 | GENERATION: 12 | ERRORS: best=80, median=245.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=49.06
2021-12-07 12:33:06.321560 | GENERATION: 13 | ERRORS: best=80, median=335.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=46.465
2021-12-07 12:33:07.771442 | GENERATION: 14 | ERRORS: best=80, median=420.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=44.46
2021-12-07 12:33:09.304766 | GENERATION: 15 | ERRORS: best=80, median=420.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=41.865
2021-12-07 12:33:10.750449 | GENERATION: 16 | ERRORS: best=80, median=298.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=40.165
2021-12-07 12:33:12.132337 | GENERATION: 17 | ERRORS: best=80, median=335.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=38.415
2021-12-07 12:33:13.404849 | GENERATION: 18 | ERRORS: best=80, median=276.5, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=35.485
2021-12-07 12:33:14.864788 | GENERATION: 19 | ERRORS: best=80, median=335.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=36.41
2021-12-07 12:33:16.525169 | GENERATION: 20 | ERRORS: best=80, median=282.0, diversity=0.245 | INDIVIDUALS: n=200, avg_genome_length=35.61
2021-12-07 12:33:17.632592 | GENERATION: 21 | ERRORS: best=80, median=335.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=34.335
2021-12-07 12:33:19.282532 | GENERATION: 22 | ERRORS: best=80, median=335.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=34.415
2021-12-07 12:33:20.508824 | GENERATION: 23 | ERRORS: best=80, median=255.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=33.39
2021-12-07 12:33:21.962431 | GENERATION: 24 | ERRORS: best=80, median=335.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=34.455
2021-12-07 12:33:23.040650 | GENERATION: 25 | ERRORS: best=80, median=335.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=34.555
2021-12-07 12:33:24.390558 | GENERATION: 26 | ERRORS: best=80, median=335.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=34.32
2021-12-07 12:33:25.722013 | GENERATION: 27 | ERRORS: best=80, median=301.5, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=33.99
2021-12-07 12:33:27.454547 | GENERATION: 28 | ERRORS: best=80, median=420.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=34.675
2021-12-07 12:33:28.805474 | GENERATION: 29 | ERRORS: best=80, median=335.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=33.2
2021-12-07 12:33:29.982088 | GENERATION: 30 | ERRORS: best=80, median=335.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=33.29
2021-12-07 12:33:31.271834 | GENERATION: 31 | ERRORS: best=80, median=335.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=31.825
2021-12-07 12:33:32.299131 | GENERATION: 32 | ERRORS: best=80, median=335.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=32.775
2021-12-07 12:33:33.382538 | GENERATION: 33 | ERRORS: best=80, median=255.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=32.625
2021-12-07 12:33:34.502447 | GENERATION: 34 | ERRORS: best=80, median=330.0, diversity=0.19 | INDIVIDUALS: n=200, avg_genome_length=34.495
2021-12-07 12:33:35.650662 | GENERATION: 35 | ERRORS: best=80, median=335.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=33.42
2021-12-07 12:33:36.657807 | GENERATION: 36 | ERRORS: best=80, median=335.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=31.385
2021-12-07 12:33:37.897767 | GENERATION: 37 | ERRORS: best=80, median=372.5, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=30.48
2021-12-07 12:33:39.228531 | GENERATION: 38 | ERRORS: best=80, median=335.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=29.65
2021-12-07 12:33:40.410409 | GENERATION: 39 | ERRORS: best=5, median=366.5, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=28.295
Simplifying genome of length 30 with total error 0.
Simplified genome by 2 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 3 to length 24.
Simplified genome by 2 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 2 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome to length 14 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f667491f3d0>), InstructionMeta(name='int_dec', code_blocks=0), Input(input_index=0), InstructionMeta(name='int_lt', code_blocks=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f667491f460>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f667491f7f0>), InstructionMeta(name='print_str', code_blocks=0), Closer(), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f667491ff40>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_dec input_0 int_lt 1000 int_lt exec_if ("small" print_str) (exec_if ("large" print_str) ()))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:07
