Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(step_limit=300, growth_cap=500, runtime_limit=10, numeric_magnitude_limit=1000000000000.0, collection_size_cap=1000))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f7cf96b75b0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f7cf96b7670>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f7cf96b77c0>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f7cf95b2580>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f7cf95abf40>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f7cfbaa2760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f7cfbaa2760>)]
ERC Generators:
[<function rand_int at 0x7f7cfb959f70>]
========================================
Start Run
========================================
2021-12-07 16:10:18.671132 | GENERATION: 1 | ERRORS: best=415, median=4438.0, diversity=0.03 | INDIVIDUALS: n=200, avg_genome_length=56.22
2021-12-07 16:10:20.908338 | GENERATION: 2 | ERRORS: best=260, median=415.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=43.845
2021-12-07 16:10:22.901014 | GENERATION: 3 | ERRORS: best=260, median=415.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=46.225
2021-12-07 16:10:24.520290 | GENERATION: 4 | ERRORS: best=260, median=415.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=44.06
2021-12-07 16:10:26.385722 | GENERATION: 5 | ERRORS: best=240, median=408.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=42.985
2021-12-07 16:10:27.912136 | GENERATION: 6 | ERRORS: best=240, median=325.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=32.29
2021-12-07 16:10:29.444714 | GENERATION: 7 | ERRORS: best=215, median=415.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=30.525
2021-12-07 16:10:31.743796 | GENERATION: 8 | ERRORS: best=215, median=415.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=29.235
2021-12-07 16:10:33.567423 | GENERATION: 9 | ERRORS: best=215, median=380.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=28.325
2021-12-07 16:10:35.524933 | GENERATION: 10 | ERRORS: best=215, median=415.0, diversity=0.155 | INDIVIDUALS: n=200, avg_genome_length=27.08
2021-12-07 16:10:37.657624 | GENERATION: 11 | ERRORS: best=215, median=415.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=26.67
2021-12-07 16:10:39.855048 | GENERATION: 12 | ERRORS: best=215, median=325.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=24.825
2021-12-07 16:10:41.857121 | GENERATION: 13 | ERRORS: best=175, median=415.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=23.995
2021-12-07 16:10:43.029476 | GENERATION: 14 | ERRORS: best=175, median=415.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=25.51
2021-12-07 16:10:44.183502 | GENERATION: 15 | ERRORS: best=85, median=415.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=24.7
2021-12-07 16:10:45.187262 | GENERATION: 16 | ERRORS: best=85, median=415.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=26.08
2021-12-07 16:10:46.120143 | GENERATION: 17 | ERRORS: best=85, median=415.0, diversity=0.165 | INDIVIDUALS: n=200, avg_genome_length=25.665
2021-12-07 16:10:47.204460 | GENERATION: 18 | ERRORS: best=85, median=415.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=25.67
2021-12-07 16:10:48.420773 | GENERATION: 19 | ERRORS: best=85, median=415.0, diversity=0.205 | INDIVIDUALS: n=200, avg_genome_length=25.04
2021-12-07 16:10:49.541076 | GENERATION: 20 | ERRORS: best=85, median=415.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=25.04
2021-12-07 16:10:50.587323 | GENERATION: 21 | ERRORS: best=85, median=415.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=25.425
2021-12-07 16:10:51.813638 | GENERATION: 22 | ERRORS: best=85, median=415.0, diversity=0.2 | INDIVIDUALS: n=200, avg_genome_length=24.645
2021-12-07 16:10:52.981519 | GENERATION: 23 | ERRORS: best=85, median=415.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=24.765
2021-12-07 16:10:54.282804 | GENERATION: 24 | ERRORS: best=85, median=415.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=25.12
2021-12-07 16:10:55.769662 | GENERATION: 25 | ERRORS: best=85, median=415.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=27.45
2021-12-07 16:10:57.006887 | GENERATION: 26 | ERRORS: best=85, median=410.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=27.42
2021-12-07 16:10:58.448565 | GENERATION: 27 | ERRORS: best=85, median=415.0, diversity=0.21 | INDIVIDUALS: n=200, avg_genome_length=25.765
2021-12-07 16:10:59.816192 | GENERATION: 28 | ERRORS: best=85, median=410.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=29.825
2021-12-07 16:11:01.194784 | GENERATION: 29 | ERRORS: best=85, median=415.0, diversity=0.195 | INDIVIDUALS: n=200, avg_genome_length=29.89
2021-12-07 16:11:02.396847 | GENERATION: 30 | ERRORS: best=85, median=415.0, diversity=0.215 | INDIVIDUALS: n=200, avg_genome_length=28.885
2021-12-07 16:11:03.727182 | GENERATION: 31 | ERRORS: best=85, median=415.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=27.805
2021-12-07 16:11:05.084236 | GENERATION: 32 | ERRORS: best=85, median=415.0, diversity=0.22 | INDIVIDUALS: n=200, avg_genome_length=27.27
2021-12-07 16:11:06.380898 | GENERATION: 33 | ERRORS: best=85, median=415.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=27.185
Simplifying genome of length 26 with total error 0.
Simplified genome by 1 to length 25.
Simplified genome by 1 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 2 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 2 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f7cf962f520>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f7cf962f610>), InstructionMeta(name='print_str', code_blocks=0), Closer(), Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f7cf9724ca0>), InstructionMeta(name='int_lt', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f7cf9724df0>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 2000 int_gte exec_if ("large" print_str) (input_0 1000 int_lt exec_if ("small" print_str) ()))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:04
