Included 27 edge cases.
Included 73 random cases.
Included 100 cases in total.
Finished formatting.
Included 0 edge cases.
Included 1000 random cases.
Included 1000 cases in total.
Finished formatting.
========================================
Setup
========================================
Search Configuration:
signature: ProgramSignature(output_stacks=['stdout'], arity=1, push_config=PushConfig(runtime_limit=10, numeric_magnitude_limit=1000000000000.0, step_limit=300, collection_size_cap=1000, growth_cap=500))
evaluator: <pyshgp.gp.evaluation.DatasetEvaluator object at 0x7f37762441f0>
spawner: <pyshgp.gp.genome.GeneSpawner object at 0x7f3776244130>
population_size: 200
max_generations: 300
error_threshold: 0.0
initial_genome_size: (20, 100)
simplification_steps: 500
parallel_context: <pyshgp.gp.search.ParallelContext object at 0x7f3776244850>
selection: <pyshgp.utils.DiscreteProbDistrib object at 0x7f377627dc00>
variation: <pyshgp.utils.DiscreteProbDistrib object at 0x7f377627db00>
Instructions:
int_add, int_sub, int_mult, int_div, int_mod, int_min, int_max, int_inc, int_dec, int_lt, int_lte, int_gt, int_gte, int_from_bool, str_concat, str_insert_str, str_from_first_char, str_from_last_char, str_from_nth_char, str_contains_str, str_index_of_str, str_split_on_str, str_replace_first_str, str_replace_n_str, str_replace_all_str, str_remove_first_str, str_remove_n_str, str_remove_all_str, str_occurrences_of_str, str_reverse, str_head, str_tail, str_rest, str_but_last, str_drop, str_but_last_n, str_length, str_make_empty, str_is_empty_string, str_remove_nth, str_strip_whitespace, str_from_bool, str_from_int, bool_and, bool_or, bool_not, bool_xor, bool_invert_first_then_and, bool_second_first_then_and, bool_from_int, noop, noop_open, exec_do_range, exec_do_count, exec_while, exec_do_while, exec_if, exec_when, print_bool, println_bool, print_int, println_int, print_str, println_str, print_exec, println_exec, bool_pop, bool_dup, bool_dup_times, bool_swap, bool_rot, bool_flush, bool_eq, bool_stack_depth, bool_yank, bool_yank_dup, bool_shove, bool_shove_dup, bool_is_empty, int_pop, int_dup, int_dup_times, int_swap, int_rot, int_flush, int_eq, int_stack_depth, int_yank, int_yank_dup, int_shove, int_shove_dup, int_is_empty, str_pop, str_dup, str_dup_times, str_swap, str_rot, str_flush, str_eq, str_stack_depth, str_yank, str_yank_dup, str_shove, str_shove_dup, str_is_empty, exec_pop, exec_dup, exec_dup_times, exec_swap, exec_rot, exec_flush, exec_eq, exec_stack_depth, exec_yank, exec_yank_dup, exec_shove, exec_shove_dup, exec_is_empty
Literals:
[Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f377862d760>), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f377862d760>)]
ERC Generators:
[<function rand_int at 0x7f37784e4f70>]
========================================
Start Run
========================================
2021-12-07 16:25:44.657453 | GENERATION: 1 | ERRORS: best=430, median=4819.0, diversity=0.04 | INDIVIDUALS: n=200, avg_genome_length=70.08
2021-12-07 16:25:45.999743 | GENERATION: 2 | ERRORS: best=270, median=430.0, diversity=0.08 | INDIVIDUALS: n=200, avg_genome_length=36.455
2021-12-07 16:25:47.528339 | GENERATION: 3 | ERRORS: best=270, median=300.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=35.695
2021-12-07 16:25:49.076539 | GENERATION: 4 | ERRORS: best=270, median=430.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=34.755
2021-12-07 16:25:50.321032 | GENERATION: 5 | ERRORS: best=270, median=300.0, diversity=0.11 | INDIVIDUALS: n=200, avg_genome_length=33.485
2021-12-07 16:25:51.808646 | GENERATION: 6 | ERRORS: best=270, median=300.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=34.03
2021-12-07 16:25:53.288135 | GENERATION: 7 | ERRORS: best=250, median=300.0, diversity=0.115 | INDIVIDUALS: n=200, avg_genome_length=31.975
2021-12-07 16:25:55.205892 | GENERATION: 8 | ERRORS: best=250, median=300.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=32.63
2021-12-07 16:25:57.725386 | GENERATION: 9 | ERRORS: best=250, median=300.0, diversity=0.145 | INDIVIDUALS: n=200, avg_genome_length=32.445
2021-12-07 16:25:59.867682 | GENERATION: 10 | ERRORS: best=250, median=300.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=32.95
2021-12-07 16:26:01.873572 | GENERATION: 11 | ERRORS: best=250, median=300.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=30.535
2021-12-07 16:26:03.963912 | GENERATION: 12 | ERRORS: best=250, median=300.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=28.865
2021-12-07 16:26:06.113859 | GENERATION: 13 | ERRORS: best=250, median=300.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=28.195
2021-12-07 16:26:08.220852 | GENERATION: 14 | ERRORS: best=250, median=300.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=26.525
2021-12-07 16:26:10.566271 | GENERATION: 15 | ERRORS: best=230, median=300.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=27.465
2021-12-07 16:26:12.567565 | GENERATION: 16 | ERRORS: best=200, median=300.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=30.975
2021-12-07 16:26:14.649101 | GENERATION: 17 | ERRORS: best=200, median=430.0, diversity=0.13 | INDIVIDUALS: n=200, avg_genome_length=29.805
2021-12-07 16:26:16.417976 | GENERATION: 18 | ERRORS: best=200, median=300.0, diversity=0.175 | INDIVIDUALS: n=200, avg_genome_length=31.06
2021-12-07 16:26:18.006264 | GENERATION: 19 | ERRORS: best=200, median=300.0, diversity=0.125 | INDIVIDUALS: n=200, avg_genome_length=30.16
2021-12-07 16:26:19.595759 | GENERATION: 20 | ERRORS: best=200, median=430.0, diversity=0.15 | INDIVIDUALS: n=200, avg_genome_length=29.255
2021-12-07 16:26:21.040730 | GENERATION: 21 | ERRORS: best=200, median=430.0, diversity=0.135 | INDIVIDUALS: n=200, avg_genome_length=29.29
2021-12-07 16:26:22.513885 | GENERATION: 22 | ERRORS: best=200, median=430.0, diversity=0.24 | INDIVIDUALS: n=200, avg_genome_length=29.96
2021-12-07 16:26:24.148771 | GENERATION: 23 | ERRORS: best=200, median=300.0, diversity=0.14 | INDIVIDUALS: n=200, avg_genome_length=29.825
2021-12-07 16:26:25.576789 | GENERATION: 24 | ERRORS: best=200, median=430.0, diversity=0.17 | INDIVIDUALS: n=200, avg_genome_length=30.685
2021-12-07 16:26:27.018801 | GENERATION: 25 | ERRORS: best=200, median=430.0, diversity=0.16 | INDIVIDUALS: n=200, avg_genome_length=29.075
2021-12-07 16:26:28.561222 | GENERATION: 26 | ERRORS: best=200, median=430.0, diversity=0.18 | INDIVIDUALS: n=200, avg_genome_length=28.215
2021-12-07 16:26:30.072711 | GENERATION: 27 | ERRORS: best=70, median=430.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=27.67
2021-12-07 16:26:31.383077 | GENERATION: 28 | ERRORS: best=70, median=430.0, diversity=0.185 | INDIVIDUALS: n=200, avg_genome_length=33.04
2021-12-07 16:26:32.665235 | GENERATION: 29 | ERRORS: best=70, median=430.0, diversity=0.225 | INDIVIDUALS: n=200, avg_genome_length=33.09
2021-12-07 16:26:34.210142 | GENERATION: 30 | ERRORS: best=70, median=430.0, diversity=0.235 | INDIVIDUALS: n=200, avg_genome_length=34.005
2021-12-07 16:26:35.520648 | GENERATION: 31 | ERRORS: best=70, median=300.0, diversity=0.23 | INDIVIDUALS: n=200, avg_genome_length=31.515
Simplifying genome of length 35 with total error 0.
Simplified genome by 1 to length 34.
Simplified genome by 3 to length 31.
Simplified genome by 3 to length 28.
Simplified genome by 1 to length 27.
Simplified genome by 1 to length 26.
Simplified genome by 2 to length 24.
Simplified genome by 1 to length 23.
Simplified genome by 1 to length 22.
Simplified genome by 1 to length 21.
Simplified genome by 1 to length 20.
Simplified genome by 1 to length 19.
Simplified genome by 1 to length 18.
Simplified genome by 1 to length 17.
Simplified genome by 1 to length 16.
Simplified genome by 1 to length 15.
Simplified genome by 1 to length 14.
Simplified genome by 1 to length 13.
Simplified genome to length 13 and total error 0.
========================================
End Run
========================================
Solution found.
Best Seen Individual
	Genome:
	 pvector([Input(input_index=0), Literal(value=1000, push_type=<pyshgp.push.types.PushIntType object at 0x7f3775f2ad00>), InstructionMeta(name='int_lt', code_blocks=0), Input(input_index=0), Literal(value=2000, push_type=<pyshgp.push.types.PushIntType object at 0x7f3775f2a580>), InstructionMeta(name='int_gte', code_blocks=0), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='large', push_type=<pyshgp.push.types.PushStrType object at 0x7f3775f2a430>), InstructionMeta(name='print_str', code_blocks=0), Closer(), InstructionMeta(name='exec_if', code_blocks=2), Literal(value='small', push_type=<pyshgp.push.types.PushStrType object at 0x7f3775f2a310>), InstructionMeta(name='print_str', code_blocks=0)])
	Program:
	 (input_0 1000 int_lt input_0 2000 int_gte exec_if ("large" print_str) (exec_if ("small" print_str) ()))
	Error vector:
	 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
	Total error:
	 0
	Test error:
	 0
	Time:
	 00:01:08
